{"version":3,"sources":["config/config.dev.js","config/dev_metadata.js","config/config.prod-dev.js","config/proddev_metadata.js","config/config.prod.js","config/prod_metadata.js","components/AutocompleteSearch/index.js","components/MenuBar/index.js","components/Connections/index.js","components/OpsList/index.js","components/DataTabs/index.js","components/SideDrawer/index.js","components/MapPanel/index.js","components/BottomDrawer/index.js","components/EditFieldDrawer/index.js","components/StatsBar/index.js","components/Operators/index.js","components/App/index.js","config/index.js","modules/App/stateTree.js","modules/DataTabs/chains.js","modules/OpsList/chains.js","modules/StatsBar/chains.js","modules/operations/sequences.js","modules/FldList/chains.js","modules/MapPanel/chains.js","modules/BottomDrawer/chains.js","modules/fields/sequences.js","modules/App/sequences.js","modules/App/index.js","modules/Connections/chains.js","modules/MenuBar/index.js","modules/SideDrawer/chains.js","modules/SideDrawer/index.js","modules/DataTabs/index.js","modules/User/chains.js","modules/User/index.js","modules/MapPanel/stateTree.js","modules/MapPanel/index.js","modules/BottomDrawer/index.js","modules/AutocompleteSearch/chains.js","modules/AutocompleteSearch/index.js","modules/OpsList/stateTree.js","modules/OpsList/index.js","modules/FldList/index.js","modules/EditFieldDrawer/index.js","modules/Connections/index.js","modules/operations/index.js","modules/fields/index.js","modules/StatsBar/stateTree.js","modules/StatsBar/index.js","modules/window/sequences.js","modules/window/index.js","modules/operators/sequences.js","modules/operators/index.js","modules/index.js","controller.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","oadaDomain","process","REACT_APP_OADA_DOMAIN","websiteDomain","parseInt","window","location","port","metadata","require","devtoolsPort","defaultNewConnectionURL","appName","contentType","bookmarksOperations","bookmarksFields","module","exports","AutocompleteSearch","inputProps","_this","this","InputProps","classes","isMenuBar","ref","other","Object","objectWithoutProperties","react_default","a","createElement","TextField_default","assign","onFocus","props","openSuggestions","id","onBlur","closeSuggestions","value","inputRef","objectSpread","style","color","input","endAdornment","Input","position","IconButton_default","aria-label","className","button","onClick","operationInputTyped","inputText","inputType","fieldInputTyped","label","InputLabelProps","shrink","inputValue","_this2","suggestions","values","operationSuggestions","filter","suggestion","_","find","s","toLowerCase","includes","trim","connection_id","unshift","action","type","fieldSuggestions","params","_this3","index","itemProps","isHighlighted","highlightedIndex","isSelected","selectedItem","material_ui_Menu","key","event","addOperationClicked","addFieldClicked","selected","component","display","fontStyle","fontWeight","operationSelected","item","fieldSelected","_this4","addOperationDisabled","addFieldDisabled","disabled","Icon_default","fontSize","_this5","currentOperationId","currentFieldId","editOperationClicked","editFieldClicked","ret","operationInputText","map","operation","console","log","_this6","_this$props","sourceAppBar","downshift_esm","isOpen","operationsSuggestionsOpen","fieldsSuggestionsOpen","fieldInputText","itemToString","onStateChange","changes","stateAndHelpers","Downshift","stateChangeTypes","keyDownEnter","clickItem","changeInput","mouseUp","blurInput","_ref","getInputProps","getItemProps","inputBox","renderInput","fullWidth","placeholder","Paper_default","square","suggestionsContainerOpen","suggestionsList","getSuggestions","renderSuggestion","React","Component","connect","state","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","signal","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","operationCleared","_templateObject19","_templateObject20","_templateObject21","fieldCleared","_templateObject22","withStyles","theme","container","flexDirection","flexGrow","alignItems","height","width","marginTop","spacing","unit","marginBottom","marginLeft","marginRight","zIndex","padding","listStyleType","pointerEvents","opacity","touchAction","withTheme","MenuBar","drawer_button","handleSideDrawerOpen","classNames","menuButton","currentOperation","sideDrawerOpen","hide","Menu_default","settings_button","connectionsClicked","More_default","settings_button_text","Button_default","add_field","fieldsEditing","emptyDataSet","AddBox_default","add_field_text","ops_input","addOperatorClicked","components_AutocompleteSearch","AppBar_default","appBar","Toolbar_default","disableGutters","Typography_default","variant","align","typography","noWrap","buttons","isSmall","orientation","MenuBar_templateObject","MenuBar_templateObject2","MenuBar_templateObject3","MenuBar_templateObject4","MenuBar_templateObject5","MenuBar_templateObject6","MenuBar_templateObject7","MenuBar_templateObject8","signoutClicked","MenuBar_templateObject9","clearCacheClicked","MenuBar_templateObject10","addNewFieldClicked","MenuBar_templateObject11","showStatsClicked","MenuBar_templateObject12","MenuBar_templateObject13","operations","MenuBar_templateObject14","MenuBar_templateObject15","MenuBar_templateObject16","MenuBar_templateObject17","appIsMobile","MenuBar_templateObject18","MenuBar_templateObject19","MenuBar_templateObject20","MenuBar_templateObject21","infoBarOperationsOpen","MenuBar_templateObject22","_templateObject23","_templateObject24","_templateObject25","_templateObject26","transition","transitions","create","easing","sharp","duration","leavingScreen","order","flex","components_Connections","oadaDomainText","Connections_templateObject","oadaFieldsDomainText","Connections_templateObject2","show","Connections_templateObject3","submitClicked","Connections_templateObject4","cancelClicked","Connections_templateObject5","oadaDomainChanged","Connections_templateObject6","oadaFieldsDomainChanged","Connections_templateObject7","_React$Component","Connections","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","Dialog_default","open","Dialog","index_es","onChange","e","target","autoFocus","OpsList","color1","color2","bannerText","area","reduce","b","boundary","percent","Math","round","List","handleCollapse","status","primary","length","secondary","ExpandMore_default","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","fieldRecord","nested","disableTypography","name","since","by","unplanned","planned","started","completed","total_area","keys","root","subheader","ListSubheader_default","renderItem","currentOperationName","OpsList_templateObject","OpsList_templateObject2","OpsList_templateObject3","OpsList_templateObject4","selectField","OpsList_templateObject5","maxWidth","backgroundColor","palette","background","paper","paddingLeft","TabContainer","children","dir","DataTabs","ops_list","components_OpsList","lib_default","axis","direction","tabValue","onChangeIndex","handleChangeIndex","components_DataTabs","DataTabs_templateObject","currentInputText","DataTabs_templateObject2","DataTabs_templateObject3","handleFieldEdited","DataTabs_templateObject4","handleChange","DataTabs_templateObject5","DataTabs_templateObject6","clearFieldClicked","DataTabs_templateObject7","justifyContent","inputContainer","SideDrawer","data_tabs","Drawer_default","drawerPaper","anchor","drawerInner","drawerHeader","ChevronLeft_default","components_SideDrawer","SideDrawer_templateObject","SideDrawer_templateObject2","SideDrawer_templateObject3","dataTabsToggle","SideDrawer_templateObject4","mixins","toolbar","Overlay","LayersControl","MapPanel","evt","fieldEditing","moving","dragging","originalEvent","offsetParent","mouseDownOnMap","pt","latlng","lng","lat","refs","leafletElement","locate","color_code","markerList","currentField","geojson","coordinates","forEach","i","push","Marker","selectedId","allOperations","fields","draggable","onDrag","markerDragged","_latlng","idx","onDragStart","markerDragStarted","onDragEnd","markerDragEnded","onDblClick","deleteCoordinate","new_field_polygon","GeoJSON","fieldPolygon","data","handleFieldPolygonClicked","field","forceUpdate","uuid","fillOpacity","mapContainer","Map","onLocationfound","locationFound","validateMouseEvent","onMoveStart","mapMoveStarted","onMoveend","mapMoved","getCenter","zoom","getZoom","center","attributionControl","isMobile","zoomControl","mapZoom","TileLayer","url","attribution","checked","FeatureGroup","MapPanel_templateObject","MapPanel_templateObject2","isLoading","MapPanel_templateObject3","MapPanel_templateObject4","geohashPolygons","MapPanel_templateObject5","MapPanel_templateObject6","MapPanel_templateObject7","MapPanel_templateObject8","MapPanel_templateObject9","MapPanel_templateObject10","MapPanel_templateObject11","MapPanel_templateObject12","currentStatus","MapPanel_templateObject13","MapPanel_templateObject14","MapPanel_templateObject15","MapPanel_templateObject16","MapPanel_templateObject17","MapPanel_templateObject18","MapPanel_templateObject19","MapPanel_templateObject20","MapPanel_templateObject21","MapPanel_templateObject22","MapPanel_templateObject23","MapPanel_templateObject24","MapPanel_templateObject25","MapPanel_templateObject26","saveEdited","_templateObject27","leaflet-container","strokeWidth","strokeOpacity","BottomDrawer","textField","currentTimestamp","setCurrentSelectionStatusTimestamp","timestamp","editFieldButton","Edit_default","noValidate","form","newOperationName","newOperationNameTyped","margin","disabledNewOperation","addNewOperation","cancelNewOperation","newFieldName","newFieldNameTyped","addNewField","datePicker","renderDatePicker","editField","renderEditField","select","currentMarker","setCurrentSelectionStatusMarker","marker","allOperators","operator","middle","Form","required","formControl","Radio","group","setCurrentSelectionStatusStatus","editFieldStatus","statusValue","statusButton","control","Radio_default","checkedIcon","icon","bottomMenu","tabIndex","role","onKeyDown","headerText","currentOperationLabel","currentFieldLabel","saveCurrentSelectionStatus","_this7","header_item","renderHeaderItem","add_operation_form","renderAddOperationForm","status_radio_buttons","renderRadioButtonGroup","bottomDrawerOpen","onClose","BottomDrawer_templateObject","BottomDrawer_templateObject2","operatorMenuOpen","BottomDrawer_templateObject3","BottomDrawer_templateObject4","BottomDrawer_templateObject5","BottomDrawer_templateObject6","BottomDrawer_templateObject7","BottomDrawer_templateObject8","BottomDrawer_templateObject9","BottomDrawer_templateObject10","BottomDrawer_templateObject11","BottomDrawer_templateObject12","BottomDrawer_templateObject13","BottomDrawer_templateObject14","BottomDrawer_templateObject15","BottomDrawer_templateObject16","BottomDrawer_templateObject17","resetCurrentSelectionStatus","BottomDrawer_templateObject18","BottomDrawer_templateObject19","setDisabledNewOperation","BottomDrawer_templateObject20","BottomDrawer_templateObject21","handleOperatorMenuOpen","BottomDrawer_templateObject22","handleOperatorMenuClose","BottomDrawer_templateObject23","handleBottomDrawerOpen","BottomDrawer_templateObject24","BottomDrawer_templateObject25","BottomDrawer_templateObject26","flexWrap","fontColor","minWidth","rightPadding","confirmIconGroup","EditFieldDrawer","editFieldDrawer","htmlFor","editFieldDrawerBottom","editFieldText","fieldText","fieldTextChanged","farmText","farmTextChanged","editFieldButtons","confirm","disabledNewField","cancelNewField","EditFieldDrawer_templateObject","EditFieldDrawer_templateObject2","EditFieldDrawer_templateObject3","fieldSuggestionsOpen","EditFieldDrawer_templateObject4","farmSuggestionsOpen","EditFieldDrawer_templateObject5","fieldId","EditFieldDrawer_templateObject6","farmId","EditFieldDrawer_templateObject7","EditFieldDrawer_templateObject8","addFarmClicked","EditFieldDrawer_templateObject9","EditFieldDrawer_templateObject10","EditFieldDrawer_templateObject11","EditFieldDrawer_templateObject12","farmCleared","EditFieldDrawer_templateObject13","EditFieldDrawer_templateObject14","EditFieldDrawer_templateObject15","EditFieldDrawer_templateObject16","EditFieldDrawer_templateObject17","title","StatsBar","OpsListCompletedArea","flexContainer","hidden","concat","pill","OpsListCompletedPercentage","OpsListStartedArea","OpsListStartedPercentage","OpsListPlannedArea","OpsListPlannedPercentage","StatsBar_templateObject","StatsBar_templateObject2","StatsBar_templateObject3","StatsBar_templateObject4","StatsBar_templateObject5","StatsBar_templateObject6","OpsListCompletedTotalFields","StatsBar_templateObject7","StatsBar_templateObject8","StatsBar_templateObject9","OpsListStartedTotalFields","StatsBar_templateObject10","StatsBar_templateObject11","StatsBar_templateObject12","OpsListPlannedTotalFields","StatsBar_templateObject13","handleUpdateAction","StatsBar_templateObject14","handleCloseCompleted","StatsBar_templateObject15","handleCloseStarted","StatsBar_templateObject16","handleClosePlanned","StatsBar_templateObject17","common","white","textAlign","borderRadius","textShadow","EditOperatorDrawer","operatorDrawer","operatorDrawerBottom","editOperatorText","firstNameText","firstNameTextChanged","lastNameText","lastNameTextChanged","editOperatorButtons","editOperatorButton","disabledNewOperator","cancelNewOperator","Operators_templateObject","Operators_templateObject2","operators","Operators_templateObject3","operatorSuggestionsOpen","Operators_templateObject4","operatorId","Operators_templateObject5","Operators_templateObject6","editOperatorClicked","Operators_templateObject7","operatorCleared","Operators_templateObject8","Operators_templateObject9","Operators_templateObject10","Operators_templateObject11","Operators_templateObject12","Operators_templateObject13","textOperator","App","windowResized","innerWidth","innerHeight","addEventListener","updateDimensions","bind","removeEventListener","init","loadFieldListData","switchTab","app","components_MenuBar","components_MapPanel","components_BottomDrawer","operatorEditing","components_EditFieldDrawer","Operators","App_templateObject","App_templateObject2","App_templateObject3","App_templateObject4","App_templateObject5","App_templateObject6","top","statsBar","overrides","default","defaults","scope","REACT_APP_PROD_DEV","toExport","stateTree","model","tags","is_mobile","settings","view","editing","set","chains_templateObject","chains_templateObject2","_ref2","toggleTab","_ref3","get","loadData","opid","fieldStub","dataTabsHandleChange","clearData","toggle","statsBarHandleUpdate","_opsList","totalArea","operationStatus","totalFields","toFixed","_localPath","_TYPE","tree","bookmarks","_type","_rev","*","fetch","sequence","path","watch","signals","requests","oada","when","sequences_templateObject","sequences_templateObject2","true","mapOadaToOperations","mapOperations","loadOpsLstData","sequences_templateObject3","false","sequences_templateObject4","fetchNoWatch","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","_ref9","request","domain","put","_ref4","connections","JSON","parse","localStorage","getItem","connectionId","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","sequences_templateObject12","sequences_templateObject13","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","sequences_templateObject18","sequences_templateObject19","sequences_templateObject20","refresh","sequences_templateObject21","sequences_templateObject22","sequences_templateObject23","sequences_templateObject24","sequences_templateObject25","handleWatchUpdate","_ref5","Promise","op","currentOperationID","then","_ref6","addOperation","_ref7","created","Date","now","_ref8","putFieldOperation","_ref10","operation_payload","deleteFieldOperation","_ref11","delete","_ref12","unset","updateOperation","equals","sequences_templateObject26","otherwise","handleFieldUpdate","all_fields","fld_id","operationsRecords","operationRecord","hasOwnProperty","obj","collapse","field_id","operation_id","handleChronologyCollapse","startMovingMap","MapPanel_chains_templateObject","doneMovingMap","MapPanel_chains_templateObject2","handleMapClick","recalculateArea","getFieldBoundingBox","validateNewFieldButton","handleLocationFound","endMarkerDrag","chains_templateObject3","startMarkerDrag","chains_templateObject4","markerDragging","handleMapMoved","setFieldOnMapCenter","centroid","tempObject","splice","gjArea","geometry","validateFieldCoordinates","bbox","geojsonPolygon","coords","north","south","east","west","j","computeBoundingBox","c1","c2","handleDrawerOpen","BottomDrawer_chains_templateObject","openBottomDrawerForStatusUpdate","BottomDrawer_chains_templateObject2","BottomDrawer_chains_templateObject3","BottomDrawer_chains_templateObject4","chains_templateObject5","_METERS_TO_ACRES","fields-index","toConsumableArray","loadFldData","setCurrentField","fields_sequences_templateObject","fields_sequences_templateObject2","operationId","mapOadaToFields","curFields","fieldGroup","field_object","record","farm","centroid_object","geojson_area","reverse","visible","mapOadaToFarms","curFarms","putFarm","_id","disableNewFieldButton","fields_sequences_templateObject3","fields_sequences_templateObject4","putField","farmName","handleFieldSelected","handleFarmSelected","fields_sequences_templateObject5","fields_sequences_templateObject6","saveEditedField","fields_sequences_templateObject7","fields_sequences_templateObject8","fields_sequences_templateObject9","fields_sequences_templateObject10","fields_sequences_templateObject11","fields_sequences_templateObject12","fields_sequences_templateObject13","fields_sequences_templateObject14","createFieldRecord","addNewFarm","farmRecord","_ref13","currentOperationFieldStatus","getCurrentOperationFieldStatus","today","dd","getDate","mm","getMonth","getFullYear","_ref14","fieldName","coordinatesOk","_ref15","_ref16","fields_sequences_templateObject15","fields_sequences_templateObject16","fields_sequences_templateObject17","fields_sequences_templateObject18","fields_sequences_templateObject19","fields_sequences_templateObject20","_CURRENT_METADATA","_CURRENT_REDIRECT","md","MobileDetect","navigator","userAgent","mobile","App_sequences_templateObject","options","redirect","token","clearCacheButtonClicked","LocalCache","StorageModule","json","sync","prefix","Module","modules","signOut","Connections_chains_templateObject","Connections_chains_templateObject2","Connections_chains_templateObject3","Connections_chains_templateObject4","Connections_chains_templateObject5","updateOadaDomain","chains_templateObject6","chains_templateObject7","updateOadaFieldsDomain","chains_templateObject8","chains_templateObject9","chains_templateObject10","loadFldListData","setConnection","chains_templateObject11","chains_templateObject12","chains_templateObject13","chains_templateObject14","chains_templateObject15","cerebralModule","resetCache","chains_templateObject16","chains_templateObject17","cancelConnection","chains_templateObject18","chains_templateObject19","chains_templateObject20","chains_templateObject21","chains_templateObject22","showConnections","chains_templateObject23","SideDrawer_chains_templateObject","modules_DataTabs","saveCurrentSelectionStatusAction","loadOpsData","handleOperationSelected","setCurrentOperation","handleOperationCleared","clearOpsData","_addNewOperation","_inputText","_operations","strUUID","ops_id","_status","opId","currentSelection","suggestionsOpen","newFieldDisabled","accessibleUsers","servio","pguruji","aultac","sanoel","modules_BottomDrawer","menu","AutocompleteSearch_chains_templateObject","AutocompleteSearch_chains_templateObject2","stringify","handleOperationEdited","_found","_CURRENT_HOST","modules_Connections","oada_domain_text","oada_fields_domain_text","oada_domain","oada_fields_domain","modules_operations","records","loading","fieldsChanged","operationClicked","farms","new_field","resized","windowSize","addNewOperator","operators_sequences_templateObject","mapOadaToOperators","firstName","lastName","disableNewOperatorButton","operators_sequences_templateObject2","putOperator","handleoperatorselected","setCurrentOperator","saveEditedOperator","operators_sequences_templateObject3","operators_sequences_templateObject4","operators_sequences_templateObject5","operators_sequences_templateObject6","operators_sequences_templateObject7","_firstName","_lastName","createOperatorRecord","validateNewOperatorButton","new_operator","_modules","oadaModule","User","FldList","oadaFields","defineProperty","providers","oadaProvider","Devtools","Controller","root_module","devtools","host","muiTheme","createMuiTheme","render","_cerebral_react","controller","MuiThemeProvider_default","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.2234698a.chunk.js","sourcesContent":["//Local Development Values\nconst devtoolsPort = 8787;\nconst oadaDomain = process.env.REACT_APP_OADA_DOMAIN || 'https://yield.oada-dev.com';\nconst websiteDomain = 'http://localhost:' + parseInt(window.location.port, 10);\nconst metadata = require('./dev_metadata.js');\nconst defaultNewConnectionURL = 'https://localhost';\nconst appName = \"FieldWorkApp\";\nconst contentType = 'application/vnd.oada.yield.1+json';\nconst bookmarksOperations = '/bookmarks/operations';\nconst bookmarksFields = '/bookmarks/fields';\n\nexport default {\n  oadaDomain,\n  devtoolsPort,\n  websiteDomain,\n  metadata,\n  defaultNewConnectionURL,\n  appName,\n  contentType,\n  bookmarksOperations,\n  bookmarksFields\n}\n","module.exports = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n","//Production Development Values\nconst devtoolsPort = 8787;\nconst oadaDomain = process.env.REACT_APP_OADA_DOMAIN || 'https://yield.oada-dev.com';\nconst websiteDomain = 'https://fieldworkapp.oada-dev.com:8080';\nconst metadata = require('./proddev_metadata');\nconst defaultNewConnectionURL = 'https://fieldworkapp.oada-dev.com';\n\nexport default {\n  oadaDomain,\n  devtoolsPort,\n  websiteDomain,\n  metadata,\n  defaultNewConnectionURL\n}\n","module.exports = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n","//Production Values\nconst devtoolsPort = 8787;\nconst oadaDomain = process.env.REACT_APP_OADA_DOMAIN || 'https://yield.oada-dev.com';\nconst websiteDomain = 'https://fieldworkapp.oada-dev.com';\nconst metadata = require('./prod_metadata.js');\nconst defaultNewConnectionURL = 'https://fieldworkapp.oada-dev.com';\nconst appName = \"FieldWorkApp\";\nconst contentType = 'application/vnd.oada.yield.1+json';\nconst bookmarksOperations = '/bookmarks/operations';\nconst bookmarksFields = '/bookmarks/fields';\n\nexport default {\n  oadaDomain,\n  devtoolsPort,\n  websiteDomain,\n  metadata,\n  defaultNewConnectionURL,\n  appName,\n  contentType,\n  bookmarksOperations,\n  bookmarksFields\n}\n","module.exports = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport { state, signal} from 'cerebral/tags';\nimport _ from 'lodash';\nimport TextField from 'material-ui/TextField';\nimport { InputAdornment } from 'material-ui/Input';\nimport Paper from 'material-ui/Paper';\nimport { MenuItem } from 'material-ui/Menu';\nimport IconButton from 'material-ui/IconButton';\nimport Icon from 'material-ui/Icon';\nimport Downshift from 'downshift';\n\nconst styles = theme => ( {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    height: 250,\n    width: 50,\n  },\n  inputBox: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    //height: 50,\n    //width: 220,\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    width: 180,\n    marginTop: theme.spacing.unit * 0.1,\n    marginBottom: theme.spacing.unit * 0,\n    marginLeft: 30,\n    marginRight: 0,\n    zIndex: 3,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    marginTop: theme.spacing.unit * 0.1,\n    marginBottom: theme.spacing.unit * 0,\n    marginLeft: 0,\n    marginRight: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  disabled: {\n    pointerEvents: 'none',\n    opacity: 0.4,\n    touchAction: 'none',\n  },\n});\n\nlet temp = \"FieldWorkApp\";\n//this.props.operationSuggestions[this.props.currentOperationId].label\n\nclass AutocompleteSearch extends React.Component {\n\n  renderInput(inputProps) {\n    const { InputProps, classes, isMenuBar, ref, ...other } = inputProps;\n    return (\n      <TextField\n        onFocus={() => {this.props.openSuggestions({id: this.props.id})}}\n        onBlur={() => {this.props.closeSuggestions({id: this.props.id})}}\n        value={temp}\n        {...other}\n        inputRef={ref}\n        InputProps={{\n          style: {color: '#FAFAFA'},\n          classes: {\n            input: classes.input,\n          },\n          //startAdornment: (<InputAdornment position=\"start\"><Icon>search</Icon></InputAdornment>),\n          endAdornment: (\n            <InputAdornment position=\"start\">\n              <IconButton\n                aria-label=\"clear textfield\"\n                className={classes.button}\n                onClick={ () => {\n                  if (this.props.id === 'ops-input') {\n                    this.props.operationInputTyped({inputText: \"\", inputType: \"operation\"});\n                  } else {\n                    this.props.fieldInputTyped({inputText: \"\", inputType: \"field\"});\n                  }\n                } }\n              >\n\n              </IconButton>\n            </InputAdornment>\n          ),\n          ...InputProps,\n        }}\n        label={this.props.id === 'ops-input' ? (isMenuBar ? \"\" : \"Operation\") : \"Field\"}\n        InputLabelProps={{style: {color: 'white'}, shrink: true}}\n      />\n    );\n  }\n\n  getSuggestions(inputValue) {\n    let suggestions = [];\n\n    if (this.props.id === 'ops-input') {\n        //console.log('-->operationSuggestions', this.props.operationSuggestions);\n      suggestions = Object.values(this.props.operationSuggestions || {}).filter(suggestion => (\n        inputValue === \"\" || _.find(this.props.operationSuggestions, s => s.label === inputValue) ||\n        // inputValue === \"\" || Object.values(this.props.operationSuggestions).map(suggestion => (suggestion.label)).includes(inputValue) ||\n          suggestion.label.toLowerCase().includes(inputValue.trim().toLowerCase())\n      ));\n\n        if(this.props.connection_id !== \"none\")\n            suggestions.unshift({'action': 'add', type: 'operation', label: 'add new operation'});\n\n      return suggestions;\n    }//if\n\n    if (this.props.id === 'fld-input') {\n      suggestions = Object.values(this.props.fieldSuggestions).filter(suggestion => (\n        inputValue === \"\" || _.find(this.props.fieldSuggestions, s => s.label === inputValue) ||\n        suggestion.label.toLowerCase().includes(inputValue.trim().toLowerCase())\n      ));\n\n      /* add button at the beginning of the drop down menu */\n      suggestions.unshift({'action': 'add', type: 'field', label: 'add new field'});\n      return suggestions;\n    }\n  }//getSuggestions\n\n  renderSuggestion(params) {\n    const { suggestion, index, itemProps, highlightedIndex, selectedItem } = params;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = selectedItem === suggestion.label;\n\n    if ('action' in suggestion && suggestion.action === 'add') {\n      return (\n        <MenuItem\n          {...itemProps}\n          key={suggestion.label}\n          onClick={(event) => {\n            (this.props.id === 'ops-input') ?\n              this.props.addOperationClicked({}) :\n              this.props.addFieldClicked({})\n            }\n          }\n          selected={isHighlighted}\n          component=\"div\"\n          style={{\n            display: 'block',\n            color: 'green',\n            fontStyle: 'italic',\n            fontWeight: isSelected ? 500 : 400,\n          }}\n        >\n          {suggestion.label}\n        </MenuItem>\n      );\n    } else {\n      return (\n        <MenuItem\n          {...itemProps}\n          key={suggestion.label}\n          onClick={(event) => {\n            (this.props.id === 'ops-input') ?\n              this.props.operationSelected({item: suggestion}) :\n              this.props.fieldSelected({item: suggestion})\n            }}\n          selected={isHighlighted}\n          component=\"div\"\n          style={{\n            display: 'block',\n            fontWeight: isSelected ? 500 : 400,\n          }}\n        >\n          {suggestion.label}\n        </MenuItem>\n      );\n    }\n  }\n\n  renderAddButton(params) {\n    const { classes, addOperationDisabled, addFieldDisabled } = params;\n    return (\n      <IconButton\n        aria-label=\"add\"\n        className={classes.button}\n        disabled={this.props.id === 'ops-input' ? addOperationDisabled : addFieldDisabled}\n        onClick={\n          this.props.id === 'ops-input' ?\n            () => {this.props.addOperationClicked({})} :\n            () => {this.props.addFieldClicked({})}\n        }\n      >\n        <Icon style={{'color': 'white', 'fontSize': 32}}>add_circle</Icon>\n      </IconButton>\n    )\n  }\n\n  renderEditButton(params) {\n    const { classes } = params;\n    return (\n      <IconButton\n        aria-label=\"fields\"\n        disabled={this.props.id === 'ops-input' ? !(this.props.currentOperationId) : !(this.props.currentFieldId)}\n        className={classes.button}\n        onClick={\n          this.props.id === 'ops-input' ?\n            (event) => { this.props.editOperationClicked({event: event}) } :\n            (event) => { this.props.editFieldClicked({event: event}) }\n        }\n      >\n        <Icon style={{'color': 'white', 'fontSize': 32}}>mode_edit</Icon>\n      </IconButton>\n    )\n  }\n\n  isAddOperationDisabled() {\n    const ret = (\n      (this.props.operationInputText.trim() === \"\") ||\n      (\n        Object.values(this.props.operationSuggestions).map(operation => {\n          return operation.label.toLowerCase();\n        }).includes(this.props.operationInputText.trim().toLowerCase())\n      )\n    );\n    if (ret) { console.log(\"AddOperationDisabled\"); }\n    if (!ret) { console.log(\"AddOperationEnabled\"); }\n  }\n\n\n  render() {\n    const { classes, sourceAppBar } = this.props;\n\n    return(\n      <Downshift\n        isOpen={this.props.id === 'ops-input' ? this.props.operationsSuggestionsOpen : this.props.fieldsSuggestionsOpen}\n        selectedItem={this.props.id === 'ops-input' ? this.props.currentOperationId : this.props.currentFieldId}\n        inputValue={this.props.id === 'ops-input' ? this.props.operationInputText : this.props.fieldInputText}\n        itemToString={(item) => (item == null ? '' : item.label)}\n        onStateChange={(changes, stateAndHelpers) => {\n\n          const type = (this.props.id === 'ops-input') ? 'operation' : 'field';\n          switch (changes.type) {\n            case Downshift.stateChangeTypes.keyDownEnter:\n            case Downshift.stateChangeTypes.clickItem:\n              if (type === 'operation') {\n                this.props.operationSelected({item: changes.selectedItem});\n              } else {\n                this.props.fieldSelected({item: changes.selectedItem});\n              }\n              break;\n            case Downshift.stateChangeTypes.changeInput:\n              if (type === 'operation') {\n                this.props.operationInputTyped({inputText: changes.inputValue, inputType: type});\n              } else {\n                this.props.fieldInputTyped({inputText: changes.inputValue, inputType: type});\n              }\n              break;\n            case Downshift.stateChangeTypes.mouseUp:\n            case Downshift.stateChangeTypes.blurInput:\n              if (type === 'operation') {\n                if (!(!this.props.currentOperationId) && this.props.operationInputText === \"\") {\n                  //this.props.operationSelected({item: this.props.operationSuggestions[this.props.currentOperationId]});\n                }\n              } else {\n                if (!(!this.props.currentFieldId)) {\n                  this.props.fieldSelected({item: this.props.fieldSuggestions[this.props.currentFieldId]});\n                }\n              }\n              break;\n            default:\n              break;\n          }\n        }}\n      >\n        {({ getInputProps, getItemProps, isOpen, inputValue, selectedItem, highlightedIndex }) => (\n          <div>\n\n            <div className={classes.inputBox}>\n              {this.renderInput({\n                isMenuBar: sourceAppBar,\n                fullWidth: false,\n                classes,\n                InputProps: getInputProps({\n                  placeholder: (this.props.id === 'ops-input' ? 'Operation' : (this.props.id === 'fld-input' ? 'Field' : this.props.id)),\n                  id: 'autocomplete-search-' + this.props.id,\n                }),\n              })}\n            </div>\n            {isOpen ? (\n              <Paper square className={classes.suggestionsContainerOpen}>\n                <div className={classes.suggestionsList}>\n                  {this.getSuggestions(inputValue).map((suggestion, index) =>\n                    this.renderSuggestion({\n                      suggestion,\n                      index,\n                      itemProps: getItemProps({\n                        item: suggestion\n                      }),\n                      highlightedIndex,\n                      selectedItem\n                    }),\n                  )}\n                </div>\n              </Paper>\n            ) : null}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n\nAutocompleteSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    operationSuggestions:       state`operations.records`,\n    connection_id:              state`operations.connection_id`,\n    currentOperationId:         state`User.currentSelection.operation.id`,\n    operationInputText:         state`User.currentSelection.operation.inputText`,\n    operationsSuggestionsOpen:  state`User.currentSelection.operation.suggestionsOpen`,\n    fieldSuggestions:           state`fields.records`,\n    currentFieldId:             state`fields.selectedId`,\n    fieldsSuggestionsOpen:      state`fields.new_field.field.suggestionsOpen`,\n    fieldInputText:             state`fields.records.${state`fields.selectedId`}.name`,\n\n    operationInputTyped:        signal`AutocompleteSearch.operationInputTyped`,\n    fieldInputTyped:            signal`AutocompleteSearch.fieldInputTyped`,\n    addOperationClicked:        signal`AutocompleteSearch.addOperationClicked`,\n    editOperationClicked:       signal`AutocompleteSearch.handleOperationEdited`,\n    editFieldClicked:           signal`AutocompleteSearch.handleFieldEdited`,\n    openSuggestions:            signal`AutocompleteSearch.openSuggestions`,\n    closeSuggestions:           signal`AutocompleteSearch.closeSuggestions`,\n    operationSelected:          signal`User.handleOperationSelected`,\n    operationCleared:           signal`User.handleOperationCleared`,\n    addFieldClicked:            signal`User.addFieldClicked`,\n    fieldSelected:              signal`fields.handleFieldSelected`,\n    fieldCleared:               signal`fields.handleFieldCleared`,\n\n  },\n  withStyles(styles, { withTheme: true })(AutocompleteSearch)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"material-ui/styles\";\nimport classNames from \"classnames\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport AppBar from \"material-ui/AppBar\";\nimport Toolbar from \"material-ui/Toolbar\";\nimport IconButton from \"material-ui/IconButton\";\nimport Button from \"material-ui/Button\";\nimport MenuIcon from \"material-ui-icons/Menu\";\nimport Typography from \"material-ui/Typography\";\nimport MoreVertIcon from \"material-ui-icons/More\";\n// import ExitIcon from 'material-ui-icons/ExitToApp';\n// import ClearIcon from 'material-ui-icons/ClearAll';\nimport AutocompleteSearch from \"../AutocompleteSearch\";\nimport AddBoxIcon from \"material-ui-icons/AddBox\";\n//import StatsTable from '../StatsTable';\n//const drawerWidth = 300;\n\nconst styles = theme => ({\n  appBar: {\n    display: \"flex\",\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    height: 64,\n    order: 1\n  },\n  buttons: {\n    // flex: 1\n  },\n  menuButton: {\n    marginLeft: 2,\n    marginRight: 2\n  },\n  hide: {\n    display: \"none\"\n  },\n  disabled: {\n    pointerEvents: \"none\",\n    opacity: 0.4,\n    touchAction: \"none\"\n  },\n  typography: {\n    flex: 1,\n    width: 200\n  }\n});\n\nclass MenuBar extends React.Component {\n  render() {\n    const { classes } = this.props; //, theme\n\n    const drawer_button = (\n      <IconButton\n        key={0}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => {\n          this.props.handleSideDrawerOpen({});\n        }}\n        className={classNames(\n          classes.menuButton,\n          this.props.currentOperation &&\n            this.props.sideDrawerOpen &&\n            classes.hide,\n          !this.props.currentOperation && classes.disabled\n        )}\n      >\n        <MenuIcon />\n      </IconButton>\n    );\n\n    const settings_button = (\n      <IconButton\n        key={1}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.connectionsClicked({})}\n        className={classes.menuButton}\n        //component=\"div\"\n      >\n        <MoreVertIcon />\n      </IconButton>\n    );\n\n    const settings_button_text = (\n      <Button\n        key={2}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.connectionsClicked({})}\n        className={classes.menuButton}\n        disabled={this.props.connection_id === \"none\"}\n      >\n        Connect\n      </Button>\n    );\n\n    // const signout_button = (\n    //         <IconButton\n    //             key={2}\n    //             color=\"inherit\"\n    //             aria-label=\"open drawer\"\n    //             onClick={()=>this.props.signoutClicked({})}\n    //             className={classes.menuButton}\n    //           >\n    //         <ExitIcon/>\n    //         </IconButton>\n    // );\n    //\n    // const clearcache_button = (\n    //         <IconButton\n    //             key={3}\n    //             color=\"inherit\"\n    //             aria-label=\"open drawer\"\n    //             onClick={()=>this.props.clearCacheClicked({})}\n    //             className={classes.menuButton}\n    //           >\n    //         <ClearIcon/>\n    //         </IconButton>\n    // );\n    //\n    const add_field = (\n      <IconButton\n        key={4}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.addFieldClicked({})}\n        className={classes.menuButton}\n        disabled={\n          this.props.connection_id === \"none\" || this.props.fieldsEditing || this.props.emptyDataSet\n        }\n      >\n        <AddBoxIcon />\n      </IconButton>\n    );\n\n    const add_field_text = (\n      <Button\n        key={5}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.addFieldClicked({})}\n        className={classes.menuButton}\n        disabled={\n          this.props.connection_id === \"none\" || this.props.fieldsEditing || this.props.emptyDataSet\n        }\n      >\n        Add Field\n      </Button>\n    );\n\n    const add_operator_text = (\n      <Button\n          key={6}\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={()=>this.props.addOperatorClicked({})}\n          className={classes.menuButton}\n          disabled={this.props.connection_id === \"none\"}\n      >\n          Add Operator\n      </Button>\n    );\n\n    const ops_input = (\n      <AutocompleteSearch\n        id=\"ops-input\"\n        style={{ width: 200 }}\n        sourceAppBar={true}\n      />\n    );\n\n    return (\n      <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar\n          className={classes.appBar}\n          disableGutters={\n            !(this.props.sideDrawerOpen && this.props.currentOperation)\n          }\n        >\n          {drawer_button}\n\n          <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            style={{ align: \"left\" }}\n            className={classes.typography}\n            noWrap\n          >\n            {!this.props.sideDrawerOpen ? ops_input : null}\n          </Typography>\n\n          <div className={classes.buttons}>\n            {(this.props.isSmall && this.props.orientation === \"portrait\") ? settings_button : settings_button_text}\n            {(this.props.isSmall && this.props.orientation === \"portrait\") ? add_field : add_field_text}\n            {/*{(this.props.isSmall && this.props.orientation === \"portrait\") ? add_operator_text : add_operator_text}*/}\n          </div>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nMenuBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    addFieldClicked:            signal`fields.addFieldClicked`,\n    operationInputTyped:        signal`AutocompleteSearch.operationInputTyped`,\n    addOperationClicked:        signal`AutocompleteSearch.addOperationClicked`,\n    editOperationClicked:       signal`AutocompleteSearch.handleOperationEdited`,\n    operationCleared:           signal`User.handleOperationCleared`,\n    addOperatorClicked:         signal`operators.addOperatorClicked`,\n    handleSideDrawerOpen:       signal`SideDrawer.handleDrawerOpen`,\n    connectionsClicked:         signal`MenuBar.connectionsClicked`,\n    signoutClicked:             signal`MenuBar.signoutClicked`,\n    clearCacheClicked:          signal`MenuBar.clearCacheClicked`,\n    addNewFieldClicked:         signal`MenuBar.addNewFieldClicked`,\n    showStatsClicked:           signal`StatsBar.handleOpenStats`,\n\n    sideDrawerOpen:             state`SideDrawer.open`,\n    operations:                 state`operations.records`,\n    connection_id:              state`operations.connection_id`,\n    appName:                    state`App.appName`,\n    contentType:                state`App.contentType`,\n    appIsMobile:                state`App.is_mobile`,\n    emptyDataSet:               state`App.emptyDataSet`,\n    orientation:                state`window.orientation`,\n    isSmall:                    state`window.isSmall`,\n    infoBarOperationsOpen:      state`InfoBar.operations.open`,\n    fieldsEditing:              state`fields.editing`,\n    operationInputText:         state`User.currentSelection.operation.inputText`,\n    currentOperation:           state`User.currentSelection.operation.id`,\n    operationsSuggestionsOpen:  state`User.currentSelection.operation.suggestionsOpen`\n  },\n  withStyles(styles, { withTheme: true })(MenuBar)\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport {\n  TextField,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"material-ui\";\nimport Dialog from \"material-ui/Dialog\";\nimport Button from \"material-ui/Button\";\nimport { state, signal } from \"cerebral/tags\";\n\nexport default connect(\n  {\n    oadaDomainText:           state`Connections.oada_domain_text`,\n    oadaFieldsDomainText:     state`Connections.oada_fields_domain_text`,\n    show:                     state`Connections.show`,\n\n    submitClicked:            signal`Connections.submitClicked`,\n    cancelClicked:            signal`Connections.cancelClicked`,\n    oadaDomainChanged:        signal`Connections.oadaDomainChanged`,\n    oadaFieldsDomainChanged:  signal`Connections.oa daFieldsDomainChanged`\n  },\n\n  class Connections extends React.Component {\n    render() {\n      return (\n        <Dialog open={this.props.show} className={\"connections-dialog\"}>\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Data Source [2.2.0]\"}{\" \"}\n          </DialogTitle>\n          <DialogContent>\n            At what OADA domain is your data stored?\n          </DialogContent>\n          <DialogContent>\n            <div>\n              <TextField\n                label=\"Domain\"\n                value={this.props.oadaDomainText}\n                onChange={e =>\n                  this.props.oadaDomainChanged({ value: e.target.value })\n                }\n                style={{ width: 250 }}\n              />\n            </div>\n            {/*<div>*/}\n            {/*<TextField*/}\n            {/*label=\"Fields Domain\"*/}\n            {/*value={this.props.oadaFieldsDomainText}*/}\n            {/*onChange={(e) => this.props.oadaFieldsDomainChanged({value: e.target.value})}*/}\n            {/*style = {{width: 250}}*/}\n            {/*/>*/}\n            {/*</div>*/}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                this.props.cancelClicked({});\n              }}\n              color=\"secondary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                this.props.submitClicked({});\n              }}\n              color=\"secondary\"\n              autoFocus\n            >\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport {state, signal} from 'cerebral/tags';\nimport ListSubheader from 'material-ui/List/ListSubheader';\nimport List, { ListItem, ListItemText } from 'material-ui/List';\nimport Collapse from 'material-ui/transitions/Collapse';\nimport ExpandLess from 'material-ui-icons/ExpandLess';\nimport ExpandMore from 'material-ui-icons/ExpandMore';\nimport Typography from 'material-ui/Typography';\n\nconst styles = theme => ({\n  root: {\n    maxWidth: 310, //was 360\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass OpsList extends React.Component {\n\n  renderItem(params) {\n    const {key, color1, color2, bannerText, classes} = params;\n    const area = this.props.OpsList[key]['fields'].reduce((a, b) => {return a + (b.boundary ? b.boundary.area : 0)}, 0);\n    const percent = !(!params['total_area']) ?\n                      Math.round(( area / params['total_area'] + 0.00001) * 10000) / 100 : 0;\n    return(\n      <div key={'fields-' + key}>\n        <ListItem\n          button\n          style={{color: color1}}\n          onClick={ () => {this.props.handleCollapse({status: key})} }\n        >\n          <ListItemText\n            primary={\n              <Typography variant=\"body2\" style={{color: color1}}>\n                {bannerText + ' (' + this.props.OpsList[key]['fields'].length + ')'}\n              </Typography>\n            }\n            secondary={\n              <Typography variant=\"caption\" style={{color: color2}}>\n                {\"\" + (Math.round((area + 0.00001) * 100) / 100) + ((percent > 0) ? ' acres (' + percent + '%)' : ' acres')}\n              </Typography>\n            }\n          />\n          {this.props.OpsList[key]['fields'].length > 0 ? (\n            !this.props.OpsList[key]['collapse'] ?\n              <ExpandLess /> :\n              <ExpandMore />\n            ) : null }\n        </ListItem>\n        <Collapse in={!(this.props.OpsList[key]['collapse'])} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {this.props.OpsList[key]['fields'].map(fieldRecord => {\n              return (\n                <ListItem\n                  button style={{color: color1}}\n                  className={classes.nested}\n                  key={'field-' + fieldRecord.id}\n                  onClick={() => {}}\n                >\n                  <ListItemText\n                    disableTypography\n                    primary={\n                      <Typography variant=\"body2\" style={{color: color1}} >\n                        {fieldRecord.name + ' (' + (Math.round((fieldRecord.boundary.area + 0.00001) * 100) / 100) + ' acres)'}\n                      </Typography>}\n\n                    secondary={\n                      <div>\n                        <Typography variant=\"caption\" style={{color: color2}}>\n                          Since: {fieldRecord.since}\n                        </Typography>\n                        <Typography variant=\"caption\" style={{color: color2}}>\n                          Marked By: {fieldRecord.by}\n                        </Typography>\n                      </div>}\n                  />\n                </ListItem>\n              )\n            })}\n          </List>\n        </Collapse>\n      </div>\n    )\n  }\n\n  render() {\n    const { classes } = this.props;//theme\n    const params = {\n      unplanned: {\n        color1: '#263238',\n        bannerText: 'Unplanned',\n        color2: '#B0BEC5',\n      },\n      planned: {\n        color1: '#D50000',\n        bannerText: 'Planned',\n        color2: '#EF9A9A',\n      },\n      started: {\n        color1: '#FFC107',\n        bannerText: 'Started',\n        color2: '#FFC107',\n      },\n      completed: {\n        color1: '#1B5E20',\n        bannerText: 'Completed',\n        color2: '#66BB6A',\n      },\n      total_area: Object.keys(this.props.OpsList || {}).map(\n                    key => {\n                      return this.props.OpsList[key]['fields'].reduce((a, b) => {\n                        return a + (b.boundary ? b.boundary.area : 0)}, 0)\n                    }).reduce((a, b) => {\n                          return a + b}, 0)\n    };\n\n    return (\n        <List\n          component=\"nav\"\n          className={classes.root}\n          subheader={\n            <ListSubheader component=\"div\" style={{color: '#304FFE', display: 'flex', alignItems: 'center'}}>\n              <Typography variant=\"caption\">\n                {\n                  Object.keys(this.props.OpsList || {}).map(key => {\n                    return this.props.OpsList[key]['fields'].length}).reduce((a, b) => {\n                      return a + b}, 0) +\n                  ' fields, ' + (Math.round((params['total_area'] + 0.00001) * 100) / 100) + ' acres '\n                }\n              </Typography>\n            </ListSubheader>}\n        >\n            {Object.keys(this.props.OpsList || {}).map(key => {\n              return this.renderItem({\n                key: key,\n                classes: classes,\n                total_area: params['total_area'],\n                ...params[key],\n              })\n            })}\n        </List>\n    );\n  }\n}\n\nOpsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect({\n    currentOperationName: state`operations.records.${state`User.currentSelection.operation.id`}.label`,\n    OpsList: state`OpsList`,\n\n    handleCollapse: signal`OpsList.handleCollapse`,\n    selectField: signal`User.handleFieldSelected`\n  },\n  withStyles(styles, { withTheme: true })(OpsList)\n);\n\n//this.props.selectField({item: fieldRecord})}}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport {state, signal} from 'cerebral/tags'\nimport SwipeableViews from 'react-swipeable-views';\nimport Typography from 'material-ui/Typography';\nimport OpsList from '../OpsList';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 0 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 250,\n    paddingLeft: '0px',\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: 50,\n    width: 300,\n  },\n  inputBox: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    paddingLeft: 10,\n    height: 50,\n    width: 220,\n  },\n  disabled: {\n    pointerEvents: 'none',\n    opacity: 0.4,\n    touchAction: 'none',\n  },\n  inputContainer: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    paddingLeft: '20px',\n    marginTop: theme.spacing.unit,\n  },\n});\n\nclass DataTabs extends React.Component {\n\n  render() {\n    const { classes, theme } = this.props;\n    const ops_list = (<OpsList />);\n\n    // const fld_list = (<FldList />);\n    // let currentInputLen = this.props.currentInputText  ?  this.props.currentInputText.length : 0;\n    return (\n      <div className={classes.root}>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={this.props.tabValue}\n          onChangeIndex={(index) => {this.props.handleChangeIndex({index: index})}}\n          style={{padding: '0px'}}\n        >\n\n            <TabContainer dir={theme.direction}>\n                {ops_list}\n            </TabContainer>\n\n          {/*<TabContainer dir={theme.direction}>*/}\n            {/*<div style={{backgroundColor: '#212121', 'paddingLeft': '5px', 'paddingRight': '0px', paddingTop: '0px'}}>*/}\n              {/*<div className={classes.container}>*/}\n                {/*<IconButton*/}\n                  {/*aria-label=\"clear field\"*/}\n                  {/*disabled={!(currentInputLen > 0)}*/}\n                  {/*className={classes.button}*/}\n                  {/*onClick={ () => { this.props.clearFieldClicked({inputText: '', inputType: 'field'})} }*/}\n                  {/*style={{'paddingLeft': 12}}*/}\n                {/*>*/}\n                  {/*<Icon style={{'color': 'white', 'fontSize': 30 }}>clear</Icon>*/}\n                {/*</IconButton>*/}\n                {/*<Typography variant=\"title\" className={classes.inputBox} noWrap>*/}\n                  {/*/!*fld_input*!/*/}\n                {/*</Typography>*/}\n              {/*</div>*/}\n              {/*<Divider />*/}\n            {/*</div>*/}\n            {/*{fld_list}*/}\n          {/*</TabContainer>*/}\n\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nDataTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    tabValue:           state`DataTabs.value`,\n    currentInputText:   state`fields.records.${state`fields.selectedId`}.name`,\n\n    handleFieldEdited:  signal`DataTabs.handleFieldEdited`,\n    handleChange:       signal`DataTabs.handleChange`,\n    handleChangeIndex:  signal`DataTabs.handleChangeIndex`,\n    clearFieldClicked:  signal`AutocompleteSearch.fieldInputTyped`,\n  },\n  withStyles(styles, { withTheme: true })(DataTabs)\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport {state, signal} from 'cerebral/tags'\nimport Drawer from 'material-ui/Drawer';\nimport IconButton from 'material-ui/IconButton';\nimport ChevronLeftIcon from 'material-ui-icons/ChevronLeft';\nimport Typography from 'material-ui/Typography';\nimport AutocompleteSearch from '../AutocompleteSearch'\nimport DataTabs from '../DataTabs'\n\nconst drawerWidth = 250;\n\nconst styles = theme => ({\n  hide: {\n    display: 'none',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#212121',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    paddingLeft: '15px',\n    ...theme.mixins.toolbar,\n  },\n  drawerInner: {\n    padding: '0px',\n  },\n  inputContainer: {\n  \tdisplay: 'flex',\n    justifyContent: 'flex-start',\n  \tflexDirection: 'column',\n    marginTop: theme.spacing.unit,\n    width: 200\n  }\n });\n\nclass SideDrawer extends React.Component {\n\n\trender() {\n    const { classes } = this.props;\n    const ops_input = (<AutocompleteSearch id='ops-input' />);\n    const data_tabs = (<DataTabs />);\n\n    return (\n      <Drawer\n        variant=\"persistent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor={'left'}\n        open={this.props.sideDrawerOpen && (!(!this.props.currentOperation)) }\n      >\n        <div className={classes.drawerInner}>\n          <div className={classes.drawerHeader}>\n            <div className={classes.inputContainer}>\n\t            <Typography variant=\"title\" noWrap>\n\t              {ops_input}\n\t            </Typography>\n            </div>\n          <IconButton onClick={() => {this.props.handleSideDrawerOpen({})}}>\n            <ChevronLeftIcon style={{'color': '#FAFAFA', 'fontSize': 35}}/>\n          </IconButton>\n          </div>\n          {data_tabs}\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nSideDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n\t{\n    sideDrawerOpen:       state`SideDrawer.open`,\n    currentOperation:     state`User.currentSelection.operation.id`,\n\n    handleSideDrawerOpen: signal`SideDrawer.handleDrawerOpen`,\n    dataTabsToggle:       signal`DataTabs.toggleTab`,\n\t},\n\twithStyles(styles, { withTheme: true })(SideDrawer)\n);\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport uuid from \"uuid\";\nimport \"./map.css\";\n// import { Icon, Typeography, Button, TextField} from 'material-ui/Paper';\nimport {\n  Marker,\n  Map,\n  TileLayer,\n  GeoJSON,\n  FeatureGroup,\n  LayersControl\n} from \"react-leaflet\";\nconst { Overlay } = LayersControl;\n//import './map.css';\n//const editDoneButtonHeight = 64;\n\nconst styles = theme => ({\n  \"leaflet-container\": {\n    flex: 1,\n    order: 2,\n    flexGrow: 1,\n    width: \"100%\"\n  },\n  mapContainer: {\n    display: \"flex\",\n    flexGrow: 1,\n    order: 2\n  },\n  map: {\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  fieldPolygon: {\n    strokeWidth: 4,\n    strokeOpacity: 1,\n    width: \"100vw\"\n  },\n  disabled: {\n    pointerEvents: \"none\",\n    opacity: 0.4,\n    touchAction: \"none\"\n  },\n  hide: {\n    display: \"none\"\n  }\n});\n\nclass MapPanel extends React.Component {\n  validateMouseEvent(evt) {\n    if (this.props.fieldEditing) {\n      // Don't fire a click event when panning the map or when dragging a point.\n      if (!this.props.moving && !this.props.dragging) {\n        // Don't add a point if a control was clicked.\n        //console.log(\"originalEvent\", evt.originalEvent);\n        if (!evt.originalEvent.target.offsetParent) {\n          this.props.mouseDownOnMap({ pt: [evt.latlng.lng, evt.latlng.lat] });\n        } else if (\n          !evt.originalEvent.target.offsetParent.className.includes(\"marker\")\n        ) {\n          this.props.mouseDownOnMap({ pt: [evt.latlng.lng, evt.latlng.lat] });\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.refs.map.leafletElement.locate();\n  }\n\n  render() {\n    const { classes } = this.props; // , theme\n\n    const color_code = {\n      unplanned: {\n        color1: \"#E0E0E0\",\n        bannerText: \"Unplanned\",\n        color2: \"#616161\"\n      },\n      planned: {\n        color1: \"#D50000\",\n        bannerText: \"Planned\",\n        color2: \"#EF9A9A\"\n      },\n      started: {\n        color1: \"#FFC107\",\n        bannerText: \"Started\",\n        color2: \"#FFC107\"\n      },\n      completed: {\n        color1: \"#76FF03\",\n        bannerText: \"Completed\",\n        color2: \"#33691E\"\n      }\n    };\n\n    let markerList = [];\n    if (this.props.fieldEditing) {\n      //console.log(\"-->currentField\", this.props.currentEditingField);\n      if (\n        this.props.currentField &&\n        this.props.currentField.boundary &&\n        this.props.currentField.boundary.geojson.coordinates[0].length > 0\n      ) {\n        markerList = [];\n        this.props.currentField.boundary.geojson.coordinates[0].forEach(\n          (pt, i) => {\n            markerList.push(\n              <Marker\n                className={\"selected-field-marker\"}\n                key={this.props.selectedId + \"-\" + i}\n                position={[pt[1], pt[0]]}\n                color={\n                  this.props.currentOperationId &&\n                  this.props.allOperations[this.props.currentOperationId] &&\n                  this.props.allOperations[this.props.currentOperationId]\n                    .fields[this.props.selectedId]\n                    ? this.props.allOperations[this.props.currentOperationId]\n                        .fields[this.props.selectedId].status\n                    : \"unplanned\"\n                }\n                draggable={true}\n                onDrag={e => {\n                  this.props.markerDragged({\n                    lat: e.target._latlng.lat,\n                    lng: e.target._latlng.lng,\n                    idx: i\n                  });\n                }}\n                onDragStart={e => {\n                  this.props.markerDragStarted({ idx: i });\n                }}\n                onDragEnd={e => {\n                  this.props.markerDragEnded({\n                    lat: e.target._latlng.lat,\n                    lng: e.target._latlng.lng,\n                    idx: i\n                  });\n                }}\n                onDblClick={e => {\n                  this.props.deleteCoordinate({ index: i });\n                }}\n              />\n            );\n          }\n        );\n      }\n    }\n\n    let new_field_polygon = this.props.currentField.boundary ? (\n      <GeoJSON\n        className={classes.fieldPolygon}\n        data={this.props.currentField.boundary.geojson}\n        onClick={() => {\n          if (!(this.props.selectedId && \n                this.props.currentField.id === this.props.selectedId && \n                this.props.fieldEditing)\n          ) {\n            this.props.handleFieldPolygonClicked({\n              id: this.props.currentField.id,\n              field: this.props.currentField\n            });\n          }\n          this.forceUpdate();\n        }}\n        key={\"field-\" + this.props.currentField.id + \"-polygon\" + uuid()}\n        color={color_code[this.props.currentOperation.fields[this.props.currentField.id] ?\n          this.props.currentOperation.fields[this.props.currentField.id].status : \"unplanned\"].color1}\n        style={{ fillOpacity: 0.4 }}\n      />\n    ) : null;\n\n    return (\n      <div className={classes.mapContainer}>\n        <Map\n          onLocationfound={e =>\n            this.props.locationFound({ lat: e.latlng.lat, lng: e.latlng.lng })\n          }\n          onClick={e => {\n            this.validateMouseEvent(e);\n          }}\n          onMoveStart={e => {\n            this.props.mapMoveStarted();\n          }}\n          onMoveend={e => {\n            this.props.mapMoved({\n              latlng: this.refs.map.leafletElement.getCenter(),\n              zoom: this.refs.map.leafletElement.getZoom()\n            });\n          }}\n          dragging={true}\n          ref=\"map\"\n          center={this.props.center}\n          attributionControl={!this.props.isMobile}\n          zoomControl={true /*!this.props.isMobile*/}\n          zoom={this.props.mapZoom || 15}\n        >\n          <TileLayer\n            key={\"tile-layer\"}\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n          />\n\n          {markerList}\n          {new_field_polygon}\n          <LayersControl position=\"topright\">\n            {\n              <Overlay checked name=\"Fields\">\n                <FeatureGroup>\n                  {Object.keys(this.props.fields || {})\n                    .filter(id => {\n                      return (\n                        this.props.currentOperationId &&\n                        this.props.fields[id].boundary &&\n                        (id !== this.props.selectedId ||\n                          !this.props.fieldsEditing)\n                        //this.props.fields[id].boundary.visible\n                      );\n                    })\n                    .map(id => ( id === this.props.currentField.id ? null :\n                      <GeoJSON\n                        className={classes.fieldPolygon}\n                        data={this.props.fields[id].boundary.geojson}\n                        onClick={() => {\n                          if (!(this.props.selectedId &&\n                                id === this.props.selectedId &&\n                                this.props.fieldEditing)\n                          ) {\n                              // if editing, do not handleFieldPolygonClicked\n                              if(!this.props.fieldEditing)\n                                this.props.handleFieldPolygonClicked({id, field: this.props.fields[id]});\n                          }\n                          this.forceUpdate();\n                        }}\n                        key={\"field-\" + id + \"-polygon\" + uuid()}\n                        color={\n                          color_code[\n                            this.props.currentOperation &&\n                            this.props.currentOperation.fields &&\n                            this.props.currentOperation.fields[id] &&\n                            this.props.currentOperation.fields[id].status\n                              ? this.props.currentOperation.fields[id].status\n                              : \"unplanned\"\n                          ].color1\n                        }\n                        style={{ fillOpacity: 0.4 }}\n                      />\n                    ))}\n                </FeatureGroup>\n              </Overlay>\n            }\n          </LayersControl>\n        </Map>\n      </div>\n    );\n  } //render\n}\n\nMapPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    mapZoom:                    state`MapPanel.zoom`,\n    moving:                     state`MapPanel.moving`,\n    isLoading:                  state`MapPanel.isLoading`,\n    isMobile:                   state`App.is_mobile`,\n    geohashPolygons:            state`MapPanel.geohashPolygons`,\n    center:                     state`MapPanel.center`,\n    sideDrawerOpen:             state`SideDrawer.open`,\n    currentField:               state`fields.new_field`,\n    fields:                     state`fields.records`,\n    fieldEditing:               state`fields.editing`,\n    selectedId:                 state`fields.selectedId`,\n    currentOperationId:         state`User.currentSelection.operation.id`,\n    currentStatus:              state`User.currentSelection.status.status`,\n    allOperations:              state`operations.records`,\n    operations:                 state`operations.records`,\n    currentOperation:           state`operations.records.${state`User.currentSelection.operation.id`}`,\n\n    mapMoveStarted:             signal`MapPanel.mapMoveStarted`,\n    mouseDownOnMap:             signal`MapPanel.mouseDownOnMap`,\n    markerDragStarted:          signal`MapPanel.markerDragStarted`,\n    markerDragEnded:            signal`MapPanel.markerDragEnded`,\n    markerDragged:              signal`MapPanel.markerDragged`,\n    locationFound:              signal`MapPanel.locationFound`,\n    mapMoved:                   signal`MapPanel.mapMoved`,\n    deleteCoordinate:           signal`MapPanel.deleteCoordinate`,\n    handleFieldPolygonClicked:  signal`fields.handleFieldPolygonClicked`,\n    saveEdited:                 signal`fields.saveEditedField`,\n\n  },\n  withStyles(styles, { withTheme: true })(MapPanel)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { withStyles } from \"material-ui/styles\";\nimport Drawer from \"material-ui/Drawer\";\nimport TextField from \"material-ui/TextField\";\nimport Radio, { RadioGroup } from \"material-ui/Radio\";\nimport Icon from \"material-ui/Icon\";\nimport { FormControl, FormControlLabel } from \"material-ui/Form\";\nimport Typography from \"material-ui/Typography\";\nimport Button from \"material-ui/Button\";\nimport { MenuItem } from \"material-ui/Menu\";\nimport \"react-select/dist/react-select.css\";\nimport EditFieldIcon from \"material-ui-icons/Edit\";\nimport IconButton from \"material-ui/IconButton\";\n\nconst bottomDrawerHeight = 200;\n\nconst styles = theme => ({\n  formControl: {\n    margin: theme.spacing.unit * 2,\n    flexWrap: \"noWrap\",\n    justifyContent: \"flex-start\"\n  },\n  group: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"noWrap\",\n    justifyContent: \"center\"\n  },\n  statusButton: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    fontColor: \"white\",\n    margin: 0, //theme.spacing.unit * 2,\n    padding: theme.spacing.unit\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"noWrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit,\n    backgroundColor: \"#212121\",\n    minWidth: 0,\n    order: 3\n  },\n  middle: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  editFieldButton: {\n    color: \"white\"\n  },\n  textField: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    //marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit,\n    minWidth: \"200px\",\n    width: \"20%\",\n    color: \"#FAFAFA\",\n    rightPadding: 10\n  },\n  drawerPaper: {\n    display: \"flex\",\n    height: bottomDrawerHeight\n  },\n  drawerHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 2,\n    alignItems: \"center\",\n    backgroundColor: \"#3f51b5\",\n    color: \"white\",\n    justifyContent: \"space-between\",\n    padding: \"0 8px\",\n    height: \"10%\",\n\n    ...theme.mixins.toolbar\n  },\n  confirmIconGroup: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    flexGrow: 2,\n    flexWrap: \"noWrap\"\n  },\n  form: {\n    color: \"#FAFAFA\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"90%\",\n    flexWrap: \"wrap\"\n  }\n});\n\nclass BottomDrawer extends React.Component {\n  renderDatePicker() {\n    const { classes } = this.props;\n\n    return (\n      <TextField\n        id=\"date\"\n        label=\"Date\"\n        type=\"date\"\n        className={classes.textField}\n        value={this.props.currentTimestamp}\n        //className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n          style: { color: \"white\" }\n        }}\n        InputProps={{\n          style: { color: \"white\" }\n        }}\n        onChange={event => {\n          this.props.setCurrentSelectionStatusTimestamp({\n            timestamp: event.target.value\n          });\n        }}\n      />\n    );\n  } //renderDatePicker\n\n  renderEditField() {\n    const { classes } = this.props;\n\n    return (\n      <IconButton\n        key={4}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.editFieldClicked({})}\n        className={classes.editFieldButton}\n      >\n        <EditFieldIcon />\n      </IconButton>\n    );\n  } //renderEditField\n\n  renderAddOperationForm() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate>\n        <div className={classes.form}>\n          <TextField\n            id=\"operation name\"\n            label=\"New Operation Name:\"\n            className={classes.textField}\n            value={this.props.newOperationName}\n            onChange={event => {\n              this.props.newOperationNameTyped({\n                inputText: event.target.value,\n                inputType: \"operation\"\n              });\n            }}\n            margin=\"normal\"\n            InputProps={{\n              style: { color: \"#FAFAFA\" },\n              classes: {\n                input: classes.input\n              }\n            }}\n            InputLabelProps={{ style: { color: \"white\" }, shrink: true }}\n          />\n        </div>\n        <div>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"primary\"\n            style={{ color: \"#FAFAFA\" }}\n            disabled={this.props.disabledNewOperation}\n            onClick={() => {\n              this.props.addNewOperation();\n            }}\n          >\n            Add\n          </Button>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"secondary\"\n            style={{ color: \"#FAFAFA\" }}\n            onClick={() => {\n              this.props.cancelNewOperation();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </form>\n    );\n  } //addOperationForm\n\n  renderAddFieldForm() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate>\n        <div className={classes.form}>\n          <TextField\n            id=\"field name\"\n            label=\"New Field Name:\"\n            className={classes.textField}\n            value={this.props.newFieldName}\n            onChange={event => {\n              this.props.newFieldNameTyped({\n                inputText: event.target.value,\n                inputType: \"field\"\n              });\n            }}\n            margin=\"normal\"\n            InputProps={{\n              style: { color: \"#FAFAFA\" },\n              classes: {\n                input: classes.input\n              }\n            }}\n            InputLabelProps={{ style: { color: \"white\" }, shrink: true }}\n          />\n        </div>\n        <div>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"primary\"\n            style={{ color: \"#FAFAFA\" }}\n            disabled={this.props.disabledNewOperation}\n            onClick={() => {\n              this.props.addNewField();\n            }}\n          >\n            Add\n          </Button>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"secondary\"\n            style={{ color: \"#FAFAFA\" }}\n            onClick={() => {\n              this.props.cancelNewOperation();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </form>\n    );\n  } //addOperationForm\n\n  renderRadioButtonGroup() {\n    const { classes } = this.props;\n    const datePicker = this.renderDatePicker({});\n    const editField = this.renderEditField({});\n\n    return (\n      <form className={classes.container} noValidate>\n        <TextField\n          select\n          fullWidth\n          className={classes.textField}\n          label={\"Operator\"}\n          InputLabelProps={{\n            shrink: true,\n            style: { color: \"white\" }\n          }}\n          value={this.props.currentMarker}\n          onChange={event => {\n            this.props.setCurrentSelectionStatusMarker({\n              marker: event.target.value\n            });\n          }}\n          InputProps={{\n            style: { color: \"white\" }\n          }}\n        >\n          {Object.values(this.props.allOperators).map(operator => (\n            <MenuItem key={operator.label} value={operator.label} selected>\n              {operator.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <div className={classes.middle}>\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.formControl}\n          >\n            <RadioGroup\n              aria-label=\"status\"\n              name=\"status\"\n              className={classes.group}\n              value={this.props.currentStatus}\n              onChange={event => {\n                this.props.setCurrentSelectionStatusStatus({\n                  editFieldStatus: true,\n                  value: event.target.value,\n                  statusValue: event.target.value\n                });\n              }}\n            >\n              <FormControlLabel\n                value=\"unplanned\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"#FAFAFA\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"#FAFAFA\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Unplanned</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"planned\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"red\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"red\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Planned</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"started\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"#FFC107\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"#FFC107\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Started</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"completed\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"#76FF03\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"#76FF03\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Completed</Typography>\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          {editField}\n        </div>\n        {datePicker}\n      </form>\n    );\n  } //renderRadioButtonGroup\n\n  renderHeaderItem() {\n    const { classes } = this.props;\n\n    if (this.props.bottomMenu === \"operations\") {\n      let headerText = \"Add New Operation\";\n      return (\n        <div\n          className={classes.drawerHeader}\n          tabIndex={0}\n          role=\"banner\"\n          onClick={() => {\n            this.props.cancelNewOperation({});\n          }} /*{this.toggleDrawer(false)}*/\n          onKeyDown={() => {\n            this.props.cancelNewOperation({});\n          }} /*{this.toggleDrawer(false)}*/\n        >\n          <div>{headerText}</div>\n        </div>\n      );\n    } else {\n      if (this.props.bottomMenu === \"status-update\") {\n        let headerText =\n          \"Updating status for operation [\" +\n          this.props.currentOperationLabel +\n          \"] on field \" +\n          this.props.currentFieldLabel;\n        return (\n          <div\n            className={classes.drawerHeader}\n            tabIndex={0}\n            role=\"banner\"\n            onClick={() => {\n              this.props.saveCurrentSelectionStatus({});\n            }} /*{this.toggleDrawer(false)}*/\n            onKeyDown={() => {\n              this.props.saveCurrentSelectionStatus({});\n            }} /*{this.toggleDrawer(false)}*/\n          >\n            <div>{headerText}</div>\n          </div>\n        );\n      }\n    }\n  } //renderHeaderItem\n\n  render() {\n    //const { classes } = this.props;\n    //const datePicker = this.renderDatePicker({});\n    const header_item = this.renderHeaderItem({});\n    const add_operation_form = this.renderAddOperationForm({});\n    //const add_field_form = this.renderAddFieldForm({});\n    const status_radio_buttons = this.renderRadioButtonGroup({});\n\n    return (\n      <Drawer\n        anchor=\"bottom\"\n        open={this.props.bottomDrawerOpen}\n        onClose={() => {\n          this.props.saveCurrentSelectionStatus({});\n        }} /*{this.toggleDrawer(false)}*/\n      >\n        {header_item}\n        {this.props.bottomMenu === \"status-update\"\n          ? status_radio_buttons\n          : this.props.bottomMenu === \"operations\"\n          ? add_operation_form\n          : null}\n      </Drawer>\n    );\n  }\n}\n\nBottomDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    bottomDrawerOpen:                   state`BottomDrawer.open`,\n    bottomMenu:                         state`BottomDrawer.menu`,\n    operatorMenuOpen:                   state`BottomDrawer.operatorMenuOpen`,\n    currentStatus:                      state`User.currentSelection.status.status`,\n    currentMarker:                      state`User.currentSelection.status.marker`,\n    currentTimestamp:                   state`User.currentSelection.status.timestamp`,\n    allOperators:                       state`User.accessibleUsers`,\n    currentFieldLabel:                  state`fields.records.${state`fields.selectedId`}.name`,\n    currentOperationLabel:              state`operations.records.${state`User.currentSelection.operation.id`}.label`,\n    newOperationName:                   state`User.currentSelection.operation.inputText`,\n    disabledNewOperation:               state`User.currentSelection.operation.disabled`,\n\n    setCurrentSelectionStatusStatus:    signal`User.setCurrentSelectionStatusStatus`,\n    setCurrentSelectionStatusMarker:    signal`User.setCurrentSelectionStatusMarker`,\n    setCurrentSelectionStatusTimestamp: signal`User.setCurrentSelectionStatusTimestamp`,\n    saveCurrentSelectionStatus:         signal`User.saveCurrentSelectionStatus`,\n    resetCurrentSelectionStatus:        signal`User.resetCurrentSelectionStatus`,\n    addNewOperation:                    signal`User.addNewOperation`,\n    setDisabledNewOperation:            signal`User.setDisabledNewOperation`,\n    cancelNewOperation:                 signal`User.cancelNewOperation`,\n    handleOperatorMenuOpen:             signal`BottomDrawer.handleOperatorMenuOpen`,\n    handleOperatorMenuClose:            signal`BottomDrawer.handleOperatorMenuClose`,\n    handleBottomDrawerOpen:             signal`BottomDrawer.handleDrawerOpen`,\n    newOperationNameTyped:              signal`AutocompleteSearch.operationInputTyped`,\n    editFieldClicked:                   signal`AutocompleteSearch.handleFieldEdited`\n  },\n  withStyles(styles, { withTheme: true })(BottomDrawer)\n);\n","import React from \"react\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { TextField, Button } from \"material-ui\";\n//import { LayersControl } from 'react-leaflet';\n// const { Overlay } = LayersControl;\n//const drawerWidth = 340;\n\nconst styles = theme => ({\n  title: {\n    //backgroundColor: \"#3F52B5\"\n  },\n  drawerHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 2,\n    alignItems: \"center\",\n    backgroundColor: \"#3f51b5\",\n    color: \"white\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    padding: \"10px\"\n  },\n  hide: {\n    display: \"none\"\n  },\n  editFieldButtons: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  editFieldText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    height: \"128px\"\n  },\n  editFieldDrawerBottom: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  },\n  editFieldDrawer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    order: 3,\n    alignItems: \"center\"\n  },\n  textField: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    //marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 0.25,\n    minWidth: \"200px\",\n    width: \"20%\",\n    color: \"#FAFAFA\",\n    rightPadding: 10\n  }\n});\n\nclass EditFieldDrawer extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    //console.log(\"EditFieldDrawer PROPS --> \", this.props);\n\n    return (\n      <div className={classes.editFieldDrawer}>\n        <div className={classes.drawerHeader}>\n          <label htmlFor=\"Instructions\">\n            {\"(1) Enter names (2) Draw field on the map (3) Save\"}\n          </label>\n        </div>\n        <div className={classes.editFieldDrawerBottom}>\n          <div className={classes.editFieldText}>\n            <TextField\n              label=\"Field name\"\n              placeholder={`e.g., \"Baker 135\"...`}\n              value={this.props.fieldText}\n              onChange={evt =>\n                this.props.fieldTextChanged({ value: evt.target.value })\n              }\n            />\n            <TextField\n              label=\"Farm Name\"\n              placeholder={`e.g., \"Baker\"`}\n              type=\"farm\"\n              value={this.props.farmText}\n              onChange={evt =>\n                this.props.farmTextChanged({ value: evt.target.value })\n              }\n            />\n          </div>\n          <div className={classes.editFieldButtons}>\n            <Button\n              className={classes.editFieldButton}\n              variant=\"raised\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.saveEdited({ confirm: true });\n              }}\n              disabled={this.props.disabledNewField}\n            >\n              Save\n            </Button>\n            <Button\n              className={classes.editFieldButton}\n              variant=\"raised\"\n              color=\"secondary\"\n              onClick={() => {\n                this.props.cancelNewField();\n              }}\n            >\n              Discard\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    fieldText: state`fields.new_field.name`,\n    farmText: state`fields.new_field.farm.name`,\n    fields: state`fields.records`,\n    fieldSuggestionsOpen: state`fields.new_field.field.suggestionsOpen`,\n    farmSuggestionsOpen: state`fields.new_field.farm.suggestionsOpen`,\n    fieldId: state`fields.new_field.id`,\n    farmId: state`fields.new_field.farm.id`,\n\n    addFieldClicked: signal`User.addFieldClicked`,\n    addFarmClicked: signal`User.addFarmClicked`,\n    disabledNewField: state`User.currentSelection.field.newFieldDisabled`,\n    editFieldClicked: signal`AutocompleteSearch.handleFieldEdited`,\n    fieldCleared: signal`User.handleFieldCleared`,\n    farmCleared: signal`User.handleFarmCleared`,\n    fieldTextChanged: signal`fields.fieldTextChanged`,\n    farmTextChanged: signal`fields.farmTextChanged`,\n    saveEdited: signal`fields.saveEditedField`,\n    cancelNewField: signal`fields.cancelNewField`\n  },\n  withStyles(styles, { withTheme: true })(EditFieldDrawer)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { connect } from '@cerebral/react';\nimport {signal, state} from 'cerebral/tags';\n\nconst styles = theme => ({\n  hidden: {\n    display: \"none\"\n  },\n  flexContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    backgroundColor: '#333333',\n    color: theme.palette.common.white,\n    order: 2\n  },\n  pill: {\n    textAlign: 'center',\n    padding: '5px',\n    marginTop: '5px',\n    marginBottom: '5px',\n    alignItems: 'center',\n    borderRadius: '3px',\n    color: '#FFFFFF',\n    textShadow: '1px 1px #000000',\n  },\n  completed: {\n    backgroundColor: '#66BB6A',\n  },\n  started: {\n    backgroundColor: '#F0C000',\n  },\n  planned: {\n    backgroundColor: '#CC0000',\n  }\n});\n\nclass StatsBar extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n    const props = this.props;\n\n    return (\n      <div className={!this.props.OpsListCompletedArea ? classes.hidden: classes.flexContainer}>\n        <div className={`${classes.pill} ${classes.completed}`}>\n          { (this.props.isSmall ? '' : \"Completed \" ) +\n          Math.round(props.OpsListCompletedArea) + \" ac \" +\n          ('(' + Math.round(props.OpsListCompletedPercentage) + \"%)\")\n          }\n        </div>\n\n        <div className={`${classes.pill} ${classes.started}`}>\n          { (this.props.isSmall ? '' : \"Started \") +\n          Math.round(props.OpsListStartedArea) + \" ac \" +\n          ('(' + Math.round(props.OpsListStartedPercentage) + \"%)\" )\n          }\n        </div>\n\n        <div className={`${classes.pill} ${classes.planned}`}>\n          { (this.props.isSmall ? '' : \"Planned \") +\n          Math.round(props.OpsListPlannedArea) + \" ac \" +\n          ('(' + Math.round(props.OpsListPlannedPercentage) + \"%)\")\n          }\n        </div>\n      </div>\n    );\n\n  }//render\n}\n\nStatsBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect({\n  appIsMobile:                  state`App.is_mobile`,\n  orientation:                  state`window.orientation`,\n  isSmall:                      state`window.isSmall`,\n  connection_id:                state`operations.connection_id`,\n  OpsListCompletedArea:         state`OpsList.completed.area`,\n  OpsListCompletedPercentage:   state`OpsList.completed.percentage`,\n  OpsListCompletedTotalFields:  state`OpsList.completed.totalFields`,\n  OpsListStartedArea:           state`OpsList.started.area`,\n  OpsListStartedPercentage:     state`OpsList.started.percentage`,\n  OpsListStartedTotalFields:    state`OpsList.started.totalFields`,\n  OpsListPlannedArea:           state`OpsList.planned.area`,\n  OpsListPlannedPercentage:     state`OpsList.planned.percentage`,\n  OpsListPlannedTotalFields:    state`OpsList.planned.totalFields`,\n\n  handleUpdateAction:           signal`StatsBar.handleUpdateAction`,\n  handleCloseCompleted:         signal`StatsBar.handleCloseCompleted`,\n  handleCloseStarted:           signal`StatsBar.handleCloseStarted`,\n  handleClosePlanned:           signal`StatsBar.handleClosePlanned`\n},\nwithStyles(styles, { withTheme: true })(StatsBar)\n);","import React from \"react\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { TextField, Button } from \"material-ui\";\n\nconst styles = theme => ({\n  title: {\n    //backgroundColor: \"#3F52B5\"\n  },\n  drawerHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 2,\n    alignItems: \"center\",\n    backgroundColor: \"#3f51b5\",\n    color: \"white\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    padding: \"10px\"\n  },\n  hide: {\n    display: \"none\"\n  },\n  editOperatorButtons: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  editOperatorText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    height: \"128px\"\n  },\n  operatorDrawerBottom: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  },\n  operatorDrawer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    order: 3,\n    alignItems: \"center\"\n  },\n  textOperator: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    //marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 0.25,\n    minWidth: \"200px\",\n    width: \"20%\",\n    color: \"#FAFAFA\",\n    //rightPadding: 10\n  }\n});\n\nclass EditOperatorDrawer extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    //console.log(\"EditOperatorDrawer PROPS --> \", this.props);\n\n    return (\n      <div className={classes.operatorDrawer}>\n        <div className={classes.drawerHeader}>\n          <label htmlFor=\"Instructions\">\n            {\"(1) Enter names (2) Save\"}\n          </label>\n        </div>\n        <div className={classes.operatorDrawerBottom}>\n          <div className={classes.editOperatorText}>\n            <TextField\n              label=\"Operator name\"\n              placeholder={`e.g., \"Bob\"`}\n              value={this.props.firstNameText}\n              onChange={evt =>\n                this.props.firstNameTextChanged({ value: evt.target.value })\n              }\n            />\n            <TextField\n              label='Last Name'\n              placeholder={`e.g., \"Alice\"`}\n              type='lastname'\n              value={this.props.lastNameText}\n              onChange={(evt)=>this.props.lastNameTextChanged({value: evt.target.value})}\n            />\n          </div>\n          <div className={classes.editOperatorButtons}>\n            <Button\n              className={classes.editOperatorButton}\n              variant=\"raised\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.saveEdited({ confirm: true });\n              }}\n              disabled={this.props.disabledNewOperator}\n            >\n              Save\n            </Button>\n            <Button\n              className={classes.editOperatorButton}\n              variant=\"raised\"\n              color=\"secondary\"\n              onClick={() => {\n                this.props.cancelNewOperator();\n              }}\n            >\n              Discard\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    firstNameText:           state`operators.new_operator.firstName`,\n    lastNameText:            state`operators.new_operator.lastName`,\n    operators:               state`operators.records`,\n    operatorSuggestionsOpen: state`operators.new_operator.operator.suggestionsOpen`,\n    operatorId:              state`operators.new_operator.id`,\n    disabledNewOperator:     state`User.currentSelection.operator.newOperatorDisabled`,\n\n    editOperatorClicked:     signal`AutocompleteSearch.handleOperatorEdited`,\n    operatorCleared:         signal`User.handleOperatorCleared`,\n    addOperatorClicked:      signal`operators.addOperatorClicked`,\n    firstNameTextChanged:    signal`operators.firstNameTextChanged`,\n    lastNameTextChanged:     signal`operators.lastNameTextChanged`,\n    saveEdited:              signal`operators.saveEditedOperator`,\n    cancelNewOperator:       signal`operators.cancelNewOperator`\n  },\n  withStyles(styles, { withTheme: true })(EditOperatorDrawer)\n);\n","import React from \"react\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport MenuBar from \"../MenuBar\";\nimport Connections from \"../Connections\";\nimport SideDrawer from \"../SideDrawer\";\nimport MapPanel from \"../MapPanel\";\nimport BottomDrawer from \"../BottomDrawer\";\nimport EditFieldDrawer from \"../EditFieldDrawer\";\nimport StatsBar from \"../StatsBar\";\nimport Operators from \"../Operators\";\n//import MenuList from '../MenuList';\n\nconst styles = theme => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    marginTop: theme.spacing.unit * 0,\n    zIndex: 1\n  },\n\n  app: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    zIndex: 1,\n    top: 0\n  },\n  statsBar: {\n    display: 'flex',\n    order: 2\n  }\n});\n\n/**\n *\n */\nclass App extends React.Component {\n  updateDimensions() {\n    this.props.windowResized({ width: window.innerWidth, height: window.innerHeight});\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    this.updateDimensions();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillMount() {\n    this.props.init({});\n    this.props.loadFieldListData({ switchTab: 0 });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.app}>\n        <MenuBar />\n        {/*<StatsBar className={classes.statsBar}/>*/}\n        <Connections />\n        <SideDrawer />\n        <MapPanel />\n        <BottomDrawer />\n        {(!this.props.operatorEditing && this.props.fieldEditing) ? <EditFieldDrawer /> : null}\n        {(!this.props.fieldEditing && this.props.operatorEditing) ? <Operators /> : null}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    fieldEditing:      state`fields.editing`,\n    operatorEditing:   state`operators.editing`,\n    window:            state`window`,\n\n    windowResized:     signal`window.resized`,\n    init:              signal`App.init`,\n    loadFieldListData: signal`FldList.loadData`,\n  },\n  withStyles(styles, { withTheme: true })(App)\n);\n","let overrides = require('./config.dev.js').default;\n\n//----------- Define default configs here ----------\n\nexport const title = 'FieldWorkApp';\nexport const scope = 'oada.awesome:all';\nconst defaults = {\n\tscope,\n  title,\n};\n\n//--------------------------------------------------\nif (process.env.REACT_APP_PROD_DEV) {\n  overrides = require('./config.prod-dev.js').default;\n} else if (process.env.NODE_ENV === 'production') {\n  overrides = require('./config.prod.js').default;\n}\n\nlet toExport =  {...defaults, ...overrides};\n\nexport const oadaDomain = toExport.oadaDomain;\nexport const websiteDomain = toExport.websiteDomain;\nexport const redirect = toExport.websiteDomain + '/oauth2/redirect.html';\nexport const metadata = toExport.metadata;\nexport const devtoolsPort = toExport.devtoolsPort;\nexport const defaultNewConnectionURL = toExport.defaultNewConnectionURL;\nexport const appName = toExport.appName;\nexport const contentType = toExport.contentType;\nexport const bookmarksOperations = toExport.bookmarksOperations;\nexport const bookmarksFields = toExport.bookmarksFields;\n\nexport default toExport;\n","import {appName, contentType, bookmarksOperations, bookmarksFields} from '../../config';\n\nlet stateTree = {\n  appName: appName,\n  contentType: contentType,\n  bookmarksOperations: bookmarksOperations,\n  bookmarksFields: bookmarksFields,\n\tmodel: {tags: {}},\n  is_mobile: false,\n\temptyDataSet: false,\n  settings: {},\n  view: {\n    editing: false,\n    settings: {},\n  }\n};\n\nexport default stateTree;\n","import {state, props} from 'cerebral/tags'\nimport {set} from 'cerebral/operators'\n\nexport var handleChange = [\n  set(state`DataTabs.value`, props`value`),\n];\n\nexport var handleChangeIndex = [\n  handleTabChangeIndex,\n];\n\nexport var toggleTab = [\n  toggleTabX,\n];\n\n\nexport function handleTabChange({ props, state }) {\n    console.log('valueX', props.value);\n\tstate.set(`DataTabs.value`, props.value || 1);\n}\n\nfunction handleTabChangeIndex({props, state}) {\n    //console.log('valueY', props.value);\n\tstate.set(`DataTabs.value`, props.index);\n}\n\nfunction toggleTabX({props, state}) {\n    //console.log('valueZ', props.value);\n\tstate.set(`DataTabs.value`, 1 * (!(1 * state.get(`DataTabs.value`))));\n}\n\n","import { handleChange as dataTabsHandleChange } from '../DataTabs/chains';\n\nexport var loadData = [\n\tfloadData,\n\tdataTabsHandleChange,\n];\n\nexport var clearData = [\n\tfclearData,\n];\n\nfunction handleCollapseAction({ props, state }) {\n    state.toggle(`${'OpsList.' + props.status + '.collapse'}`);\n}\n\nexport var handleCollapse = [\n\thandleCollapseAction,\n];\n\nfunction floadData({ props, state }) {\n\tconst opid = state.get('User.currentSelection.operation.id');\n\tlet fields = [];\n\tif (!(!opid)) {\n\t\tfields = Object.values(state.get(`${'operations.records.' + opid + '.fields'}`));\n\t}\n\tObject.keys(state.get('OpsList') || {}).map(status => {\n\t\tstate.set(\n\t\t\t`${'OpsList.' + status + '.fields'}`,\n\t\t\tfields.filter(field => (field.status === status)).map(fieldStub => {\n\t\t\t\treturn {'since': fieldStub['history'] ? fieldStub['history'][0]['timestamp'] : \"\",\n\t\t\t\t\t\t'by': fieldStub['history'] ? fieldStub['history'][0]['marker'] : \"\",\n                        'id': fieldStub['id'] ? fieldStub['id'] : \"\",\n\t\t\t\t\t\t...state.get(`fields.records.${fieldStub['id']}`)};\n\t\t\t})\n\t\t);\n\t});\n\treturn {value: 0};\n}\n\nfunction fclearData({props, state}) {\n\tObject.keys(state.get('OpsList')).map(status => {\n\t\tstate.set(`${'OpsList.' + status + '.fields'}`, []);\n\t});\n}\n","function handleUpdateAction({ props, state }) {\n    //let operationStatus = props.operationStatus || \"completed\";\n    let _opsList = state.get('OpsList');\n    let totalArea = Object.keys(_opsList || {}).map(\n          key => {\n            return _opsList[key]['fields'].reduce((a, b) => {\n                return a + (b.boundary ? b.boundary.area : 0)}, 0)\n        }).reduce((a, b) => {return a + b}, 0);\n    for(let operationStatus in _opsList){\n        const area = _opsList[operationStatus]['fields'].reduce((a, b) => {return a + (b.boundary ? b.boundary.area : 0)}, 0);\n        const percent = (totalArea ? Math.round(( area/totalArea + 0.00001) * 10000) / 100 : 0);\n        const totalFields = _opsList[operationStatus]['fields'] ? _opsList[operationStatus]['fields'].length : 0;\n        state.set(`OpsList.${operationStatus}.area`, area.toFixed(2));\n        state.set(`OpsList.${operationStatus}.percentage`, percent.toFixed(2));\n        state.set(`OpsList.${operationStatus}.totalFields`, totalFields);\n    }//for\n\n}\n\nexport var statsBarHandleUpdate = [\n    handleUpdateAction,\n];\n","import { sequence } from \"cerebral\";\nimport { set, when, equals } from \"cerebral/operators\";\nimport { state, props } from \"cerebral/tags\";\nimport Promise from \"bluebird\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport { loadData as loadOpsLstData } from \"../OpsList/chains\";\nimport { statsBarHandleUpdate } from \"../StatsBar/chains\";\n\n//import {putFarm} from \"../fields/sequences\";\n/* Configuration values */\nlet _localPath = \"/bookmarks/operations\";\nlet _TYPE = \"application/vnd.oada.yield.1+json\";\n/* Tree that resembles the data model for operations module */\nlet tree = {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    operations: {\n      _type: \"application/vnd.oada.yield.1+json\",\n      _rev: \"0-0\",\n      \"*\": {\n        _type: \"application/vnd.oada.yield.1+json\",\n        _rev: \"0-0\"\n      }\n    }\n  }\n};\n\n/**\n * fetches the operation\n * @type {Primitive}\n */\nexport const fetch = sequence(\"operations.fetch\", [\n  ({ state, props }) => ({\n    connection_id: state.get(\"operations.connection_id\"),\n    path: _localPath,\n    tree,\n    watch: { signals: [\"operations.handleWatchUpdate\"] }\n  }),\n  buildFetchRequest,\n  oada.get,\n  when(state`oada.${props`connection_id`}.bookmarks.operations`),\n  {\n    true: sequence(\"fetchOperationsSuccess\", [\n      mapOadaToOperations,\n      mapOperations,\n      loadOpsLstData,\n      statsBarHandleUpdate,\n      set(state`App.emptyDataSet`, false),\n    ]),\n    false: sequence(\"fetchOperationsEmptySet\", [\n      () => (\n        console.log(\"--> Operations empty set\")\n      ),\n      set(state`App.emptyDataSet`, true),\n    ]),\n\n  }\n]);\n\n/**\n * builds requests in the expected format in the cerebral-module\n * @param state\n * @returns {{requests: *[]}}\n */\nfunction buildFetchRequest({ state }) {\n  let requests = [\n    {\n      connection_id: state.get(\"operations.connection_id\"),\n      path: _localPath,\n      tree,\n      watch: { signals: [\"operations.handleWatchUpdate\"] }\n    }\n  ];\n  return { requests };\n}\n\nexport const fetchNoWatch = sequence(\"operations.fetchNoWatch\", [\n  ({ state, props }) => ({\n    connection_id: state.get(\"operations.connection_id\"),\n    path: _localPath,\n    tree\n  }),\n  //oada.get,\n  when(state`oada.${props`connection_id`}.bookmarks.operations`),\n  {\n    true: sequence(\"fetchOperationsSuccess\", [\n      mapOadaToOperations,\n      mapOperations,\n      loadOpsLstData,\n      statsBarHandleUpdate,\n      set(state`App.emptyDataSet`, false),\n    ]),\n    false: sequence(\"fetchOperationsEmptySetNoWatch\", [\n      () => (\n        console.log(\"--> Operations empty set no watch\")\n      ),\n      set(state`App.emptyDataSet`, true),\n    ])\n  }\n]);\n\n/**\n * requests the operation creation to the OADA module\n * @type {*[]}\n */\nexport const addBookmarksOperations = sequence(\n  \"operations.addBookmarksOperations\",\n  [buildBookmarksOperationsRequest, oada.put, fetch]\n);\n\n/**\n * Initialize the operations module\n * @type {Primitive}\n */\nexport const init = sequence(\"operations.init\", [\n  getConnectionsFromStorage,\n  when(state`Connections.connection_id`),\n  {\n    true: [oada.connect],\n    false: [\n      oada.connect,\n      set(state`operations.connection_id`, props`connection_id`),\n      set(state`Connections.connection_id`, props`connection_id`),\n      set(state`connections.operations.connection_id`, props`connection_id`)\n    ]\n  },\n  //\n  set(state`operations.loading`, true),\n  fetch,\n  when(state`oada.${props`connection_id`}.bookmarks.operations`),\n  {\n    true: [],\n    false: [\n      //addBookmarksOperations,\n      //set(state`InfoBar.operations.open`, true)\n    ]\n  },\n  set(state`operations.loading`, false),\n  set(props`type`, \"operations\")\n]);\n\n/**\n * gets the Connections from localCache, it updates all necessary state to auto-init the app\n * @param state\n */\nfunction getConnectionsFromStorage({ state }) {\n  let connections = JSON.parse(\n    localStorage.getItem(\"_FieldWorkApp.Connections\")\n  );\n  console.log(\"--> operations.init storage connections --> \", connections);\n  if (connections && connections[\"connection_id\"]) {\n    state.set(\"Connections.show\", false);\n    let connectionId = connections[\"connection_id\"];\n    let oadaDomain = connections[\"oada_domain\"];\n    console.log(\n      \"--> operations init connectionId and OadaDomain\",\n      connectionId,\n      oadaDomain\n    );\n    state.set(`operations.connection_id`, connectionId);\n    state.set(\"Connections.oada_domain\", oadaDomain);\n    state.set(\"Connections.oada_domain_text\", oadaDomain);\n  }\n}\n\n/**\n * refresh the operations module\n * when handling updates/watches\n * @type {Primitive}\n */\nexport const refresh = sequence(\"operations.refresh\", [\n  set(state`operations.connection_id`, props`connection_id`),\n  set(state`operations.loading`, true),\n  fetchNoWatch,\n  set(state`operations.loading`, false),\n  set(props`type`, \"operations\")\n]);\n\n/**\n * Handles updates in the resource\n * @type {*[]}\n */\nexport const handleWatchUpdate = sequence(\"operations.handleWatchUpdate\", [\n  () => {console.log(\"-->operations.handleWatchUpdate\");},\n  refresh,\n  statsBarHandleUpdate\n]);\n\nexport const selectOperation = [];\n\n/**\n * Maps operations records\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToOperations({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n  let operations = state.get(\"oada.\" + connection_id + \".bookmarks.operations\");\n\n  if (operations) {\n    return Promise.map(Object.keys(operations || {}), operation => {\n      if (operation[0] !== \"_\" && operation !== \"operations\") {\n        let op = state.get(\n          `oada.${connection_id}.bookmarks.operations.${operation}`\n        );\n        if (op && op.id) {\n          let currentOperationID = state.get(\n            \"User.currentSelection.operation.id\"\n          );\n          state.set(\"User.operations.\" + operation, { id: op.id });\n          if (!currentOperationID) {\n            // setting default operation (if there is not one)\n            state.set(\"User.currentSelection.operation.id\", op.id);\n            state.set(\"User.currentSelection.operation.inputText\", op.label);\n            state.set(\n              \"User.currentSelection.operation.placeholder\",\n              \"Operation\"\n            );\n          }\n          state.set(`operations.records.${operation}`, operations[operation]);\n        }\n        return;\n      }\n    }).then(() => {\n      return;\n    });\n  }\n} //mapOadaToOperations\n\n/**\n *\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOperations({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n  let operations = state.get(\"oada.\" + connection_id + \".bookmarks.operations\");\n\n  if (operations) {\n    return Promise.map(Object.keys(operations || {}), operation => {\n      if (operation[0] !== \"_\" && operation !== \"operations\") {\n        let op = state.get(\n          `oada.${connection_id}.bookmarks.operations.${operation}`\n        );\n        if (op && op.id) {\n          state.set(`operations.records.${operation}`, operations[operation]);\n        }\n        return;\n      }\n    }).then(() => {\n      return;\n    });\n  }\n} //mapOperations\n\n/**\n * creates new operation payload\n * @param props\n * @param state\n * @returns {{id: *, operation: {created: number, id: *, text: string, tags: Array, fields: *, label: *,\n *             idh: *, geometry: {visible: boolean}, data, stats: {}}, uuid: *}}\n */\nfunction createOperation({ props, state }) {\n  let operation = {\n    created: Date.now(),\n    id: props.item.id, //UUID\n    fields: props.item.fields || {},\n    label: props.item.label\n  };\n  return { id: operation.id, operation, uuid: operation.id };\n}\n\n/**\n * Creates request to send to the oada-server\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: *}}\n */\nfunction createOperationRequest({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n\n  let request = {\n    connection_id: connection_id,\n    data: props.operation,\n    path: _localPath + \"/\" + props.operation.id,\n    tree\n  };\n\n  let requests = [];\n  requests.push(request);\n  return {\n    connection_id: connection_id,\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\n/**\n * requests the operation creation to the OADA module\n * @type {*[]}\n */\nexport const addOperation = [\n  createOperation,\n  createOperationRequest,\n  oada.put,\n  fetchNoWatch\n];\n\n/**\n * Creates request to change/update the resource in the oada-server\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: string}}\n */\nfunction buildBookmarksOperationsRequest({ props, state }) {\n  let request = {\n    connection_id: state.get(\"operations.connection_id\"),\n    data: {},\n    type: _TYPE,\n    path: _localPath,\n    tree\n  };\n\n  let requests = [];\n\n  requests.push(request);\n\n  return {\n    connection_id: state.get(\"operations.connection_id\"),\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\n/**\n * Creates request to change/update the resource in the oada-server\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: string}}\n */\nfunction buildUpdateRequest({ props, state }) {\n  let operation_payload = state.get(\n    `${\"operations.records.\" + state.get(\"User.currentSelection.operation.id\")}`\n  );\n\n  let request = {\n    connection_id: state.get(\"operations.connection_id\"),\n    data: operation_payload,\n    type: _TYPE,\n    path: _localPath + \"/\" + state.get(\"User.currentSelection.operation.id\"),\n    tree\n  };\n\n  let requests = [];\n\n  requests.push(request);\n\n  return {\n    connection_id: state.get(\"operations.connection_id\"),\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\n/**\n * delete request\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: string}}\n */\nfunction buildDeleteRequest({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n  let request = {\n    connection_id: connection_id,\n    type: _TYPE,\n    path:\n      _localPath +\n      \"/\" +\n      state.get(\"User.currentSelection.operation.id\") +\n      \"/fields/\" +\n      state.get(\"fields.selectedId\")\n    //tree\n  };\n\n  let requests = [];\n  requests.push(request);\n\n  return {\n    connection_id: connection_id,\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\nexport const putFieldOperation = [buildUpdateRequest, oada.put];\n\nfunction updateOperationFieldState({ props, state }) {\n  state.unset(\n    `${\"operations.records.\" +\n      state.get(\"User.currentSelection.operation.id\") +\n      \".fields.\" +\n      state.get(\"fields.selectedId\")}`\n  );\n}\n\nexport const deleteFieldOperation = [\n  buildDeleteRequest,\n  oada.delete,\n  updateOperationFieldState\n];\n\n/**\n * actual sequence to update operation resource\n * @type {*[]}\n */\nexport const updateOperation = [\n  equals(props`statusValue`),\n  {\n    unplanned: [deleteFieldOperation],\n    otherwise: [putFieldOperation]\n  }\n];\n\n/**\n * Handles updates in the fields\n * @type {*[]}\n */\nexport const handleFieldUpdate = [\n  () => {console.log(\"-->operations.handlingFieldUpdate\");},\n  updateOperation\n];\n","// import { state } from 'cerebral/tags';\n// import { toggle } from 'cerebral/operators';\n// import { handleChange as dataTabsHandleChange } from '../DataTabs/chains';\n\nexport var loadData = [\n\tloadDataAction,\n\t//...dataTabsHandleChange,\n];\n\nexport var handleCollapse = [\n\thandleCollapseAction,\n];\n\nexport var handleChronologyCollapse = [\n\thandleChronologyCollapseAction,\n];\n\nfunction handleCollapseAction({ props, state }) {\n\tstate.toggle(`${'FldList.' + props.field_id + '.operations.' + props.operation_id + '.collapse'}`);\n}\n\nfunction handleChronologyCollapseAction({props, state}) {\n\tstate.toggle(`${'FldList.' + props.field_id + '.chronologyCollapse'}`);\n}\n\nfunction loadDataAction({ props, state }) {\n\tif (!(state.get('fields.editing'))) {\n\t\tconst all_fields = Object.keys(state.get('fields.records'));\n\n\t\tall_fields.map(fld_id => {\n            let operationsRecords = state.get(`${'operations.records'}`);\n\t\t\tif( operationsRecords )\n\t\t\tstate.set(`${'FldList.' + fld_id + '.operations'}`,\n\t\t\t\tObject.values(operationsRecords || {}).filter(operationRecord => {\n\t\t\t\t\treturn operationRecord.hasOwnProperty('fields') && operationRecord.fields.hasOwnProperty(fld_id)\n\t\t\t\t}).reduce((obj, operation) => {obj[operation.id] = {'id': operation.id, 'collapse': true}; return obj}, {})\n\t\t\t);\n\t\t});\n\n\t\tif (props.switchTab) {\n\t\t\treturn {value: props.switchTab}\n\t\t} else {\n\t\t\treturn {value: 1}\n\t\t}\n\t} else {\n\t\treturn {value: 2}\n\t}\n}\n","import { set } from \"cerebral/operators\";\nimport { state } from \"cerebral/tags\";\nimport gjArea from \"@mapbox/geojson-area\";\nimport { validateNewFieldButton } from \"../fields/sequences\";\n\nexport var startMovingMap = [set(state`MapPanel.moving`, true)];\n\nexport var doneMovingMap = [set(state`MapPanel.moving`, false)];\n\nexport var handleMapClick = [\n  dropPoint,\n  recalculateArea,\n  getFieldBoundingBox,\n  validateNewFieldButton\n];\n\nexport var handleLocationFound = [setCurrentLocation];\n\nexport var undoDrawPoint = [undo, recalculateArea, getFieldBoundingBox];\n\nexport var endMarkerDrag = [set(state`MapPanel.dragging_marker`, false)];\n\nexport var startMarkerDrag = [set(state`MapPanel.dragging_marker`, true)];\n\nexport var markerDragging = [\n  setMarkerPosition,\n  recalculateArea,\n  getFieldBoundingBox\n];\n\nexport var handleCurrentLocationButton = [setMapToCurrentLocation];\n\nexport var handleMapMoved = [setMapLocation];\n\nexport var setFieldOnMapCenter = [mapToFieldPolygon];\n\nexport var deleteCoordinate = [\n  deleteCoordinateAction,\n  recalculateArea,\n  getFieldBoundingBox\n];\n\nfunction deleteCoordinateAction({ props, state }) {\n  //let id = state.get(\"fields.selectedId\");\n  let tempObject = state.get(`fields.new_field`);\n  if (tempObject.boundary.geojson.coordinates[0].length > props.index) {\n    tempObject.boundary.geojson.coordinates[0].splice(props.index, 1);\n    state.set(`fields.new_field`, tempObject);\n  }\n}\n\nfunction setMapToCurrentLocation({ state }) {\n  let loc = state.get(\"MapPanel.current_location\");\n  if (loc) state.set(\"MapPanel.center\", [loc.lat, loc.lng]);\n}\n\nfunction setMapLocation({ props, state }) {\n  state.set(\"MapPanel.center\", [props.latlng.lat, props.latlng.lng]);\n  state.set(\"MapPanel.zoom\", props.zoom);\n}\n\nfunction setCurrentLocation({ props, state }) {\n  let obj = {\n    lat: props.lat,\n    lng: props.lng\n  };\n  state.set(\"MapPanel.current_location\", obj);\n}\n\n/*function handleFieldPolygonClicked({props, state}) {\n//  state.set('fields.new_field.id', props.field_id);\n  const field = state.get(`fields.records.${props.field_id}`);\n  state.set('fields.new_field.id', field.id);\n  state.set('fields.new_field.inputText', field.label);\n  state.set('fields.new_field.suggestionsOpen', false);\n  state.set('fields.new_field.tempObject', state.get(`${'fields.' + field.id}`));\n  delete props.field_id;\n  return {item: field};\n}*/\n\nfunction setMarkerPosition({ props, state }) {\n  //let id = state.get(`fields.selectedId`);\n  state.set(`fields.new_field.boundary.geojson.coordinates.0.${props.idx}`, [\n    props.lng,\n    props.lat\n  ]);\n}\n\nfunction validateFieldCoordinates({ state }) {\n  //let id = state.get(`fields.selectedId`);\n  let field = state.get(`fields.new_field`);\n  console.log(\"--> validating field coordinates\");\n\n  if (\n    field.boundary.geojson &&\n    field.boundary.geojson.coordinates[0].length > 2\n  ) {\n    state.set(\"User.currentSelection.field.coordinatesOk\", true);\n  } else {\n    state.set(\"User.currentSelection.field.newFieldDisabled\", true);\n    state.set(\"User.currentSelection.field.coordinatesOk\", false);\n  }\n}\n\nfunction recalculateArea({ state }) {\n  //let id = state.get(`fields.selectedId`);\n  let field = state.get(`fields.new_field`);\n  let area = 0.0;\n  if (\n    field.boundary.geojson &&\n    field.boundary.geojson.coordinates[0].length > 2\n  ) {\n    area = gjArea.geometry(field.boundary.geojson) / 4046.86;\n  }\n  state.set(`fields.new_field.boundary.area`, area);\n\n  validateFieldCoordinates({ state });\n}\n\nfunction undo({ props, state }) {\n  //let id = state.get(\"fields.selectedId\");\n  let points = state.get(`fields.new_field.boundary.geojson.coordinates.0`);\n  if (points.length > 0) {\n    state.pop(`fields.new_field.boundary.geojson.coordinates.0`);\n  }\n}\n\nfunction mapToFieldPolygon({ state }) {\n  // let id = state.get(\"fields.selectedId\");\n  // console.log(\"--> selectedId\", id);\n  // if (!state.get(\"fields.editing\")) {\n  //   let field = state.get(`fields.new_field`);\n  //   if (field) {\n  //     state.set(\"MapPanel.center\", field.boundary.centroid);\n  //   }\n  // }\n  let id = state.get(\"fields.selectedId\");\n  if (!state.get(\"fields.editing\")) {\n    let field = state.get(`fields.records.${id}`);\n    if (field) {\n      state.set(\"MapPanel.center\", field.boundary.centroid);\n    }\n  }\n}\n\nfunction getFieldBoundingBox({ props, state }) {\n  //let id = state.get(\"fields.selectedId\");\n  let bbox = computeBoundingBox(state.get(`fields.new_field.boundary.geojson`));\n  let c1 = null;\n  let c2 = null;\n  if (!!bbox) {\n    c1 = (bbox.north + bbox.south) / 2;\n    c2 = (bbox.east + bbox.west) / 2;\n  }\n  state.set(`fields.new_field.boundary.bbox`, bbox);\n  state.set(`fields.new_field.boundary.centroid`, [c1, c2]);\n}\n\nfunction dropPoint({ props, state }) {\n  //let id = state.get(\"fields.selectedId\");\n  state.push(`fields.new_field.boundary.geojson.coordinates.0`, props.pt);\n}\n\nfunction computeBoundingBox(geojsonPolygon) {\n  let coords = geojsonPolygon.coordinates[0];\n  if (coords.length > 0) {\n    let north = coords[0][1];\n    let south = coords[0][1];\n    let east = coords[0][0];\n    let west = coords[0][0];\n    for (let j = 0; j < coords.length; j++) {\n      if (coords[j][1] > north) north = coords[j][1];\n      if (coords[j][1] < south) south = coords[j][1];\n      if (coords[j][0] > east) east = coords[j][0];\n      if (coords[j][0] < west) west = coords[j][0];\n    }\n    let bbox = { north, south, east, west };\n    return bbox;\n  } else {\n    return null;\n  }\n}\n","import { toggle, set } from \"cerebral/operators\";\nimport { state } from \"cerebral/tags\";\n\nexport var handleDrawerOpen = [toggle(state`BottomDrawer.open`)];\n\nexport var openBottomDrawerForStatusUpdate = [\n  set(state`BottomDrawer.menu`, \"status-update\"),\n  set(state`BottomDrawer.open`, true)\n];\n\nexport var handleOperatorMenuOpen = [\n  set(state`BottomDrawer.operatorMenuOpen`, true)\n];\n\nexport var handleOperatorMenuClose = [\n  set(state`BottomDrawer.operatorMenuOpen`, false)\n];\n","import { unset, set, when } from \"cerebral/operators\";\nimport { state, props } from \"cerebral/tags\";\nimport Promise from \"bluebird\";\nimport uuid from \"uuid\";\nimport { loadData as loadFldData } from \"../FldList/chains\";\nimport { setFieldOnMapCenter } from \"../MapPanel/chains\";\nimport { openBottomDrawerForStatusUpdate } from \"../BottomDrawer/chains\";\nimport { statsBarHandleUpdate } from \"../StatsBar/chains\";\nimport geojson_area from \"@mapbox/geojson-area\";\nimport centroid from \"@turf/centroid\";\nimport bbox from \"@turf/bbox\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport { sequence } from \"cerebral/index\";\nimport {loadData as loadOpsLstData} from \"../OpsList/chains\";\n/* internal local variables */\nconst _METERS_TO_ACRES = 0.000247105;\n\nlet tree = {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    fields: {\n      _type: \"application/vnd.oada.fields.1+json\",\n      _rev: \"0-0\",\n      \"fields-index\": {\n        \"*\": {\n          _type: \"application/vnd.oada.field.1+json\",\n          _rev: \"0-0\",\n          \"fields-index\": {\n            \"*\": {\n              _type: \"application/vnd.oada.field.1+json\",\n              _rev: \"0-0\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport var addFieldClicked = [\n  addNewField,\n  validateNewFieldButton,\n  ...loadFldData,\n  setCurrentField,\n  resetCurrentSelectionStatus,\n  set(state`fields.editing`, true),\n  set(state`fields.isNewField`, true)\n];\n\nexport var handleFieldPolygonClicked = [\n  setCurrentField,\n  setStatusMarkerCurrentField,\n  resetCurrentSelectionStatus,\n  ...loadFldData,\n  ...setFieldOnMapCenter,\n  ...openBottomDrawerForStatusUpdate\n];\n\n/**\n * Maps fields records\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToFields({ props, state }) {\n  let connection_id = state.get(\"fields.connection_id\");\n  let curFields = state.get(\"fields.records\");\n\n  //console.log(\" ===== map oada to fields ===== \");\n\n  return Promise.map(Object.keys(curFields || {}), field => {\n    return state.unset(`fields.records.${field}`);\n  })\n    .then(() => {\n      let fields = state.get(`oada.${connection_id}.bookmarks.fields`);\n      if (fields) {\n        return Promise.map(\n          Object.keys(fields[\"fields-index\"] || {}),\n          fieldGroup => {\n            if (fields[\"fields-index\"][fieldGroup]) {\n              return Promise.map(\n                Object.keys(\n                  fields[\"fields-index\"][fieldGroup][\"fields-index\"] || {}\n                ),\n                field => {\n                  let field_object =\n                    fields[\"fields-index\"][fieldGroup][\"fields-index\"][field];\n                  let record = {\n                    id: field,\n                    name: field_object.name,\n                    farm: {\n                      id: fieldGroup,\n                      name: fields[\"fields-index\"][fieldGroup].name\n                    }\n                  };\n\n                  if (field_object.boundary) {\n                    let centroid_object = centroid(\n                      field_object.boundary.geojson\n                    );\n                    record.boundary = {\n                      geojson: field_object.boundary.geojson,\n                      area:\n                        geojson_area.geometry(field_object.boundary.geojson) *\n                        _METERS_TO_ACRES,\n                      centroid: centroid_object.geometry.coordinates.reverse(),\n                      bbox: bbox(field_object.boundary.geojson),\n                      visible: true\n                    };\n                  }\n\n                  return state.set(`fields.records.${field}`, record);\n                }\n              );\n            } else {\n              return;\n            }\n          }\n        );\n      } else return;\n    })\n    .then(() => {\n      return;\n    });\n}\n\n/**\n * Maps farms records (utilized to validate the existence of a farm)\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToFarms({ props, state }) {\n  let connection_id = state.get(\"fields.connection_id\");\n  let curFarms = state.get(\"fields.farms\");\n\n  //console.log(\" ---- map oada to farms ---- \");\n\n  return Promise.map(Object.keys(curFarms || {}), farm => {\n    return state.unset(`fields.farms.${farm}`);\n  })\n    .then(() => {\n      let fields = state.get(`oada.${connection_id}.bookmarks.fields`);\n      if (fields) {\n        return Promise.map(Object.keys(fields[\"fields-index\"] || {}), farm => {\n          if (\n            fields[\"fields-index\"][farm] &&\n            fields[\"fields-index\"][farm].name\n          ) {\n            let farm_object = fields[\"fields-index\"][farm];\n            let record = {\n              id: farm,\n              name: farm_object.name\n            };\n            return state.set(\n              `fields.farms.${fields[\"fields-index\"][farm].name}`,\n              record\n            );\n          } else {\n            return;\n          }\n        });\n      } else return;\n    })\n    .then(() => {\n      return;\n    });\n} //mapOadaToFarms\n\nexport const putFarm = [\n  ({ state, props }) => ({\n    data: {\n      _id: \"resources/\" + props.item.farm.id,\n      name: props.item.farm.name\n    }\n  }),\n  ({ props, state }) => ({\n    connection_id: state.get(\"operations.connection_id\"),\n    data: props.data,\n    path: `/bookmarks/fields/fields-index/${props.item.farm.id}`,\n    tree\n  }),\n  createFarmRequest,\n  oada.put\n];\n\n/**\n *\n * @param props\n * @param state\n * @returns {{connection_id: *, data: {id: null, placeholder: string, suggestionsOpen: boolean, name: string, disabled: boolean, editing: boolean, tempObject: null, newFieldDisabled: boolean}|state.currentSelection.field|{id, placeholder, suggestionsOpen, name, disabled, editing, tempObject, newFieldDisabled}|*|{_id: string, name: *, boundary: {geojson: {type: string, coordinates: Array[]}|boundary.geojson|{type, coordinates}}}|{id: *, label: *, boundary: {area: null, geojson: {type: string, coordinates: *[]}, bbox: null, centroid: *[], visible: boolean}}, path: string, tree: {bookmarks: {_type: string, _rev: string, fields: {_type: string, _rev: string, \"fields-index\": {\"*\": {_type: string, _rev: string, \"fields-index\": {\"*\": {_type: string, _rev: string}}}}}}}}}\n */\nfunction createFarmRequest({ props, state }) {\n  let data = {\n    _id: \"resources/\" + props.item.farm.id,\n    name: props.item.farm.name\n  };\n  let requests = [];\n  requests.push({\n    connection_id: state.get(\"operations.connection_id\"),\n    data,\n    path: `/bookmarks/fields/fields-index/${props.item.farm.id}`,\n    tree\n  });\n  return { requests };\n}\n\n/**\n * creates new field payload\n * @param props\n * @param state\n * @returns {{id: *, field: {created: number, id: *, text: string, tags: Array, fields: {},\n * boundary: {visible: boolean}, data, stats: {}}, uuid: *}}\n */\nfunction createField({ props, state }) {\n  let field = {\n    _id: \"resources/\" + props.item.id,\n    name: props.item.name,\n    boundary: { geojson: props.item.boundary.geojson }\n  };\n  return { id: props.item.id, field };\n}\n\nfunction createFieldRequest({ props, state }) {\n  let farmName = state.get(`fields.farms.${props.item.farm.name}`);\n  let farmId = props.item.farm.id;\n\n  if (farmName) {\n    farmId = state.get(`fields.farms.${props.item.farm.name}.id`);\n  }\n\n  let requests = [];\n\n  requests.push({\n    connection_id: state.get(\"operations.connection_id\"),\n    data: props.field,\n    path: `/bookmarks/fields/fields-index/${farmId}/fields-index/${props.id}`,\n    tree\n  });\n\n  return { requests };\n}\n\nexport var disableNewFieldButton = [\n  set(state`User.currentSelection.field.newFieldDisabled`, true),\n  set(state`User.currentSelection.field.coordinatesOk`, false)\n];\n\nexport const putField = [\n  createField,\n  createFieldRequest,\n  oada.put,\n  disableNewFieldButton\n];\n\nexport var handleFieldSelected = [\n  setCurrentField,\n  resetCurrentSelectionStatus,\n  //\t...loadFldData,\n  ...setFieldOnMapCenter\n];\n\nexport var handleFarmSelected = [\n  set(`field.records.${props`id`}.farm`, props`farm`)\n];\n\nexport var saveEditedField = [\n  //() => { console.log('--> fields.saveEditedfield #1') },\n  set(props`item`, state`fields.new_field`),\n  set(state`fields.editing`, false),\n  when(state`fields.farms.${props`item.farm.name`}`),\n  {\n    true: [],\n    false: [putFarm]\n  },\n  putField,\n  unset(state`fields.selectedId`),\n  set(state`fields.new_field`, {}),\n  unset(state`fields.temp_buffer`)\n];\n\nfunction setStatusMarkerCurrentField({ props, state }){\n  let operationId = state.get(`User.currentSelection.operation.id`);\n  let fieldId = state.get(`fields.selectedId`);\n  let status = state.get(`operations.records.${operationId}.fields.${fieldId}.status`);\n  let marker = state.get(`operations.records.${operationId}.fields.${fieldId}.history.0.marker`);\n  if(status)\n    state.set(`User.currentSelection.status.status`, status);\n  if(marker) {\n    state.set(`User.currentSelection.status.marker`, marker);\n    state.set(`User.label`, marker);\n  }\n}\n\nexport function setCurrentField({ props, state }) {\n  state.set(\"fields.selectedId\", props.field.id);\n  if (!state.get(\"fields.editing\")) {\n    state.set(`fields.new_field.field.suggestionsOpen`, false);\n    state.set(\"fields.editing\", false);\n  }\n}\n\n/**\n * sets the current field to empty\n * @param props\n * @param state\n */\n// function clearCurrentField({ props, state }) {\n//   let id = state.get(\"fields.selectedId\");\n//   if (!state.get(\"fields.editing\")) {\n//     state.set(`fields.new_field`, {});\n//     state.set(`fields.editing`, false);\n//     state.set(\"User.currentSelection.status\", {\n//       status: null,\n//       marker: null,\n//       timestamp: null\n//     });\n//   }\n// }\n\n/**\n * Creates the template for the field record with a random UUID\n * @returns {{id: *, label: *, boundary: {area: null, geojson: {type: string, coordinates: *[]}, bbox: null, centroid: *[], visible: boolean}}}\n */\nfunction createFieldRecord() {\n  return {\n    id: uuid(),\n    name: \"\",\n    farm: {\n      name: \"\",\n      id: uuid()\n    },\n    boundary: {\n      geojson: {\n        type: \"Polygon\",\n        coordinates: [[]]\n      },\n      visible: true\n    }\n  };\n} //createFieldRecord\n\n/**\n *\n * @param props\n * @param state\n * @returns {{item: any}}\n */\nexport function addNewFarm({ props, state }) {\n  let _inputText = state.get(\"fields.new_field.farm.name\");\n  let farmRecord = createFieldRecord(_inputText);\n  state.set(`fields.selectedId`, farmRecord.id);\n  state.set(`fields.records.${farmRecord.id}`, farmRecord);\n\n  return { item: farmRecord };\n}\n\n/**\n *\n * @param props\n * @param state\n * @returns {{item: any}}\n */\nexport function addNewField({ props, state }) {\n  let _inputText = state.get(\"fields.new_field.field.name\");\n  let field = createFieldRecord(_inputText);\n  state.set(`fields.new_field`, field);\n\n  return { field };\n}\n\n/**\n * Generates a timestamp in the format 'YYYY-MM-DD'\n * @returns {string}\n */\nfunction timestamp() {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1; //January is 0!\n  let yyyy = today.getFullYear();\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  return yyyy + \"-\" + mm + \"-\" + dd;\n}\n\n/**\n * gets the current field status in the current operation\n * @param props\n * @param state\n * @returns {string}\n */\nfunction getCurrentOperationFieldStatus({ props, state }) {\n  let status = state.get(\n    `${\"operations.records.\" +\n      state.get(\"User.currentSelection.operation.id\") +\n      \".fields.\" +\n      state.get(\"fields.selectedId\") +\n      \".status\"}`\n  );\n  return status ? status : \"unplanned\";\n} //getCurrentOperationFieldStatus\n\n/**\n * resets the current field status in the current operation\n * @param props\n * @param state\n */\nfunction resetCurrentSelectionStatus({ props, state }) {\n  if (!state.get(\"fields.editing\")) {\n    let currentOperationFieldStatus = getCurrentOperationFieldStatus({\n      props,\n      state\n    });\n    if (currentOperationFieldStatus) {\n      state.set(\n        \"User.currentSelection.status.status\",\n        currentOperationFieldStatus\n      );\n    }\n    state.set(\"User.currentSelection.status.timestamp\", timestamp());\n    state.set(\"User.currentSelection.status.marker\", state.get(\"User.label\"));\n    //state.set(\"User.currentSelection.status.marker\", state.get(\"User.label\"));\n  } //if\n}\n\n/**\n * it verifies that farm and field have some value in the textbox\n * (it does not allow empty field's name or farm's name)\n * @param props\n * @param state\n */\nexport function validateNewFieldButton({ props, state }) {\n  let id = state.get(\"fields.selectedId\");\n  let fieldName = state.get(`fields.new_field.name`);\n  let farmName = state.get(`fields.new_field.farm.name`);\n  let coordinatesOk = state.get(`User.currentSelection.field.coordinatesOk`);\n  console.log(\"selectedId, field_name, farm_name, coordinatesOk, \", id, fieldName, farmName, coordinatesOk);\n  if (\n    fieldName &&\n    farmName &&\n    fieldName.length > 0 &&\n    farmName.length > 0 &&\n    coordinatesOk\n  ) {\n    state.set(\"User.currentSelection.field.newFieldDisabled\", false);\n  } else {\n    state.set(\"User.currentSelection.field.newFieldDisabled\", true);\n  }\n}\n\n/**\n * Farm's input text changed\n * @param props\n * @param state\n */\nexport function farmTextChanged({ props, state }) {\n  state.set(`fields.new_field.farm.name`, props.value);\n  state.set(\"fields.new_field.farm.suggestionsOpen\", true);\n  validateNewFieldButton({ props, state });\n}\n\n/**\n * Field's input text changed\n * @param props\n * @param state\n */\nexport function fieldTextChanged({ props, state }) {\n  state.set(`fields.new_field.name`, props.value);\n  state.set(\"fields.new_field.field.suggestionsOpen\", true);\n  validateNewFieldButton({ props, state });\n}\n\n/**\n * Handles updates in the resource\n * @type {*[]}\n */\nexport const handleWatchUpdate = sequence(\"fields.handleWatchUpdate\", [\n  () => {\n    //console.log(\"--> fields.handlingWatchUpdate\");\n  },\n  mapOadaToFields,\n  mapOadaToFarms,\n  loadOpsLstData,\n  statsBarHandleUpdate\n]);\n\nexport const cancelNewField = sequence(\"fields.cancelNewField\", [\n  () => {\n    //console.log(\"--> fields.cancelNewField\");\n  },\n  set(state`fields.new_field`, {}),\n  set(state`fields.editing`, false),\n  set(state`fields.isNewField`, false),\n  unset(state`fields.selectedId`),\n  set(state`User.currentSelection.field.coordinatesOk`, false),\n  unset(state`fields.temp_buffer`)\n]);\n\n","import MobileDetect from \"mobile-detect\";\nimport * as oada from \"@oada/cerebral-module/sequences\";\nimport * as operations from \"../operations/sequences\";\nimport { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { when } from \"cerebral/operators\";\nimport { mapOadaToFields, mapOadaToFarms } from \"../fields/sequences\";\nimport * as fields from \"@oada/fields-module/sequences\";\n\n// const _DEBUG = false;\n// const _TOKEN = 'servio';\n//const _SCOPE = 'oada.operations:all';\nconst _SCOPE = \"oada.yield:all\";\nconst _TOKEN = \"def\";\n\n// previous http\nconst _OPENATK_METADATA =\n  \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY\";\n// const _LOCALHOST_VIP_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n// const _REDIRECT_LOCALHOST = 'http://localhost:8000/oauth2/redirect.html';\n\nconst _REDIRECT_OPENATK =\n  \"https://openatk.com/FieldWorkApp/oauth2/redirect.html\";\n// const _OPENATK_METADATA = \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vRmllbGRXb3JrQXBwL29hdXRoMi9yZWRpcmVjdC5odG1sIiwiaHR0cHM6Ly9vcGVuYXRrLmdpdGh1Yi5pby9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJhdXRob3JpemF0aW9uX2NvZGUiXSwicmVzcG9uc2VfdHlwZXMiOlsidG9rZW4iLCJjb2RlIiwiaWRfdG9rZW4iLCJpZF90b2tlbiB0b2tlbiIsImNvZGUgaWRfdG9rZW4iLCJjb2RlIHRva2VuIiwiY29kZSBpZF90b2tlbiB0b2tlbiJdLCJjbGllbnRfbmFtZSI6Ik9wZW5BVEsiLCJjbGllbnRfdXJpIjoiaHR0cDovL29wZW5hdGsuY29tIiwiY29udGFjdHMiOlsiU2VydmlvIFBhbGFjaW9zIDxzcGFsYWNpb0BwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiZjhjZjUwODctN2QwOC00ODBjLWJmZDgtOTIxMGNiOWQxYTg0IiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1MzU0Njc0NDh9.OIgqJ8aVyRgbTc9C-eY0Mk9Eku49eKVf5Yl2kAqDnZNykU3fvK0o5Mtd_C_EvSUS49I1iL2ZPpsW4VAgHzcIzLNj9I5KC-eTzZOIyQxWWA0fYtXoJFaXF4BJfIjOBwmmPJ6ohteCqv5Az_LU5leZiAVWoLDNOo6Wu9wMwmMf_uA\";\n\n/**\n * VIP and Localhost - Dev\n * @type {string}\n * @private\n */\n// const _CURRENT_METADATA = _LOCALHOST_VIP_METADATA;\n// const _CURRENT_REDIRECT = _REDIRECT_LOCALHOST;\n\n/**\n * OpenATK domain - Production\n * @type {string}\n * @private\n */\nconst _CURRENT_METADATA = _OPENATK_METADATA;\nconst _CURRENT_REDIRECT = _REDIRECT_OPENATK;\n\nexport const init = sequence(\"App.init\", [\n  setMobile,\n  getConnectionsFromStorage,\n  when(state`Connections.connection_id`),\n  {\n    true: sequence(\"autoInitSuccess\", [\n      ({ state }) => ({\n        domain: state.get(\"Connections.oada_domain\"),\n        options: {\n          redirect: _CURRENT_REDIRECT,\n          metadata: _CURRENT_METADATA,\n          scope: _SCOPE\n        },\n        token: _TOKEN,\n        connection_id: state.get(\"operations.connection_id\"),\n        signals: [\"fields.handleWatchUpdate\"]\n      }),\n      fields.init,\n      mapOadaToFields,\n      mapOadaToFarms,\n      ({ state }) => ({\n        domain: state.get(\"Connections.oada_domain\"),\n        options: {\n          redirect: _CURRENT_REDIRECT,\n          metadata: _CURRENT_METADATA,\n          scope: _SCOPE\n        },\n        token: _TOKEN,\n        connection_id: state.get(\"operations.connection_id\")\n      }),\n      operations.init\n    ]),\n    false: []\n  }\n]);\n\n/**\n * gets the Connections from localCache, it updates all necessary state to auto-init the app\n * @param state\n */\nfunction getConnectionsFromStorage({ state }) {\n  let connections = JSON.parse(\n    localStorage.getItem(\"_FieldWorkApp.Connections\")\n  );\n  //console.log(\"--> app init storage connections --> \", connections);\n  if (connections && connections[\"connection_id\"]) {\n    let connectionId = connections[\"connection_id\"];\n    let oadaDomain = connections[\"oada_domain\"];\n    state.set(\"Connections.show\", false);\n    state.set(`operations.connection_id`, connectionId);\n    state.set(`fields.connection_id`, connectionId);\n    state.set(`Connections.connection_id`, connectionId);\n    state.set(\"Connections.oada_domain\", oadaDomain);\n    state.set(\"Connections.oada_domain_text\", oadaDomain);\n  } else {\n    state.set(\"Connections.show\", true);\n  }\n}\n\nexport const clearCacheButtonClicked = [\n  ({ state, props }) => ({\n    connection_id: state.get(\"operations.connection_id\")\n  }),\n  oada.resetCache,\n  init\n];\n\nfunction setMobile({ state }) {\n  let md = new MobileDetect(window.navigator.userAgent);\n  state.set(`App.is_mobile`, md.mobile() !== null);\n}\n\n/**\n * sets the operation\n * @param state\n * @returns {*}\n */\n// function setDefaultOperation({state}) {\n//     const operations = Object.values(state.get('operations.records'));\n//     if (operations.length > 0) {\n//         return {item: operations[0]}\n//     } else {\n//         return {item: null}\n//     }\n// }\n","import stateTree from \"./stateTree.js\";\nimport { Module } from \"cerebral\";\nimport StorageModule from \"@cerebral/storage\";\n\n/* sequences */\nimport * as signals from \"./sequences\";\n\nconst LocalCache = StorageModule({\n  target: window.localStorage ? localStorage : null,\n  json: true,\n  sync: {\n    Connections: \"Connections\"\n  },\n  prefix: \"_FieldWorkApp\"\n});\n\nexport default Module({\n  state: stateTree,\n  signals,\n  modules: { LocalCache }\n});\n","/* cerebral imports */\nimport {state, props} from 'cerebral/tags';\nimport { set } from 'cerebral/operators';\n/* fields-module */\nimport * as fields from '@oada/fields-module/sequences';\nimport cerebralModule from '@oada/cerebral-module/sequences';\nimport { mapOadaToFields, mapOadaToFarms } from \"../fields/sequences\";\nimport { loadData as loadFldListData } from \"../FldList/chains\";\n/* operations module */\nimport * as operations from \"../operations/sequences\";\n\nconst _SCOPE = 'oada.yield:all';\nconst _OPENATK_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY';\n// const _LOCALHOST_VIP_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n// const _REDIRECT_LOCALHOST = 'http://localhost:8000/oauth2/redirect.html';\nconst _REDIRECT_OPENATK = 'http://openatk.com/FieldWorkApp/oauth2/redirect.html';\nconst _TOKEN = 'def';\n\n/**\n * VIP and Localhost\n * @type {string}\n * @private\n */\n// const _CURRENT_METADATA = _LOCALHOST_VIP_METADATA;\n// const _CURRENT_REDIRECT = _REDIRECT_LOCALHOST;\n\n/**\n * OpenATK domain\n * @type {string}\n * @private\n */\nconst _CURRENT_METADATA = _OPENATK_METADATA;\nconst _CURRENT_REDIRECT = _REDIRECT_OPENATK;\n\nexport var signOut = [\n    set(state`Connections.oada_token`, ''),\n    set(state`Connections.oada_domain`, ''),\n    set(state`Connections.oada_fields_domain`, ''),\n    set(state`Connections.oada_domain_text`, ''),\n    set(state`Connections.oada_fields_domain_text`, ''),\n];\n\nexport var updateOadaDomain = [\n    set(state`Connections.oada_domain_text`, props`value`),\n];\n\n// version 1 assumes operations and fields are at the same service\nexport var updateOadaFieldsDomain = [\n    set(state`Connections.oada_fields_domain_text`, props`value`),\n];\n\nexport var clearConnection = [\n  operationsCleanUp,\n  loadFldListData,\n  connectionCleanUp\n];\n\nexport var init = [\n  set(state`Connections.show`, false),\n  ({state}) => ({\n    domain:         state.get('Connections.oada_domain'),\n    options: {\n      redirect: _CURRENT_REDIRECT,\n      metadata: _CURRENT_METADATA,\n      scope:    _SCOPE\n    },\n    token:         _TOKEN,\n    connection_id: state.get('operations.connection_id'),\n    signals: ['fields.handleWatchUpdate']\n  }),\n  fields.init,\n  mapOadaToFields,\n  mapOadaToFarms,\n  ({state}) => ({\n    domain:         state.get('Connections.oada_domain'),\n    options: {\n      redirect: _CURRENT_REDIRECT,\n      metadata: _CURRENT_METADATA,\n      scope:    _SCOPE\n    },\n    token:         _TOKEN,\n    connection_id: state.get('operations.connection_id'),\n  }),\n  operations.init,\n  loadFldListData\n];\n\nexport var setConnection = [\n  set(state`Connections.show`, false),\n  set(state`Connections.oada_domain`, state`Connections.oada_domain_text`),\n  //set(state`Connections.oada_fields_domain`, state`Connections.oada_fields_domain_text`), v2\n  set(props`domain`, state`Connections.oada_domain`), // need to put domain in there for cerebralModule.resetCache\n  cerebralModule.resetCache,\n  init,\n  set(props`domain`, state`Connections.oada_domain`)\n];\n\nexport var cancelConnection = [\n  set(state`Connections.show`, false),\n  set(state`Connections.oada_domain`, state`Connections.oada_domain`),\n  set(state`Connections.oada_fields_domain`,  state`Connections.oada_domain`),\n];\n\nexport var showConnections = [\n  set(state`Connections.show`, true)\n];\n\nfunction operationsCleanUp({state, props}){\n  let operations =  state.get('operations.records');\n\n  if(operations) {\n    let operationsKeys = Object.keys(operations);\n    let userOperations = state.get('User.operations');\n\n    /* cleaning up operations from the previous connections */\n    operationsKeys.forEach((operation) => {\n        delete userOperations[operation];\n    });\n\n    state.set('User.operations', userOperations);\n    state.unset('operations.records');\n  }\n}\n\nfunction connectionCleanUp({state, props}){\n  let connection_id = state.get('operations.connection_id');\n  /* cleaning up connections from oada state */\n  state.unset('oada.connections');\n  /* cleaning up previous connection_id from oada state */\n  state.unset('oada.' + connection_id)\n}\n","import { Module } from 'cerebral';\nimport {\n    showConnections,\n    signOut,\n} from '../Connections/chains';\n\nimport {\n    clearCacheButtonClicked\n} from \"../App/sequences\";\n\nexport default Module({\n    state: {\n        open: false\n    },\n\n  signals: {\n      connectionsClicked: showConnections,\n      signoutClicked: signOut,\n      clearCacheClicked: clearCacheButtonClicked\n  }\n});\n","import { toggle } from 'cerebral/operators'\nimport {state} from 'cerebral/tags'\n\nexport var handleDrawerOpen = [\n  toggle(state`SideDrawer.open`)\n];\n","import { Module } from 'cerebral';\nimport * as signals from './chains';\n\n\nexport default Module({\n\tstate: {\n\t\topen: false\n  \t},\n\n  \tsignals,\n});\n","import { Module } from 'cerebral';\nimport {\n\thandleChange,\n\thandleChangeIndex,\n\ttoggleTab,\n} from './chains';\n\n\nexport default Module({\n\tstate: {\n\t\tvalue: 0\n  \t},\n\n  \tsignals: {\n  \t\thandleChange: handleChange,\n  \t\thandleChangeIndex: handleChangeIndex,\n  \t\ttoggleTab: toggleTab,\n  \t}\n});\n","/* cerebral imports */\n\n/* operations imports */\nimport { loadData as loadOpsData } from \"../OpsList/chains\";\nimport { clearData as clearOpsData } from \"../OpsList/chains\";\n\n/* operations module imports */\nimport * as operations from \"../operations/sequences\";\n\n/* fields imports */\nimport { loadData as loadFldData } from \"../FldList/chains\";\n\n/* Drawers and Panels imports */\nimport { handleDrawerOpen as handleBottomDrawerOpen } from \"../BottomDrawer/chains\";\nimport uuid from \"uuid\";\nimport {statsBarHandleUpdate} from \"../StatsBar/chains\";\n\nexport var setCurrentSelectionStatusStatus = [\n  setCurrentSelectionStatus,\n  saveCurrentSelectionStatusAction,\n  ...loadOpsData,\n  ...loadFldData,\n  ...handleBottomDrawerOpen,\n  operations.updateOperation,\n  resetCurrentSelectionStatus\n];\n\nexport var setCurrentSelectionStatusMarker = [\n  setCurrentSelectionStatusMarkerAction\n];\n\nexport var setCurrentSelectionStatusTimestamp = [\n  setCurrentSelectionStatusTimestampAction\n];\n\nexport var saveCurrentSelectionStatus = [\n  saveCurrentSelectionStatusAction,\n  ...loadOpsData,\n  ...loadFldData,\n  ...handleBottomDrawerOpen,\n  resetCurrentSelectionStatus\n];\n\nexport var handleOperationSelected = [\n  setCurrentOperation,\n  ...loadOpsData,\n  statsBarHandleUpdate\n];\n\nexport var handleOperationCleared = [clearCurrentOperation, ...clearOpsData];\n\nexport var addNewOperation = [\n  ...handleBottomDrawerOpen,\n  addNewOperationAction,\n  operations.addOperation,\n  setCurrentOperation,\n  ...loadOpsData\n];\n\nexport var setDisabledNewOperation = [setDisabledNewOperationAction];\n\nexport var cancelNewOperation = [\n  cancelNewOperationAction,\n  setCurrentOperation,\n  ...loadOpsData,\n  ...handleBottomDrawerOpen\n];\n\n/**\n * Generates a timestamp in the format 'YYYY-MM-DD'\n * @returns {string}\n */\nfunction timestamp() {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1; //January is 0!\n  let yyyy = today.getFullYear();\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  return yyyy + \"-\" + mm + \"-\" + dd;\n}\n\nfunction getCurrentOperationFieldStatus({ props, state }) {\n  let id = state.get(\"fields.selectedId\");\n  let opId = state.get(\"User.currentSelection.operation.id\");\n  let result = state.get(`operations.records.${opId}.fields.${id}.status'}`);\n  return result || \"unplanned\";\n}\n\nfunction setCurrentSelectionStatus({ props, state }) {\n  state.set(\"User.currentSelection.status.status\", props.value);\n}\n\nfunction setCurrentSelectionStatusMarkerAction({ props, state }) {\n  if (!!props.marker) {\n    state.set(\"User.currentSelection.status.marker\", props.marker);\n  }\n}\n\nfunction setCurrentSelectionStatusTimestampAction({ props, state }) {\n  if (props.timestamp) {\n    state.set(\"User.currentSelection.status.timestamp\", props.timestamp);\n  }\n}\n\nfunction saveCurrentSelectionStatusAction({ props, state }) {\n  let currentOperationID = state.get(\"User.currentSelection.operation.id\");\n\n  //do nothing when this is falsy\n  if(!currentOperationID) return;\n  let id = state.get(\"fields.selectedId\");\n  let _status = state.get(\"User.currentSelection.status.status\");\n\n  state.set(\n    `operations.records.${currentOperationID}.fields.${id}.status`,\n    _status\n  );\n\n  if (_status === \"unplanned\") {\n    state.unset(\n      `${\"operations.records.\" + currentOperationID + \".fields.\" + id}`\n    );\n  } else {\n    //fixing bug when id not present in fields.id.record\n    if (id) {\n      state.set(\n        `${\"operations.records.\" +\n          currentOperationID +\n          \".fields.\" +\n          id +\n          \".id\"}`,\n        id\n      );\n\n      if (\n        !state.get(\n          `${\"operations.records.\" +\n            currentOperationID +\n            \".fields.\" +\n            id +\n            \".history\"}`\n        )\n      ) {\n        state.set(\n          `${\"operations.records.\" +\n            currentOperationID +\n            \".fields.\" +\n            id +\n            \".history\"}`,\n          []\n        );\n      } //if\n\n      if (\n        state.get(\n          `${\"operations.records.\" +\n            currentOperationID +\n            \".fields.\" +\n            id +\n            \".history\"}`\n        )\n      ) {\n        state.unshift(\n          `${\"operations.records.\" +\n            currentOperationID +\n            \".fields.\" +\n            id +\n            \".history\"}`,\n          {\n            status: _status || \"planned\",\n            marker: state.get(\"User.currentSelection.status.marker\"),\n            timestamp: state.get(\"User.currentSelection.status.timestamp\")\n          }\n        );\n      }\n    }\n  } //else\n}\n\nfunction setCurrentOperation({ props, state }) {\n  if (!!props.item) {\n    state.set(\"User.currentSelection.operation.id\", props.item.id);\n    state.set(\"User.currentSelection.operation.inputText\", props.item.label);\n    state.set(\"User.currentSelection.operation.suggestionsOpen\", false);\n  }\n}\n\nfunction clearCurrentOperation({ props, state }) {\n  state.set(\"User.currentSelection.operation.id\", null);\n}\n\nfunction addNewOperationAction({ state }) {\n  let _addNewOperation = true;\n  let _inputText = state.get(\"User.currentSelection.operation.inputText\");\n  let _operations = state.get(\"operations.records\");\n\n  if (_inputText.length !== 0) {\n    Object.keys(_operations || {}).forEach(function(key) {\n      _inputText === _operations[key].label\n        ? (_addNewOperation = false)\n        : (_addNewOperation = true);\n    });\n  } else {\n    _addNewOperation = false;\n  }\n\n  if (_addNewOperation) {\n    let strUUID = uuid();\n    const operationRecord = {\n      id: strUUID,\n      label: _inputText,\n      fields: {}\n    };\n    state.set(`${\"operations.records.\" + strUUID}`, operationRecord);\n    state.set(`${\"operations.records.\" + strUUID + \".id\"}`, strUUID);\n    return {\n      item: operationRecord,\n      data: operationRecord\n    };\n  } //if\n} // addNewOperation\n\nfunction setDisabledNewOperationAction({ props, state }) {\n  return state.get(\"User.currentSelection.operation.disabled\");\n}\n\nfunction cancelNewOperationAction({ state }) {\n  const ops_id = state.get(\"User.currentSelection.operation.id\");\n  return { item: state.get(`${\"operations.records.\" + ops_id}`) };\n}\n\nfunction resetCurrentSelectionStatus({ props, state }) {\n  if (!state.get(\"fields.editing\")) {\n    let currentOperationFieldStatus = getCurrentOperationFieldStatus({\n      props,\n      state\n    });\n    if (currentOperationFieldStatus) {\n      state.set(\n        \"User.currentSelection.status.status\",\n        currentOperationFieldStatus\n      )\n    }\n    state.set(\"User.currentSelection.status.timestamp\", timestamp());\n    state.set(\"User.currentSelection.status.marker\", state.get(\"User.label\"));\n  }\n}\n","import { Module } from 'cerebral'\n\nimport * as signals from './chains'\n\nexport default Module({\n\nstate : {\n    id: 'servio',\n    label: 'Servio',\n\n    operations: {},\n\n    fields: {},\n\n    currentSelection: {\n      operation: {\n        id: null,\n        placeholder: 'Operation',\n        suggestionsOpen: false,\n        inputText: '',\n      disabled: false,\n        editing: false,\n      },\n      farm: {\n        id: '',\n        name: '',\n      },\n      field: {\n        id: null,\n        placeholder: 'Field',\n        suggestionsOpen: false,\n        name: '',\n        disabled: false,\n        editing: false,\n        tempObject: null,\n        newFieldDisabled: true\n      },\n      status: {\n        status: null,\n        marker: null,\n        timestamp: null,\n      }\n    },\n\n    accessibleUsers: {\n      'servio': {\n        id: 'servio',\n        label: 'Servio',\n      },\n      'pguruji': {\n        id: 'pguruji',\n        label: 'Parag',\n      },\n      'aultac': {\n        id: 'aultac',\n        label: 'Aaron',\n      },\n      'sanoel': {\n        id: 'sanoel',\n        label: 'Sam',\n      }\n\n    }\n  },\n\n  signals,\n});\n","let stateTree = {\n\t\tcenter: [40.98551896940516, -86.18823766708374],\n\t\tmoving: false,\n\t\tzoom: 15,\n\t\tisLoading: false,\n\t};\n\n  export default stateTree;","import stateTree from './stateTree.js';\nimport { Module } from 'cerebral';\n\nimport {\n  doneMovingMap,\n  handleLocationFound,\n  handleMapClick,\n  handleMapMoved,\n  startMovingMap,\n  startMarkerDrag,\n  endMarkerDrag,\n  markerDragging,\n  deleteCoordinate,\n} from './chains';\n\nexport default Module({\n\tstate: stateTree,\n\n\tsignals: {\n        locationFound: handleLocationFound,\n        mapMoved: [\n            ...handleMapMoved, ...doneMovingMap,\n        ],\n        mapMoveStarted: startMovingMap,\n        mouseDownOnMap: handleMapClick,\n        markerDragStarted: startMarkerDrag,\n        markerDragEnded: endMarkerDrag,\n        markerDragged: markerDragging,\n        deleteCoordinate: deleteCoordinate,\n    }\n})\n","import { Module } from 'cerebral';\nimport {\n\thandleDrawerOpen,\n\topenBottomDrawerForStatusUpdate,\n\thandleOperatorMenuOpen,\n\thandleOperatorMenuClose,\n} from './chains';\n\n\nexport default Module({\n\tstate: {\n\t\topen: false,\n\t\tmenu: 'operations',\n\t\toperatorMenuOpen: false,\n  \t},\n\n  \tsignals: {\n  \t\thandleDrawerOpen: handleDrawerOpen,\n  \t\topenBottomDrawerForStatusUpdate: openBottomDrawerForStatusUpdate,\n  \t\thandleOperatorMenuOpen: handleOperatorMenuOpen,\n  \t\thandleOperatorMenuClose: handleOperatorMenuClose,\n  \t}\n});\n","import { state } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport {\n  //handleFieldCleared,\n  validateNewFieldButton\n} from \"../fields/sequences\";\nimport { setFieldOnMapCenter } from \"../MapPanel/chains\";\nimport { handleDrawerOpen as handleBottomDrawerOpen } from \"../BottomDrawer/chains\";\n\nexport var addOperationClicked = [\n  setDisabledNewOperation,\n  set(state`BottomDrawer.menu`, \"operations\"),\n  set(state`BottomDrawer.open`, true)\n];\n\nexport var operationInputTyped = [\n  setDisabledNewOperation,\n  operationInputTypedAction\n];\n\nexport var fieldInputTyped = [\n  fieldInputTypedAction\n  //...handleFieldCleared\n];\n\nexport var handleFieldEdited = [\n  handleFieldEditedAction,\n  ...handleBottomDrawerOpen,\n  ...setFieldOnMapCenter\n];\n\nexport var handleOperationEdited = [handleOperationEditedAction];\n\nexport var openSuggestions = [openSuggestionsAction];\n\nexport var closeSuggestions = [closeSuggestionsAction];\n\nfunction openSuggestionsAction({ props, state }) {\n  if (props.id === \"ops-input\") {\n    state.set(\"User.currentSelection.operation.suggestionsOpen\", true);\n  } else {\n    state.set(\"fields.new_field.field.suggestionsOpen\", true);\n  }\n}\n\nfunction closeSuggestionsAction({ props, state }) {\n  if (props.id === \"ops-input\") {\n    let currentOperationID = state.get(\"User.currentSelection.operation.id\");\n    if (currentOperationID) {\n      // state.set(\n      //   \"User.currentSelection.operation.inputText\",\n      //   state.get(`${\"operations.records.\" + currentOperationID + \".label\"}`)\n      // );\n    }\n    state.set(\"User.currentSelection.operation.suggestionsOpen\", false);\n  } else {\n    state.set(\"fields.new_field.field.suggestionsOpen\", false);\n  }\n}\n\n/**\n * Sets the value of the property disabled according to\n * the value of the operation inputText\n * if already exists then disabled will be true (button cannot be clicked)\n * TODO: change this to a hashtable O(1) instead of O(n)\n * @param props\n * @param state\n */\nfunction setDisabledNewOperation({ props, state }) {\n  /* Disable add button if current operation exists in the state tree */\n  /* fix this with a hash table O(1), the following procedure is inefficient */\n  let _inputText = props.inputText;\n  let _operations = state.get(\"operations.records\");\n  let openBottonDrawer = state.get(\"BottomDrawer.open\");\n  // if the bottomDrawer is still not open then use the following value\n  // state.get('User.currentSelection.operation.inputText');\n  if (!openBottonDrawer) {\n    _inputText = state.get(\"User.currentSelection.operation.inputText\");\n  }\n  let _found = false;\n  Object.keys(_operations || {}).forEach(function(key) {\n    //console.log(key, _operations[key]);\n    if (_inputText === _operations[key].label || _inputText.length === 0) {\n      state.set(\"User.currentSelection.operation.disabled\", true);\n      _found = true;\n    } else {\n      if (!_found) {\n        state.set(\"User.currentSelection.operation.disabled\", false);\n      }\n    }\n  });\n}\n\n/**\n * TODO\n * Modify this code to avoid repeated field's names\n * Sets the value of the property disabled according to\n * the value of the operation inputText\n * if already exists then disabled will be true (button cannot be clicked)\n * @param props\n * @param state\n */\n// function setDisabledNewField({props, state}){\n//     /* maverick */\n//     /* Disable add button if current operation exists in the state tree */\n//     /* fix this with a hash table O(1), the following procedure is inefficient */\n//     let _inputText = props.inputText;\n//     let _operations = state.get('operations.records');\n//     let openBottonDrawer = state.get('BottomDrawer.open');\n//     // if the bottomDrawer is still not open then use the following value\n//     // state.get('User.currentSelection.operation.inputText');\n//     if(!openBottonDrawer){\n//         var id = state.get(`fields.selectedId`);\n//         _inputText = state.get(`fields.records.${id}.name`);\n//     }\n//     let _found = false;\n//     //console.log('input text ', _inputText);\n//     Object.keys(_operations).forEach(function(key) {\n//         //console.log(key, _operations[key]);\n//         if(_inputText === _operations[key].label){\n//             //console.log(\"found key \", key, _operations[key]);\n//             state.set('fields.new_field.field.disabled', true);\n//             _found = true;\n//         }\n//         else{\n//             if(!_found){\n//                 state.set('fields.new_field.field.disabled', false);\n//             }\n//         }\n//     });\n// }\n\nfunction operationInputTypedAction({ props, state }) {\n  state.set(\"User.currentSelection.operation.inputText\", props.inputText);\n  state.set(\"User.currentSelection.operation.suggestionsOpen\", true);\n}\n\nfunction fieldInputTypedAction({ props, state }) {\n  let id = state.get(`fields.selectedId`);\n  state.set(`fields.records.${id}.name`, props.inputText);\n  state.set(\"fields.new_field.field.suggestionsOpen\", true);\n}\n\nfunction handleFieldEditedAction({ props, state }) {\n  let id = state.get(`fields.selectedId`);\n  let boundary = JSON.parse(\n    JSON.stringify(state.get(`fields.records.${id}.boundary`))\n  );\n  let record = JSON.parse(\n    JSON.stringify(state.get(`fields.records.${id}`))\n  );\n  console.log(\"--> copying this boundary into buffer\", boundary);\n  if (boundary && boundary.geojson.coordinates[0].length >= 3) {\n    state.set(\"User.currentSelection.field.coordinatesOk\", true);\n  } else {\n    state.set(\"User.currentSelection.field.coordinatesOk\", false);\n  }\n  state.set(\"fields.new_field\", record);\n\n  validateNewFieldButton({ props, state });\n\n  state.set(\"fields.temp_buffer.boundary\", boundary);\n  state.set(\"fields.editing\", true);\n  state.set(\"fields.isNewField\", false);\n}\n\nfunction handleOperationEditedAction({ props, state }) {\n  state.set(\"User.currentSelection.operation.editing\", true);\n}\n","import { Module } from 'cerebral';\nimport * as signals from './chains';\n\n\nexport default Module({\n\tstate: {},\n\n\tsignals,\n});\n","// FIXME: make this flexible\n// Add, delete, edit these states\nlet stateTree = {\n    planned: {\n        area: 0,\n      collapse: true,\n      fields: []\n    },\n    started: {\n        area: 0,\n      collapse: true,\n      fields: []\n    },\n    completed: {\n        area: 0,\n      collapse: true,\n      fields: []\n    }\n};\n\nexport default stateTree;","import { Module } from 'cerebral';\nimport stateTree from './stateTree';\n\nimport {\n\tloadData,\n\thandleCollapse,\n} from './chains'\n\nexport default Module({\n\n  state : stateTree,\n\n  signals: {\n  \thandleCollapse: handleCollapse,\n  \tloadData: loadData\n  }\n});\n","import { Module } from 'cerebral';\n\nimport * as signals from './chains'\n\nexport default Module({\n\n  state : {},\n\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './chains';\n\nexport default Module({\n\tstate: {},\n\n\tsignals,\n});\n","import { Module } from 'cerebral';\n\nimport {\n    setConnection,\n    cancelConnection,\n    updateOadaDomain,\n    updateOadaFieldsDomain\n} from './chains';\n\nlet _OADA_HOST = \"https://oada.openatk.com\";\n\nlet _CURRENT_HOST = _OADA_HOST;\n\nexport default Module({\n\n\tstate : {\n\t\topen : false ,\n\t\toada_domain_text: _CURRENT_HOST,\n        oada_fields_domain_text: _CURRENT_HOST,\n\t\toada_domain: _CURRENT_HOST,\n        oada_fields_domain: _CURRENT_HOST,\n\t\tshow : false\n\t}, \n\n\tsignals: {\n\t\tsubmitClicked: setConnection,\n\t\tcancelClicked: cancelConnection,\n\t\toadaDomainChanged: updateOadaDomain,\n        oadaFieldsDomainChanged: updateOadaFieldsDomain\n  }\n});\n","import { Module } from 'cerebral';\nimport {\n    selectOperation,\n    handleWatchUpdate,\n    handleFieldUpdate\n} from './sequences';\n\nexport default Module({\n\n    state : {\n        records: {},\n        loading: true,\n        connection_id: \"none\",\n        fieldsChanged: false\n    },\n\n    signals: {\n        operationClicked: selectOperation,\n        handleWatchUpdate: handleWatchUpdate,\n        handleFieldUpdate: handleFieldUpdate\n    }\n})","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n    state : {\n        records: {},\n        farms: {},\n        loading: true,\n        connection_id: 0,\n        new_field: {},\n        editing: false,\n    },\n    signals,\n})\n","let stateTree = {\n    planned: {\n        open: false\n    },\n    started: {\n       open: false\n    },\n    completed: {\n       open: false\n    }\n};\n\nexport default stateTree;","import { Module } from 'cerebral';\nimport stateTree from './stateTree';\n\nimport * as signals from './chains';\n\nexport default Module({\n\n    state : stateTree,\n\n    signals: signals\n});","export const resized = [\n  ({ state, props }) => {\n    //console.log(\"--> window module state, props-->\", state, props);\n    const orientation = props.width > props.height ? \"landscape\" : \"portrait\";\n    if (state.get(\"window.orientation\") !== orientation) {\n      state.set(\"window.orientation\", orientation);\n    }\n\n    const isSmall =\n      orientation === \"portrait\" ? props.width < 767 : props.height < 500;\n    if (state.get(\"window.isSmall\") !== isSmall)\n      state.set(\"window.isSmall\", isSmall);\n  }\n];\n\nexport const init = [\n  ({ windowSize }) => windowSize.init(\"window.resized\"), // registers event listener for window resize events\n  resized // load dimensions the first time\n];","import { Module } from 'cerebral'\n\nimport * as signals from './sequences';\n\nexport default Module({\n  state : {\n    isSmall: true, // changes to true for mobile, false for computer\n    orientation: 'portrait' // portrait | landscape\n  },\n  signals,\n});","import { set, when } from 'cerebral/operators';\nimport { state, props } from 'cerebral/tags';\nimport Promise from 'bluebird';\nimport uuid from 'uuid';\nimport { loadData as loadFldData } from '../FldList/chains';\nimport { loadData as loadOpsData } from '../OpsList/chains';\nimport { setFieldOnMapCenter } from '../MapPanel/chains';\nimport * as operations from '../operations/sequences';\nimport oada from '@oada/cerebral-module/sequences';\nimport {sequence} from \"cerebral/index\";\n/* internal local variables */\n\nlet tree = {\n    'bookmarks': {\n        '_type': 'application/vnd.oada.bookmarks.1+json',\n        '_rev': '0-0',\n        'operators': {\n            '_type': 'application/vnd.oada.yield.1+json',\n            '_rev': '0-0',\n            '*': {\n                '_type': 'application/vnd.oada.yield.1+json',\n                '_rev': '0-0',\n            }\n        }\n    }\n};\n\n\nexport var addOperatorClicked = [\n\taddNewOperator,\n\tset(state`operators.editing`, true),\n];\n\n/**\n * Maps operators records\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToOperators({props, state}) {\n  let connection_id = state.get('operators.connection_id');\n  let operators = state.get('operators.records');\n\n  return Promise.map(Object.keys(operators || {}), (operator) => {\n    return state.unset(`operators.records.${operator}`)\n  }).then(() => {\n    let operators = state.get(`oada.${connection_id}.bookmarks.operators`);\n    if (operators) {\n      return Promise.map(Object.keys(operators || {}), (operator) => {\n        if (operators[operator] &&  operators[operator].firstName) {\n          let id = operators[operator].id;\n          let lastName = operators[operator].lastName;\n          let firstName = operators[operator].firstName;\n          let label = operators[operator].label;\n          let record = {\n            id: id,\n            firstName: firstName,\n            lastName: lastName,\n            label: label\n          };\n          return state.set(`operators.records.${id}`, record);\n        } else {\n          return;\n        }\n      });\n    } else return\n  }).then(() => {\n    return\n  })\n}//mapOadaToOperators\n\n\n/**\n * creates new operator payload\n * @param props\n * @param state\n * @returns {{id: *, field: {created: number, id: *, text: string, tags: Array, operators: {},\n * boundary: {visible: boolean}, data, stats: {}}, uuid: *}}\n */\nfunction createOperator({props, state}) {\n  let operator = {\n    _id: 'resources/' + props.item.id,\n    firstName: props.item.firstName,\n    lastName: props.item.lastName,\n    label: props.item.label\n  };\n  return {id: props.item.id, operator}\n}\n\nfunction createOperatorRequest({props, state}){\n  return {\n    connection_id: state.get('operations.connection_id'),\n    data: props.operator,\n    path: `/bookmarks/operators/${props.id}`,\n    tree\n  }\n}\n\nexport var disableNewOperatorButton = [\n    set(state`User.currentSelection.operator.newOperatorDisabled`, true)\n];\n\nexport const putOperator = [\n  createOperator,\n  createOperatorRequest,\n  oada.put,\n  disableNewOperatorButton\n];\n\nexport var handleoperatorselected = [\n\tsetCurrentOperator,\n\tresetCurrentSelectionStatus,\n\t...setFieldOnMapCenter,\n];\n\nexport var saveEditedOperator = [\n    set(props`item`, state`operators.records.${state`operators.selectedId`}`),\n    set(state`operators.editing`, false),\n    when(state`User.currentSelection.field.newFieldDisabled`), {\n        true : [],\n        false: [putOperator,\n                operations.handleFieldUpdate,\n                ...loadOpsData]\n    }\n];\n\nexport function setCurrentOperator({ props, state }){\n  state.set('operators.selectedId', props.field.id);\n  if (!(state.get('operators.editing'))) {\n    state.set(`operators.new_operator.operator.suggestionsOpen`, false);\n    state.set('operators.editing', false);\n  }\n}\n\n/**\n * sets the current operator\n * @param props\n * @param state\n */\nfunction clearCurrentOperator({props, state}) {\n  let id = state.get('operators.selectedId');\n\tif (!(state.get('operators.editing'))) {\n\t\tstate.unset(`operators.records.${id}`);\n\t\tstate.set(`operators.editing`, false);\n\t\t//state.set('User.currentSelection.status', {status: null, marker: null, timestamp: null})\n\t}\n}\n\n/**\n * Creates the template for the operator record with a random UUID\n * @returns {{id: *, firstName: *, lastName: *}}}\n */\nfunction createOperatorRecord(_firstName, _lastName){\n    return {\n      id: uuid(),\n      firstName: _firstName,\n      lastName: _lastName,\n      label: \"\"\n    };\n}//createOperatorRecord\n\n/**\n *\n * @param props\n * @param state\n * @returns {{item: any}}\n */\nexport function addNewOperator({props, state}){\n  let _firstName = state.get('operators.new_operator.firstName');\n  let _lastName = state.get('operators.new_operator.lastName');\n  let operator = createOperatorRecord(_firstName, _lastName);\n  state.set(`operators.new_operator`, operator);\n\n  return {operator};\n}\n\n/**\n * gets the current field status in the current operation\n * @param props\n * @param state\n * @returns {string}\n */\nfunction getCurrentOperationOperatorStatus({props, state}){\n  let status = state.get(`${'operations.records.' + state.get('User.currentSelection.operation.id') \n                          + '.operators.' + state.get('operators.selectedId') + '.status'}`);\n  return status ? status: \"unplanned\";\n}//getCurrentOperationoperatorstatus\n\n/**\n * resets the current field status in the current operation\n * @param props\n * @param state\n */\nfunction resetCurrentSelectionStatus({props, state}) {\n\t// if (!(state.get('operators.editing'))) {\n   //  let currentOperationFieldStatus = getCurrentOperationOperatorStatus({props, state});\n   //  if(currentOperationFieldStatus){\n   //    state.set('User.currentSelection.status.status', currentOperationFieldStatus);\n   //  }\n   //  state.set('User.currentSelection.status.timestamp', timestamp());\n   //  state.set('User.currentSelection.status.marker', state.get('User.label'));\n\t// }//if\n}\n\n/**\n * it verifies that firstName and lastName have some value in the textbox\n * (it does not allow empty values)\n * @param props\n * @param state\n */\nfunction validateNewOperatorButton({props, state}){\n  let id = state.get('operators.selectedId');\n  let firstName = state.get(`operators.records.${id}.firstName`);\n  let lastName = state.get(`operators.records.${id}.lastName`);\n  if(firstName.length > 0 && lastName.length > 0){\n    state.set('User.currentSelection.operator.newOperatorDisabled', false);\n  }\n  else {\n    state.set('User.currentSelection.operator.newOperatorDisabled', true);\n  }\n}\n\n/**\n * Farm's input text changed\n * @param props\n * @param state\n */\nexport function lastNameTextChanged({props, state}) {\n  state.set(`operators.new_operator.lastName`, props.value);\n  state.set('operators.new_operator.lastName.suggestionsOpen', true);\n  validateNewOperatorButton({props, state});\n}\n\n/**\n * Field's input text changed\n * @param props\n * @param state\n */\nexport function firstNameTextChanged({props, state}) {\n    state.set(`operators.new_operator.firstName`, props.value);\n    state.set('operators.new_operator.field.suggestionsOpen', true);\n    validateNewOperatorButton({props, state});\n}\n\n/**\n * Handles updates in the resource\n * @type {*[]}\n */\nexport const handleWatchUpdate =  sequence('operators.handleWatchUpdate', [\n    () => { console.log('--> operators.handlingWatchUpdate') },\n    mapOadaToOperators\n]);\n\nexport function cancelNewOperator({props, state}) {\n    console.log(\"--> Canceling new operator\");\n    state.set('operators.editing', false);\n    state.unset('operators.new_operator');\n    state.unset('operators.selectedId');\n}\n","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n\n  state : {\n    records: {},\n    loading: true,\n    connection_id: 0,\n    new_operator: {},\n    editing: false,\n  },\n\n  signals,\n})","import { Module } from 'cerebral';\n\n/* oada imports */\nimport oadaModule from '@oada/cerebral-module';\nimport oadaProvider from '@oada/cerebral-provider';\nimport oadaFields from '@oada/fields-module';\n\nimport App from './App';\nimport MenuBar from './MenuBar';\nimport SideDrawer from './SideDrawer';\nimport DataTabs from './DataTabs';\nimport User from './User';\nimport MapPanel from './MapPanel';\nimport BottomDrawer from './BottomDrawer';\nimport AutocompleteSearch from './AutocompleteSearch';\nimport OpsList from './OpsList';\nimport FldList from './FldList';\nimport EditFieldDrawer from './EditFieldDrawer';\nimport Connections from './Connections';\nimport operations from './operations';\nimport fields from './fields';\nimport StatsBar from './StatsBar';\nimport window from './window';\nimport operators from './operators';\n//import StatsBar from './StatsBar';\n//import MenuList from './MenuList';\n\nexport default Module({\n\tmodules: {\n\t\tApp,\n\t\twindow,\n    Connections,\n    oada: oadaModule,\n\t\tSideDrawer,\n\t\tMenuBar,\n    StatsBar,\n\t\tDataTabs,\n\t\tUser,\n\t\tMapPanel,\n\t\tBottomDrawer,\n\t\tAutocompleteSearch,\n\t\tOpsList,\n\t\tFldList,\n    fields: oadaFields,\n\t\toperations,\n\t\tfields,\n\t\tEditFieldDrawer,\n    operators\n\t},\n\n  providers: {\n    oada: oadaProvider\n  },\n});\n","import { Controller } from 'cerebral';\nimport root_module from './modules';\nimport { devtoolsPort } from './config';\n\nconst Devtools = (process.env.NODE_ENV === 'production' ?\n\t\t\t\t\tnull :\n\t\t\t\t\trequire('cerebral/devtools').default);\nvar devPort = devtoolsPort;\nif (process.env.NODE_ENV !== 'production') {\n\tdevPort = (devtoolsPort + parseInt(window.location.port, 10) - 3000);\n\tconsole.log('Cerebral Devtools running on Port:', devPort);\n}\n\n/*\nconst controller = Controller({\n\tmodules: {\n\t\tApp,\n\t\tMap,\n\t},\n\tdevtools: Devtools && Devtools({host: 'localhost:8787'})\n})\n*/\n\nexport default Controller(root_module, {\n\tdevtools: Devtools && Devtools({host: 'localhost:8787'})\n})","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Container } from \"@cerebral/react\";\nimport App from \"./components/App/\";\nimport controller from \"./controller\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport \"./index.css\";\n//import injectTapEventPlugin from 'react-tap-event-plugin';\nimport { createMuiTheme } from \"material-ui/styles\";\n\nconst muiTheme = createMuiTheme();\n\n//injectTapEventPlugin();\n\nrender(\n  <Container controller={controller} style={{ height: \"100vh\" }}>\n    <MuiThemeProvider theme={muiTheme}>\n      <App />\n    </MuiThemeProvider>\n  </Container>,\n  document.getElementById(\"root\")\n);\n\nif (module.hot) {\n  module.hot.accept(\"./components/App/\", () => {\n    const NextApp = require(\"./components/App/\").default;\n    render(\n      <Container controller={controller} style={{ height: \"100vh\" }}>\n        <MuiThemeProvider theme={muiTheme}>\n          <NextApp />\n        </MuiThemeProvider>\n      </Container>,\n      document.getElementById(\"root\")\n    );\n  });\n}\n"],"sourceRoot":""}