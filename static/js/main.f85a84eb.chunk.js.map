{"version":3,"sources":["serviceWorker.js","config/index.js","overmind/view/FieldDetails/state.js","overmind/app/OADAManager/tree.js","overmind/view/FieldDetails/index.js","overmind/view/FieldDetails/actions.js","overmind/view/FieldList/index.js","overmind/view/FieldList/state.js","overmind/view/FieldList/actions.js","overmind/view/Map/state.js","overmind/view/Map/actions.js","overmind/view/Map/BoundaryDrawing/index.js","overmind/view/Map/BoundaryDrawing/state.js","overmind/view/Map/BoundaryDrawing/actions.js","overmind/view/Map/index.js","overmind/view/Modals/state.js","overmind/view/Modals/actions.js","overmind/view/Modals/SaveField/actions.js","overmind/view/Modals/SaveField/index.js","overmind/view/Modals/SaveField/state.js","overmind/view/Modals/NewOperation/actions.js","overmind/view/Modals/NewOperation/index.js","overmind/view/Modals/NewOperation/state.js","overmind/view/Modals/NewFarm/actions.js","overmind/view/Modals/NewFarm/index.js","overmind/view/Modals/NewFarm/state.js","overmind/view/Modals/index.js","overmind/view/TopBar/actions.js","overmind/view/TopBar/OperationDropdown/index.js","overmind/view/TopBar/OperationDropdown/state.js","overmind/view/TopBar/OperationDropdown/actions.js","overmind/view/TopBar/index.js","overmind/view/TopBar/state.js","overmind/view/index.js","overmind/view/state.js","overmind/view/actions.js","overmind/app/test/testFields.js","overmind/app/test/testFarms.js","overmind/app/state.js","overmind/app/actions.js","overmind/app/OADAManager/actions.js","overmind/app/OADAManager/index.js","overmind/app/OADAManager/state.js","overmind/app/index.js","overmind/index.js","view/Map/BoundaryDrawing/index.js","view/Map/Fields/index.js","view/Map/index.js","view/TopBar/DrawingToolbar/index.js","view/TopBar/NormalToolbar/OperationDropdown/index.js","view/TopBar/NormalToolbar/MoreDropdown/index.js","view/TopBar/NormalToolbar/index.js","view/TopBar/index.js","view/FieldList/index.js","view/FieldDetails/index.js","view/AcresStatus/AcresPlanned/index.js","view/AcresStatus/AcresStarted/index.js","view/AcresStatus/AcresDone/index.js","view/AcresStatus/index.js","view/Modals/SaveField.js","view/Modals/OADADomain.js","view/Modals/NewOperation.js","view/Modals/NewFarm.js","view/App.js","index.js","view/logo.svg"],"names":["Boolean","window","location","hostname","match","METADATA","REDIRECT","open","fieldId","state","_","get","field","selectedFieldId","operation","fields","status","currentConnection","acres","geojsonArea","geometry","boundary","merge","farm","farmId","id","bookmarks","_type","_rev","farms","seasons","operations","_state","actions","view","FieldDetails","close","changeOADAFieldStatus","operationId","clone","newStatus","requests","type","path","app","oada","delete","connection_id","tree","data","_id","put","changeLocalFieldStatus","unset","set","onStatusChange","myActions","OADAManager","connected","selectedField","fieldStyles","editingField","fieldsToRender","mapValues","startsWith","styledField","style","color","fillColor","styleField","highlight","myState","weight","unhighlight","unselectField","Promise","delay","onFieldClick","onMapClick","props","BoundaryDrawing","drawing","addPointToBoundary","Map","uuid","lat","lng","updateBoundaryPoint","pipe","debounce","mutate","latlng","onMarkerMove","onStartDrawing","onStopDrawing","_actions","OPTIONS","redirect","metadata","scope","SCOPE","oadaDomain","OADADomain","domain","config","Modals","onConnectClick","onDomainChange","onConnect","loading","onDomainChanged","onCancel","convertToGEOJSON","points","map","p","getChanges","newBoundary","farm_id","seasonFarm_id","SaveField","seasonField","getSeasonField","newName","name","seasonFieldChanges","fieldChanges","isEqual","cloneDeep","saveChangesToLocalData","editingFieldId","isEmpty","fieldPath","seasonFieldPath","saveChangesToOADA","context","a","push","console","log","createField","addFieldToLocalData","year","addFieldToOADA","farmSearch","search","compact","seasonFarms","f","toLowerCase","key","text","value","saveField","onSave","onNameChange","onFarmSearchChange","onFarmChange","onFarmAdd","NewFarm","callbackAction","onFarmAddComplete","addOperationToLocalData","addOperationToOADA","ret","substr","NewOperation","saveOperation","addFarmToLocalData","addFarmToOADA","saveFarm","action","onAddField","onSaveField","onCancelField","onEditField","currentField","forEach","coors","onResetCache","resetCache","selected","list","omitBy","label","empty","circular","o","k","selectedOperationId","selectedId","keys","length","selectedOperation","onAdd","TopBar","OperationDropdown","onChange","onOpenChange","onSearch","FieldList","acresStatus","operationFields","seasonFields","planned","started","done","fieldOperation","area","total","Math","round","plannedPercentage","startedPercentage","donePercentage","chain","v","currentOADA","oadaOrgData","oadaSeasonFarmsIdBy_id","mapKeys","localOrgData","localData","abc123","organizations","testFields","testFarms","getSeasonFarm","getAccessToken","promisify","oadaIdClient","getToken","replace","res","access_token","connect","effects","token","options","then","response","error","connectionId","fetchAndWatch","watchRequests","watch","onFieldChanged","onSeasonsChanged","rewatchRequests","responses","initSeasonFields","fieldsChanged","obj","changeSeasonFields","initSeasonFarms","changed","changeSeasonFarms","theSeasonFields","fieldChange","change","seasonFarm","changeType","warn","onFarmsChanged","oadaCacheOvermind","namespaced","createHook","overmind","LayerGroup","Polygon","positions","Marker","position","draggable","onMove","oldLatLng","Fields","GeoJSON","bubblingMouseEvents","onClick","evt","center","zoom","zoomControl","TileLayer","url","attribution","DrawingToolbar","Toolbar","View","flex","Button","OperationsDropdown","flexDirection","Dropdown","onOpen","onBlur","icon","floating","labeled","button","className","Menu","top","Item","textAlign","Input","iconPosition","marginTop","target","scrolling","option","MoreDropdown","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","aria-label","event","currentTarget","right","keepMounted","onClose","MenuItem","NormalToolbar","toggleTitle","zIndex","AppBar","TemporaryDrawer","Drawer","variant","height","width","role","List","index","ListItem","ListItemIcon","ListItemText","primary","Divider","onEditFieldClick","anchor","paddingBottom","alignItems","justifyContent","Text","fontWeight","fontSize","marginLeft","marginBottom","FormControl","component","FormGroup","row","FormControlLabel","control","Checkbox","checked","labelPlacement","AcresPlanned","backgroundColor","paddingLeft","paddingRight","paddingTop","borderRadius","textShadowColor","textShadowOffset","textShadowRadius","AcresStarted","marginRight","AcresDone","AcresStatus","display","farmOpen","setFarmOpen","farmOptions","Modal","size","Header","Content","placeholder","trigger","border","Icon","overflow","maxHeight","Actions","negative","positive","labelPosition","content","App","createOvermind","devtools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f85a84eb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SCOPE = 'oada.yield:all';\nconst OPENATK_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY';\nconst LOCALHOST_VIP_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\nconst REDIRECT_LOCALHOST = 'http://localhost:8000/oauth2/redirect.html';\nconst REDIRECT_OPENATK = 'http://openatk.com/FieldWorkApp/oauth2/redirect.html';\n\nlet METADATA;\nlet REDIRECT;\nlet oadaDomain = '';\nif (process.env.NODE_ENV !== 'production') {\n  console.log('NODE_ENV = ', process.env.NODE_ENV);\n  METADATA = LOCALHOST_VIP_METADATA;\n  REDIRECT = REDIRECT_LOCALHOST;\n  oadaDomain = 'https://localhost';\n} else {\n  METADATA = OPENATK_METADATA;\n  REDIRECT = REDIRECT_OPENATK;\n}\n\nlet OPTIONS = {\n    redirect: REDIRECT,\n    metadata: METADATA,\n    scope: SCOPE\n};\n\nexport default {\n  OPTIONS,\n  REDIRECT,\n  METADATA,\n  SCOPE,\n  oadaDomain\n}\n","import _ from 'lodash';\nimport geojsonArea from '@mapbox/geojson-area';\n\nexport default {\n  open: false,\n  fieldId: ({}, state) => {\n    return _.get(state, `view.Map.selectedField`);\n  },\n  field: ({fieldId: selectedFieldId}, state) => {\n    const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`);\n    if (operation == null || operation.fields == null || selectedFieldId == null) return null;\n    const status = _.get(operation.fields[selectedFieldId], 'status');\n    let field = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      field = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.fields.${selectedFieldId}`); //TODO year\n    } else {\n      field = _.get(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}`); //TODO year, organization\n    }\n    if (field == null) return null;\n    const acres = geojsonArea.geometry(field.boundary) * 0.000247105 //Meters to acres;\n    return _.merge({}, field, {status, acres});\n  },\n  farm: ({field}, state) => {\n    //Get farm for selected field\n    let farm = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      if (_.get(field, 'farm._id')) {\n        const farmId = _.get(state, `app.oadaSeasonFarmsIdBy_id.${_.get(field, 'farm._id')}.id`)\n        farm = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.farms.${farmId}`); //TODO year\n      }\n    } else {\n      if (_.get(field, 'farm.id')) {\n        farm = _.get(state, `app.localData.abc123.seasons.2019.farms.${field.farm.id}`); //TODO year, organization\n      }\n    }\n    return farm;\n  }\n}\n","export default {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    fields: {\n      _type: \"application/vnd.oada.fields.1+json\",\n      _rev: 0,\n      fields: {\n        \"*\": {\n          _type: \"application/vnd.oada.field.1+json\",\n          _rev: 0,\n          farm: {\n            _type: \"application/vnd.oada.farm.1+json\",\n          }\n        }\n      },\n      farms: {\n        \"*\": {\n          _type: \"application/vnd.oada.farm.1+json\",\n          _rev: 0\n        }\n      }\n    },\n    seasons: {\n      _type: \"application/vnd.oada.seasons.1+json\",\n      _rev: 0,\n      \"*\": {\n        _type: \"application/vnd.oada.season.1+json\",\n        _rev: 0,\n        fields: {\n          _type: \"application/vnd.oada.fields.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.field.1+json\",\n            _rev: 0,\n            operations: {\n              _type: \"application/vnd.oada.operations.1+json\",\n              _rev: 0,\n              \"*\": {\n                _type: \"application/vnd.oada.operation.1+json\",\n                _rev: 0\n              }\n            }\n          }\n        },\n        farms: {\n          _type: \"application/vnd.oada.farms.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.farm.1+json\",\n            _rev: 0\n          }\n        },\n        operations: {\n          _type: \"application/vnd.oada.operations.1+json\",\n          _rev: 0,\n          \"*\": {\n            _type: \"application/vnd.oada.operation.1+json\",\n            _rev: 0\n          }\n        }\n      }\n    }\n  }\n};\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\nimport uuid from 'uuid/v1';\nimport tree from '../../app/OADAManager/tree.js';\n\nexport default {\n  open({state}) {\n    const myState = state.view.FieldDetails;\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.FieldDetails;\n    myState.open = false;\n  },\n  changeOADAFieldStatus({state, actions}, status) {\n    const selectedFieldId = _.get(state, `view.Map.selectedField`);\n    const operationId = _.get(state, `view.TopBar.OperationDropdown.selectedOperationId`)\n\n    let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n    let field = _.clone(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`)) || {}; //TODO year, organization\n    let newStatus = status;\n    if (field.status == status) newStatus = null; //Unchecking\n    field.status = newStatus;\n    if (field.status == null) {\n      let requests = [\n        {  //Remove field to operation\n          type: 'application/vnd.oada.operation.1+json', //TODO oada.put should handle this\n          path: `/bookmarks/seasons/2019/operations/${operationId}/fields/${selectedFieldId}` //TODO year\n        },\n        { //Remove operation to field in season's field's operation list\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${selectedFieldId}/operations/${operationId}` //TODO year\n        }\n      ];\n      return actions.app.oada.delete({requests, connection_id: currentConnection});\n    } else {\n      const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`)\n      let requests = [\n        {  //Add field to operation\n          tree,\n          data: field,\n          type: 'application/vnd.oada.operation.1+json', //TODO oada.put should handle this\n          path: `/bookmarks/seasons/2019/operations/${operationId}/fields/${selectedFieldId}` //TODO year\n        },\n        { //Add operation to field in season's field's operation list\n          tree,\n          data: {_id: operation._id}, //OADA _id\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${selectedFieldId}/operations/${operationId}` //TODO year\n        }\n      ];\n      return actions.app.oada.put({requests, connection_id: currentConnection});\n    }\n  },\n  changeLocalFieldStatus({state}, status) {\n    const myState = state.view.FieldDetails;\n    const selectedFieldId = _.get(state, `view.Map.selectedField`);\n    const operationId = _.get(state, `view.TopBar.OperationDropdown.selectedOperationId`)\n    var field = _.clone(_.get(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`)) || {}; //TODO year, organization\n    var newStatus = status;\n    if (field.status == status) newStatus = null; //Unchecking\n    field.status = newStatus;\n    if (field.status == null) {\n      //Remove field from operation\n      _.unset(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`) //TODO year, organization\n      //Remove operation from season's field's operation list\n      _.unset(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations.${operationId}`) //TODO year, organization\n    } else {\n      //Add field to operation\n      _.set(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`, field) //TODO year, organization\n      //Create operations key on season's field list if doesn't exist\n      if (_.get(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations`) == null) _.set(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations`, {}) //TODO year, organization\n      //Add operation to field in season's field's operation list\n      _.set(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations.${operationId}`, {}) //TODO year, organization\n    }\n  },\n  onStatusChange({state, actions}, {status}) {\n    const myActions = actions.view.FieldDetails;\n    if (state.app.OADAManager.connected) {\n      myActions.changeOADAFieldStatus(status)\n    } else {\n      myActions.changeLocalFieldStatus(status)\n    }\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  selectedField: null\n}\n","export default {\n  \n}\n","import _ from 'lodash';\n\nexport default {\n  fieldStyles: {},\n  selectedField: null,\n  editingField: null,\n  fields: ({}, state) => {\n    const fieldStyles = _.get(state, `view.Map.fieldStyles`)\n    const editingField = _.get(state, `view.Map.editingField`)\n    const drawingBoundary = _.get(state, `view.Map.BoundaryDrawing.drawing`)\n    const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`)\n    const fieldsToRender = _.get(state, `app.seasonFields`);\n    return _.mapValues(fieldsToRender, (field, id) => {\n      if (_.startsWith(id, '_')) return false;\n      if (editingField == id) return false;\n      var styledField = _.clone(field);\n      //Add any styles\n      if (fieldStyles[id] != null) styledField.style = fieldStyles[id];\n      //Fill based on status of current operation\n      if (operation) {\n        var color = \"white\"\n        if (operation.fields && operation.fields[id]) {\n          if (operation.fields[id].status == 'planned') color = 'red'\n          if (operation.fields[id].status == 'started') color = 'orange'\n          if (operation.fields[id].status == 'done') color = 'green'\n        }\n        styledField.style = _.merge({}, styledField.style, {fillColor: color, color})\n      }\n      return styledField;\n    })\n  }\n}\n","import _ from 'lodash';\nimport Promise from 'bluebird';\n\nexport default {\n  styleField: {\n    highlight({state}, fieldId) {\n      if (fieldId) {\n        const myState = _.get(state, 'view.Map');\n        _.set(myState, `fieldStyles.${fieldId}`, {weight: 5})\n      }\n    },\n    unhighlight({state}, fieldId) {\n      if (fieldId) {\n        const myState = _.get(state, 'view.Map');\n        _.set(myState, `fieldStyles.${fieldId}`, {weight: 3})\n      }\n    }\n  },\n  async unselectField({state, actions}) {\n    const myActions = _.get(actions, 'view.Map');\n    const myState = _.get(state, 'view.Map');\n    if (myState.selectedField) {\n      actions.view.FieldDetails.close();\n      myActions.styleField.unhighlight(myState.selectedField);\n      await Promise.delay(200)\n      myState.selectedField = null;\n    }\n  },\n  onFieldClick({state, actions}, {id}) {\n    const myActions = _.get(actions, 'view.Map');\n    const myState = _.get(state, 'view.Map');\n    const drawing = _.get(myState, `BoundaryDrawing.drawing`);\n    if (!drawing) {\n      myActions.styleField.unhighlight(myState.selectedField);\n      myState.selectedField = id;\n      myActions.styleField.highlight(id);\n      actions.view.FieldDetails.open();\n    }\n  },\n  onMapClick({actions}, props) {\n    const myActions = _.get(actions, 'view.Map');\n    myActions.unselectField()\n    //Pass click to boundary drawing\n    myActions.BoundaryDrawing.onMapClick(props)\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  boundary: {},\n  drawing: false\n}\n","import _ from 'lodash';\nimport {pipe, debounce, mutate} from 'overmind';\nimport uuid from 'uuid/v1';\n\nexport default {\n  addPointToBoundary({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    _.set(myState, `boundary.${uuid()}`, [props.lat, props.lng]);\n  },\n  updateBoundaryPoint: pipe(debounce(10), mutate(({state}, props) => {\n    const myState = state.view.Map.BoundaryDrawing;\n    _.set(myState, `boundary.${props.id}`, [props.latlng.lat, props.latlng.lng]);\n  })),\n  onMapClick({state, actions}, {lat, lng}) {\n    const myState = state.view.Map.BoundaryDrawing;\n    const myActions = actions.view.Map.BoundaryDrawing;\n    if (myState.drawing) {\n      myActions.addPointToBoundary({lat, lng});\n    }\n  },\n  onMarkerMove({actions}, props) {\n    const myActions = actions.view.Map.BoundaryDrawing;\n    myActions.updateBoundaryPoint(props);\n  },\n  onStartDrawing({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    myState.boundary = (props || {}).boundary || {};\n    myState.drawing = true;\n  },\n  onStopDrawing({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    myState.drawing = false;\n    myState.boundary = {};\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as BoundaryDrawing from './BoundaryDrawing'\n\nexport const state = {\n  BoundaryDrawing: BoundaryDrawing.state,\n  ..._state\n};\nexport const actions = {\n  BoundaryDrawing: BoundaryDrawing.actions,\n  ..._actions\n}\n","import config from '../../../config'\nexport default {\n  OADADomain: {\n    open: false,\n    domain: config.oadaDomain\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../app/OADAManager/tree\";\n\nexport default {\n  OADADomain: {\n    open({state}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.open = true;\n    },\n    close({state}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.open = false;\n    },\n    onConnectClick({actions}) {\n      const myActions = actions.view.Modals.OADADomain;\n      myActions.open();\n    },\n    onDomainChange({state}, {domain}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.domain = domain;\n    },\n    async onConnect({actions, state}) {\n      const myState = state.view.Modals.OADADomain;\n      const myActions = actions.view.Modals.OADADomain;\n      const {domain} = myState;\n      myState.loading = true;\n      await actions.app.OADAManager.onDomainChanged({domain});\n      myState.loading = false;\n      myActions.close()\n    },\n    onCancel({actions}) {\n      const myActions = actions.view.Modals.OADADomain;\n      myActions.close();\n    }\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\n\nfunction convertToGEOJSON(points) {\n  var boundary = {\n    type: \"Polygon\",\n    \"coordinates\": [_.map(points, (p) => {return [p[1], p[0]]})] //Flip lat/lng and add array around\n  }\n  return boundary;\n}\nfunction getChanges({state, actions}, {fieldId, newBoundary, farmId, farm_id, seasonFarm_id}) {\n  const myState = state.view.Modals.SaveField;\n  //See if name or boundary has changed\n  let seasonField = actions.app.getSeasonField(fieldId);\n  let newName = myState.name;\n  var seasonFieldChanges = {};\n  var fieldChanges = {};\n  //Get changes the effect both\n  if (newName != seasonField.name) seasonFieldChanges.name = newName;\n  if (_.isEqual(newBoundary, seasonField.boundary) == false) seasonFieldChanges.boundary = newBoundary;\n\n  fieldChanges = _.cloneDeep(seasonFieldChanges)\n  //See if farm has changed\n  if (seasonFarm_id) {\n    //Connected to oada\n    if (!seasonField.farm || seasonField.farm._id != seasonFarm_id) {\n      seasonFieldChanges.farm = {_id: seasonFarm_id};\n      //TODO this isn't right, we shouldn't be adding a farm in the function that calls this if it isn't our current year\n      fieldChanges.farm = {_id: farm_id};\n    }\n  } else {\n    //Local\n    if (!seasonField.farm || seasonField.farm.id != farmId) {\n      seasonFieldChanges.farm = {id: farmId};\n      fieldChanges.farm = {id: farmId};\n    }\n  }\n  //TODO only change field if is current year\n  return {fieldChanges, seasonFieldChanges};\n}\nfunction saveChangesToLocalData({state}, editingFieldId, fieldChanges, seasonFieldChanges) {\n  if (_.isEmpty(fieldChanges) && _.isEmpty(seasonFieldChanges)) return;\n  const fieldPath = `app.localData.abc123.fields.fields.${editingFieldId}`; //TODO organization\n  _.set(state, fieldPath, _.merge({}, _.get(state, fieldPath), fieldChanges));\n  const seasonFieldPath = `app.localData.abc123.seasons.2019.fields.${editingFieldId}` //TODO year, organization\n  _.set(state, seasonFieldPath, _.merge({}, _.get(state, seasonFieldPath), seasonFieldChanges));\n}\nasync function saveChangesToOADA(context, editingFieldId, fieldChanges, seasonFieldChanges) {\n  const { state, actions } = context;\n  if (_.isEmpty(fieldChanges) && _.isEmpty(seasonFieldChanges)) return;\n  //Add to OADA\n  let requests = [];\n  if (_.isEmpty(fieldChanges) == false) {\n    requests.push({\n      tree,\n      data: fieldChanges,\n      path: `/bookmarks/fields/fields/${editingFieldId}`\n    })\n  }\n  if (_.isEmpty(seasonFieldChanges) == false) {\n    requests.push({\n      tree,\n      data: seasonFieldChanges,\n      path: `/bookmarks/seasons/2019/fields/${editingFieldId}` //TODO year\n    })\n  }\n  console.log('fieldChanges', fieldChanges);\n  console.log('seasonFieldChanges', seasonFieldChanges);\n  const connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  await actions.app.oada.put({requests, connection_id})\n}\n\nfunction createField(context, {boundary, farmId, farm_id}) {\n  const { state } = context;\n  const myState = state.view.Modals.SaveField;\n  var field = {\n    name: myState.name,\n    boundary: boundary,\n    farm: (farm_id) ?\n      {\n        _id: farm_id //OADA farm resource id\n      }\n      :\n      {\n        id: farmId\n      }\n  }\n  return field\n}\nfunction addFieldToLocalData(context, {field}) {\n  const { state } = context;\n  const id = uuid();\n  _.set(state, `app.localData.abc123.fields.fields.${id}`, field); //TODO organization\n  _.set(state, `app.localData.abc123.seasons.2019.fields.${id}`, {...field, operations: {}, year: '2019'}); //TODO year, organization\n  return id;\n}\nasync function addFieldToOADA(context, {field, seasonField}) {\n  const { state, actions } = context;\n  const id = uuid();\n  //Add to OADA\n  let requests = [];\n  if (field) {\n    requests.push({\n      tree,\n      data: field,\n      path: `/bookmarks/fields/fields/${id}`\n    })\n  }\n  if (seasonField) {\n    requests.push({\n      tree,\n      data: {...seasonField, operations: {}, year: '2019'}, //TODO year\n      path: `/bookmarks/seasons/2019/fields/${id}` //TODO year\n    })\n  }\n  let connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  await actions.app.oada.put({requests, connection_id})\n}\n\nexport default {\n  open({state, actions}) {\n    const myState = state.view.Modals.SaveField;\n    const editingField = _.get(state, `view.Map.editingField`);\n    if (editingField == null) {\n      myState.name = \"\";\n    } else {\n      let field = actions.app.getSeasonField(editingField);\n      //Populate the name in the modal popup\n      myState.name = field.name;\n      if (state.app.OADAManager.connected) {\n        //Get season farm id by oada id\n        const farmId = _.get(state, `app.oadaSeasonFarmsIdBy_id.${_.get(field, 'farm._id')}.id`)\n        myState.farmId = farmId;\n      } else {\n        myState.farmId = _.get(field, 'farm.id');\n      }\n    }\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.Modals.SaveField;\n    myState.open = false;\n  },\n  async saveField(context) {\n    const {state} = context;\n    const myState = state.view.Modals.SaveField;\n    //Convert the field to geojson\n    const points = _.get(state, `view.Map.BoundaryDrawing.boundary`)\n    const boundary = convertToGEOJSON(points);\n\n    //Create farm or get existing farms id (cannot update an existing farm here)\n    let farmId = myState.farmId;\n    let farm_id = null;\n    let seasonFarm_id = null;\n    let farm = myState.farm;\n    if (farm) {\n      if (state.app.OADAManager.connected) {\n        //Get farm_id\n        farm_id = _.get(state, `app.oadaOrgData.fields.farms.${farmId}._id`)\n        //Get seasonFarm_id from farmId\n        seasonFarm_id = _.get(state, `app.seasonFarms.${farmId}._id`)\n      }\n    }\n    //Update or create field\n    let editingFieldId = _.get(state, `view.Map.editingField`);\n    if (editingFieldId) {\n      //We are editing a field find the changes, if any\n      const {fieldChanges, seasonFieldChanges} = getChanges(context, {fieldId: editingFieldId, newBoundary: boundary, farmId, farm_id, seasonFarm_id})\n      if (state.app.OADAManager.connected) {\n        saveChangesToOADA(context, editingFieldId, fieldChanges, seasonFieldChanges)\n      } else {\n        saveChangesToLocalData(context, editingFieldId, fieldChanges, seasonFieldChanges)\n      }\n    } else {\n      //TODO only add field if is current year, otherwise just seasonfield\n      if (state.app.OADAManager.connected) {\n        const field = await createField(context, {boundary, farm_id});\n        const seasonField = await createField(context, {boundary, farm_id: seasonFarm_id});\n        await addFieldToOADA(context, {field, seasonField})\n      } else {\n        const field = await createField(context, {boundary, farm, farmId: farmId})\n        await addFieldToLocalData(context, {field})\n      }\n    }\n  },\n  onSave({actions, state}) {\n    const myActions = actions.view.Modals.SaveField;\n    myActions.saveField();\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n    state.view.Map.editingField = null;\n    myActions.close();\n  },\n  onCancel({actions, state}) {\n    const myActions = actions.view.Modals.SaveField;\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n    state.view.Map.editingField = null;\n    myActions.close();\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.SaveField;\n    myState.name = name;\n  },\n  onFarmSearchChange({state}, value) {\n    const myState = state.view.Modals.SaveField;\n    myState.farmSearch = value;\n  },\n  onFarmChange({state}, {id}) {\n    const myState = state.view.Modals.SaveField;\n    myState.farmId = id;\n  },\n  onFarmAdd({actions}) {\n    actions.view.Modals.NewFarm.open({callbackAction: 'view.Modals.SaveField.onFarmAddComplete'});\n  },\n  onFarmAddComplete({state}, {id}) {\n    const myState = state.view.Modals.SaveField;\n    //Update farmId\n    myState.farmId = id;\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\nexport default {\n  open: false,\n  name: '',\n  farmSearch: '',\n  farms: ({farmSearch: search}, state) => {\n    return _.compact(_.map(state.app.seasonFarms, (f, id) => {\n      if (!f || search != '' && f.name && f.name.toLowerCase().search(search.toLowerCase()) == -1) return null;\n      return {key: id, text: f.name, value: id};\n    }))\n  },\n  farmId: null,\n  farm: ({farmId, farms}, state) => {\n    if (farmId) {\n      return _.get(state, `app.seasonFarms.${farmId}`)\n    }\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\nfunction createOperation(context, {name}) {\n  var operation = {\n    name,\n    fields: {}\n  }\n  return operation;\n}\n\nfunction addOperationToLocalData({state}, {operation}) {\n  const id = uuid();\n  _.set(state, `app.localData.abc123.seasons.2019.operations.${id}`, operation); //TODO year, organization\n  return id;\n}\nasync function addOperationToOADA({state, actions}, {operation}) {\n  //Add to OADA\n  const id = uuid();\n  let requests = [\n    {\n      tree,\n      data: operation,\n      path: `/bookmarks/seasons/2019/operations/${id}` //TODO year\n    }\n  ];\n  const connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  const ret = await actions.app.oada.put({requests, connection_id})\n  const _id = _.get(ret, 'responses.0.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  return {id, _id}\n}\n\nexport default {\n  open({state}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.name = '';\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.open = false;\n  },\n  async saveOperation(context) {\n    const {state} = context;\n    const myState = state.view.Modals.NewOperation;\n    const operation = createOperation(context, {name: myState.name})\n    if (state.app.OADAManager.connected) {\n      const {id, _id} = await addOperationToOADA(context, {operation});\n      _.set(state, `view.TopBar.OperationDropdown.selected`, id)\n    } else {\n      const id = await addOperationToLocalData(context, {operation});\n      _.set(state, `view.TopBar.OperationDropdown.selected`, id)\n    }\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.name = name;\n  },\n  onCancel({actions}) {\n    const myActions = actions.view.Modals.NewOperation;\n    myActions.close();\n  },\n  async onSave({actions}) {\n    const myActions = actions.view.Modals.NewOperation;\n    await myActions.saveOperation();\n    myActions.close();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  name: ''\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\nfunction createFarm(context, {name}) {\n  var farm = {\n    name\n  }\n  return farm;\n}\nfunction addFarmToLocalData(context, {farm}) {\n  const { state } = context;\n  const id = uuid();\n  _.set(state, `app.localData.abc123.farms.${id}`, farm); //TODO organization\n  _.set(state, `app.localData.abc123.seasons.2019.farms.${id}`, farm); //TODO year, organization\n  return id;\n}\nasync function addFarmToOADA(context, {farm}) {\n  const { state, actions } = context;\n  const id = uuid();\n  //TODO only add to season farms depending on what year is selected, need to figure out return values for that as well (since may only have one request)\n  //Add to OADA\n  let requests = [\n    {\n      tree,\n      data: farm,\n      path: `/bookmarks/fields/farms/${id}`\n    },\n    {\n      tree,\n      data: farm,\n      path: `/bookmarks/seasons/2019/farms/${id}` //TODO year\n    },\n  ];\n  let connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  const ret = await actions.app.oada.put({requests, connection_id})\n  const farm_id = _.get(ret, 'responses.0.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  if (farm_id == null) throw 'OADA did not return an _id when creating a farm.'\n  const seasonFarm_id = _.get(ret, 'responses.1.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  if (seasonFarm_id == null) throw 'OADA did not return an _id when creating a season farm.'\n  return {farm_id, seasonFarm_id, id};\n}\nexport default {\n  open({state}, {callbackAction}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.name = '';\n    myState.open = true;\n    myState.callbackAction = callbackAction || null;\n  },\n  close({state}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.open = false;\n  },\n  async saveFarm(context) {\n    const {state, actions} = context;\n    const myState = state.view.Modals.NewFarm;\n    const farm = createFarm(context, {name: myState.name})\n    if (state.app.OADAManager.connected) {\n      const {farm_id, seasonFarm_id, id} = await addFarmToOADA(context, {farm});\n      if (myState.callbackAction) {\n        const action = _.get(actions, myState.callbackAction);\n        if (!action) throw `callbackAction: ${myState.callbackAction} does not exist.`\n        action({farm_id, seasonFarm_id, id});\n      }\n    } else {\n      const id = await addFarmToLocalData(context, {farm});\n      if (myState.callbackAction) {\n        const action = _.get(actions, myState.callbackAction);\n        if (!action) throw `callbackAction: ${myState.callbackAction} does not exist.`\n        action({id});\n      }\n    }\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.name = name;\n  },\n  onCancel({actions}) {\n    const myActions = actions.view.Modals.NewFarm;\n    myActions.close();\n  },\n  async onSave({actions}) {\n    const myActions = actions.view.Modals.NewFarm;\n    await myActions.saveFarm();\n    myActions.close();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  name: ''\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as SaveField from './SaveField'\nimport * as NewOperation from './NewOperation'\nimport * as NewFarm from './NewFarm'\n\nexport const state = {\n  SaveField: SaveField.state,\n  NewOperation: NewOperation.state,\n  NewFarm: NewFarm.state,\n  ..._state\n};\nexport const actions = {\n  SaveField: SaveField.actions,\n  NewOperation: NewOperation.actions,\n  NewFarm: NewFarm.actions,\n  ..._actions\n}\n","import _ from 'lodash'\nimport uuid from 'uuid/v1'\n\nexport default {\n  onAddField({actions}) {\n    actions.view.Map.BoundaryDrawing.onStartDrawing();\n  },\n  onSaveField({actions}) {\n    actions.view.Modals.SaveField.open();\n  },\n  onCancelField({state, actions}) {\n    state.view.Map.editingField = null; //Stop editing if we were\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n  },\n  onConnect({actions}) {\n    actions.view.Modals.OADADomain.open();\n  },\n  onEditField({actions, state}) {\n    const currentField = state.view.FieldDetails.field;\n    //Hide the current boundary\n    state.view.Map.editingField = state.view.FieldDetails.fieldId;\n    //Convert to drawing boundary: {<rand-id>: [lat, lng], ...}\n    let boundary = {};\n    _.forEach(_.get(currentField, 'boundary.coordinates.0') || [], (coors) => { //TODO will not work with holes in fields etc\n      boundary[uuid()] = [coors[1], coors[0]];\n    });\n    //Start drawing\n    actions.view.Map.BoundaryDrawing.onStartDrawing({boundary});\n    //Close the details drawer\n    actions.view.Map.unselectField()\n  },\n  async onResetCache({actions}) {\n    await actions.app.oada.resetCache();\n    //Refresh the page\n    //location.reload();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\n\nexport default {\n  open: false,\n  selected: null,\n  search: '',\n  list: ({selected, operations}, state) => {\n    //Get operations, filtering by search\n    const search = _.get(state, `view.TopBar.OperationDropdown.search`)\n    return _.omitBy(_.mapValues(operations, ({name}, id) => {\n      if (id == null) return null; //Not an operation, a _key for oada\n      if (search != '' && name.search(search) == -1) return null;\n      return {\n        text: name,\n        value: id,\n        selected: (selected == id),\n        label: { color: 'green', empty: true, circular: true }\n      }\n    }), _.isEmpty)\n  },\n  operations: ({}, state) => {\n    let operations = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      operations = _.omitBy(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations`) || {}, (o, k) => {return _.startsWith(k, '_')}); //TODO year\n    } else {\n      operations = _.get(state, `app.localData.abc123.seasons.2019.operations`) //TODO year, organization\n    }\n    return operations\n  },\n  selectedOperationId: ({selected, operations}, state) => {\n    let selectedId = selected;\n    if (selectedId == null && _.keys(operations).length > 0) selectedId = _.keys(operations)[0];\n    return selectedId;\n  },\n  selectedOperation: ({selectedOperationId, operations}, state) => {\n    return operations[selectedOperationId];\n  }\n}\n","export default {\n  onAdd({state, actions}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.open = false;\n    return actions.view.Modals.NewOperation.open()\n  },\n  onChange({state}, {id}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.selected = id;\n    myState.open = false;\n  },\n  onOpenChange({state}, {open}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.open = open;\n  },\n  onSearch({state}, {search}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.search = search;\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as OperationDropdown from './OperationDropdown'\n\nexport const state = {\n  OperationDropdown: OperationDropdown.state,\n  ..._state\n};\nexport const actions = {\n  OperationDropdown: OperationDropdown.actions,\n  ..._actions\n}\n","export default {\n\n}\n","import _state from './state'\nimport _actions from './actions'\n\nimport * as FieldDetails from './FieldDetails'\nimport * as FieldList from './FieldList'\nimport * as Map from './Map'\nimport * as Modals from './Modals'\nimport * as TopBar from './TopBar'\n\nexport const state = {\n  FieldDetails: FieldDetails.state,\n  FieldList: FieldList.state,\n  Map: Map.state,\n  Modals: Modals.state,\n  TopBar: TopBar.state,\n  ..._state\n};\nexport const actions = {\n  FieldDetails: FieldDetails.actions,\n  FieldList: FieldList.actions,\n  Map: Map.actions,\n  Modals: Modals.actions,\n  TopBar: TopBar.actions,\n  ..._actions\n}\n","import _ from 'lodash';\n\nexport default {\n  \n}\n","import _ from 'lodash'\nexport default {\n\n}\n","export default {\n  \"42f60b10-784c-11ea-8dfd-a3e960f56105\": {\n    \"name\": \"1004 G-N\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97584700584412,\n            41.4628134964027\n          ],\n          [\n            -84.97539639472963,\n            41.462765256171906\n          ],\n          [\n            -84.97495651245119,\n            41.46275721612994\n          ],\n          [\n            -84.97424840927125,\n            41.46250797433487\n          ],\n          [\n            -84.97405529022217,\n            41.46203360827181\n          ],\n          [\n            -84.97410893440247,\n            41.46044164256161\n          ],\n          [\n            -84.97139453887941,\n            41.46130195211675\n          ],\n          [\n            -84.96770381927492,\n            41.46327177680542\n          ],\n          [\n            -84.97010707855226,\n            41.46330393671208\n          ],\n          [\n            -84.9764907360077,\n            41.46306273702346\n          ],\n          [\n            -84.97634053230287,\n            41.45965368547904\n          ],\n          [\n            -84.97462391853334,\n            41.46024867436535\n          ],\n          [\n            -84.9746346473694,\n            41.461004463187685\n          ],\n          [\n            -84.97491359710695,\n            41.46126175098986\n          ],\n          [\n            -84.97492432594301,\n            41.46172004235903\n          ],\n          [\n            -84.97529983520509,\n            41.46208988917259\n          ],\n          [\n            -84.97581481933594,\n            41.46234717266838\n          ],\n          [\n            -84.9761688709259,\n            41.46278133625282\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\"\n    }\n  },\n  \"7c0ce950-784c-11ea-bfa5-97fea4f9bfd9\": {\n    \"name\": \"1001 HO-N\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97347593307495,\n            41.44864540647965\n          ],\n          [\n            -84.97626543045044,\n            41.44856498851091\n          ],\n          [\n            -84.97617959976196,\n            41.44784122230691\n          ],\n          [\n            -84.977445602417,\n            41.44782513852177\n          ],\n          [\n            -84.97759580612183,\n            41.44862932289387\n          ],\n          [\n            -84.97886180877687,\n            41.448532821295515\n          ],\n          [\n            -84.97866868972778,\n            41.44205080201176\n          ],\n          [\n            -84.97654438018799,\n            41.442887227983185\n          ],\n          [\n            -84.97549295425415,\n            41.44425443952937\n          ],\n          [\n            -84.97323989868165,\n            41.44608806625952\n          ],\n          [\n            -84.97272491455078,\n            41.44689227216232\n          ],\n          [\n            -84.97330427169801,\n            41.44726220353039\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\",\n    }\n  },\n  \"8ab27420-784c-11ea-bfa5-97fea4f9bfd9\": {\n    \"name\": \"1002 HO-S\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97152328491212,\n            41.44697269220437\n          ],\n          [\n            -84.97148036956789,\n            41.44166475561947\n          ],\n          [\n            -84.97152328491212,\n            41.44111785263252\n          ],\n          [\n            -84.97347593307495,\n            41.441085681725035\n          ],\n          [\n            -84.97373342514038,\n            41.44073180069027\n          ],\n          [\n            -84.97635126113893,\n            41.44053877385792\n          ],\n          [\n            -84.97645854949953,\n            41.44134304853828\n          ],\n          [\n            -84.97607231140138,\n            41.44161649965898\n          ],\n          [\n            -84.97611522674562,\n            41.44240467585386\n          ],\n          [\n            -84.97540712356569,\n            41.44398099952468\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\"\n    }\n  }\n}\n","export default {\n  \"42f08cd0-784c-11ea-8dfd-a3e960f56105\": {\n    name: \"Bowman and Bowman\"\n  },\n  \"52f08cd0-784c-11ea-8dfd-a3e960f56105\": {\n    name: \"Martz Farms\"\n  }\n}\n","import testFields from './test/testFields';\nimport testFarms from './test/testFarms';\nimport _ from 'lodash';\nimport geojsonArea from '@mapbox/geojson-area';\n\nexport default {\n  acresStatus: ({}, state) => {\n    //Get id's of all fields in this operation\n    const operationFields = state.app.operationFields;\n    const seasonFields = state.app.seasonFields;\n    //Loop through each field, totaling acres.\n    let planned = 0;\n    let started = 0;\n    let done = 0;\n    _.forEach(operationFields, (fieldOperation, key) => {\n      if (fieldOperation == null) return;\n      //Get field\n      let field = seasonFields[key];\n      if (field == null) return;\n      //Compute area of field boundary\n      let area = geojsonArea.geometry(field.boundary) * 0.000247105 //Meters to acres;\n      if (fieldOperation.status == 'planned') {\n        planned += area;\n      } else if (fieldOperation.status == 'started') {\n        started += area;\n      } else if (fieldOperation.status == 'done') {\n        done += area;\n      }\n    });\n    let total = planned + started + done;\n    return {\n      planned: Math.round(planned),\n      plannedPercentage: Math.round((planned / (total || 1)) * 100),\n      started: Math.round(started),\n      startedPercentage: Math.round((started / (total || 1)) * 100),\n      done: Math.round(done),\n      donePercentage: Math.round((done / (total || 1)) * 100),\n    };\n  },\n  seasonFarms: ({}, state) => {\n    let farms;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      farms = _.chain(state).get(`app.oada.${currentConnection}.bookmarks.seasons.2019.farms`).omitBy((v, k) => { //TODO year\n        if (_.startsWith(k, '_')) return true;\n      }).value();\n    } else {\n      farms = _.get(state, `app.localData.abc123.seasons.2019.farms`) //TODO year, organization\n    }\n    return farms || {};\n  },\n  seasonFields: ({}, state) => {\n    let fields;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      fields = _.chain(state).get(`app.oada.${currentConnection}.bookmarks.seasons.2019.fields`).omitBy((v, k) => { //TODO year\n        if (_.startsWith(k, '_')) return true;\n      }).value();\n    } else {\n      fields = _.get(state, `app.localData.abc123.seasons.2019.fields`) //TODO year, organization\n    }\n    return fields || {};\n  },\n  operationFields: ({}, state) => {\n    let operationId = _.get(state, 'view.TopBar.OperationDropdown.selectedOperationId');\n    let operationFields = [];\n    if (operationId != null) {\n      if (_.get(state, `app.OADAManager.connected`) == true) {\n        let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n        operationFields = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations.${operationId}.fields`) || []; //TODO year\n      } else {\n        operationFields = _.get(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields`) || []; //TODO year, organization\n      }\n    }\n    return operationFields; // {<field-id>: {status: 'planned'}, ...}\n  },\n  currentOADA: ({}, state) => {\n    if (state.app.OADAManager.connected) {\n      const currentConnection = state.app.OADAManager.currentConnection;\n      if (!currentConnection) return;\n      return state.app.oada[currentConnection];\n    }\n  },\n  oadaOrgData: ({currentOADA}) => {\n    if (currentOADA) {\n      return currentOADA.bookmarks;\n    }\n  },\n  oadaSeasonFarmsIdBy_id: ({oadaOrgData}, state) => {\n    return _.chain(oadaOrgData).get(`seasons.2019.farms`).mapValues((v, k) => {\n      return {_id: v._id, id: k};\n    }).mapKeys((v, k) => {\n      return v._id; //Key of oada id\n    }).value();  //{_id: <oada-res-id>, id: <path-id>}\n  },\n  localOrgData: ({localData}) => {\n    return localData.abc123; //TODO organization\n  },\n  localData: {\n    organizations: {\n      'abc123': {\n        name: 'Default'\n      }\n    },\n    'abc123': {\n      fields: {\n        fields: {\n          /*'a': {\n            id: 'a',\n            name: 'Back 40',\n            boundary: '' //GEOJSON\n          }*/\n          ...testFields,\n        },\n        farms: {\n          ...testFarms,\n        }\n      },\n      seasons: {\n        /*'2019': {\n          fields: {\n            '<field-uuid>': {\n              season: 2018,\n              boundary: <geo-json>,\n              operations: {\n                '<operation-uuid>': {}\n              }\n            }\n          },\n          operations: {\n            '<operation-uuid>': {\n              id: '<operation-uuid>',\n              year: 2019,\n              name: 'Corn Planting',\n              fields: {\n                '<field-uuid>': {\n                  status: 'Planned',\n                }\n              }\n            }\n          }\n        }*/\n        '2019': {\n          fields: {\n            ...testFields,\n          },\n          farms: {\n            ...testFarms,\n          },\n          operations: {\n            /*'<operation-uuid>': {\n              id: '<operation-uuid>',\n              year: 2019,\n              name: 'Corn Planting',\n              fields: {\n                '<field-uuid>': {\n                  status: 'Planned',\n                }\n              }\n            }*/\n          }\n        }\n      }\n    }\n  }\n}\n","import _ from 'lodash'\nexport default {\n  getSeasonField({state}, id) {\n    let fields = [];\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      fields = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.fields`) //TODO year\n    } else {\n      fields = _.get(state, `app.localData.abc123.seasons.2019.fields`) //TODO year, organization\n    }\n    return fields[id];\n  },\n  getSeasonFarm({state}, id) {\n    let farms = [];\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      farms = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.farms`) //TODO year\n    } else {\n      farms = _.get(state, `app.localData.abc123.seasons.2019.farms`) //TODO year, organization\n    }\n    return farms[id];\n  }\n}\n","import tree from './tree';\nimport config from '../../../config'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport { browser as oadaIdClient } from '@oada/oada-id-client/index.js'\nconst getAccessToken = Promise.promisify(oadaIdClient.getAccessToken)\n\nexport default {\n  async getToken({}, domain) {\n    /*\n      Get token from local storage or request one\n    */\n    //TODO get token from local storage\n    let res = await getAccessToken(domain.replace(/^https?:\\/\\//, ''), {\n      metadata: config.METADATA,\n      scope: config.SCOPE,\n      redirect: config.REDIRECT\n    })\n    //TODO save token to local storage\n    return res.access_token;\n  },\n  async connect({actions, state, effects}, {domain}) {\n    const myState = state.app.OADAManager;\n    const myActions = actions.app.OADAManager;\n\n    const token = await myActions.getToken(domain);\n    return actions.app.oada.connect({\n      token,\n      domain: domain,\n      options: config.OPTIONS\n    }).then((response) => {\n      if (!response.error) {\n        myState.currentConnection = response.connectionId;\n        myState.token = response.token;\n        myState.connected = true;\n        //Unselect local opeation\n        state.view.TopBar.OperationDropdown.selected = null;\n      }\n      return response;\n    })\n  },\n  async fetchAndWatch({actions, state}) {\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //Fetch field and seasons\n    let watchRequests = [\n      {\n        path: '/bookmarks/fields',\n        tree,\n        watch: {\n          actions: [actions.app.OADAManager.onFieldChanged]\n        }\n      },\n      {\n        path: '/bookmarks/seasons',\n        tree,\n        watch: {\n          actions: [actions.app.OADAManager.onSeasonsChanged]\n        },\n      }\n    ];\n    const ret = await actions.app.oada.get({requests: watchRequests, connection_id})\n    let rewatchRequests = [];\n    if (ret.responses[0].error) {\n      //On 404 create and rewatch\n      if (ret.responses[0].status != 404) throw ret.responses[0].error;\n      //Create fields and try to watch again\n      let requests = [{\n        tree,\n        data: {\n          fields: {},\n          farms: {}\n        },\n        path: '/bookmarks/fields'\n      }];\n      //Create\n      await actions.app.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[0]);\n    }\n    if (ret.responses[1].error) {\n      //On 404 create and rewatch\n      if (ret.responses[1].status != 404) throw ret.responses[0].error;\n      //Create seasons and try to watch again\n      let requests = [{\n        tree,\n        data: {},\n        path: '/bookmarks/seasons'\n      }];\n      //Create\n      await actions.app.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[1]);\n    }\n    if (rewatchRequests.length > 0) await actions.app.oada.get({requests: rewatchRequests, connection_id})\n  },\n  initSeasonFields({state, actions}) {\n    /*\n      Put changes from master field list into season fields\n    */\n    const myActions = actions.app.OADAManager;\n    //Get master field list fields\n    var fieldsChanged = [];\n    _.forEach(_.get(state, 'app.oadaOrgData.fields.fields'), (obj, key) => {\n      if (_.startsWith(key, '_')) return;\n      fieldsChanged.push({fieldId: key, name: obj.name, boundary: obj.boundary});\n    })\n    return myActions.changeSeasonFields(fieldsChanged);\n  },\n  initSeasonFarms({state, actions}) {\n    /*\n      Put changes from master farm list into season farms\n    */\n    const myActions = actions.app.OADAManager;\n    //Get master field list fields\n    var changed = [];\n    _.forEach(_.get(state, 'app.oadaOrgData.fields.farms'), (obj, key) => {\n      if (_.startsWith(key, '_')) return;\n      changed.push({id: key, name: obj.name});\n    })\n    return myActions.changeSeasonFarms(changed);\n  },\n  async changeSeasonFields({state, actions}, fieldsChanged) {\n    /*\n      Apply any changes to season fields\n    */\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let theSeasonFields = state.app.seasonFields;\n    _.forEach(fieldsChanged, (fieldChange) => {\n      let data = {};\n      let seasonField = theSeasonFields[fieldChange.fieldId]\n      if (fieldChange.name) {\n        if (seasonField == null || seasonField.name != fieldChange.name) {\n          data.name = fieldChange.name;\n        }\n      }\n      if (fieldChange.boundary) {\n        if (seasonField == null || _.isEqual(seasonField.boundary, fieldChange.boundary) == false) {\n          data.boundary = fieldChange.boundary;\n        }\n      }\n      if (_.isEmpty(data)) return;\n      data.id = fieldChange.fieldId;\n      requests.push(\n        { //Change season's field's name, boundary\n          tree,\n          data,\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${fieldChange.fieldId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.put({requests, connection_id})\n  },\n  async changeSeasonFarms({state, actions}, changed) {\n    /*\n      Apply any changes to season fields\n    */\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFarms = state.app.seasonFarms;\n    _.forEach(changed, (change) => {\n      let data = {};\n      let seasonFarm = seasonFarms[change.id]\n      //Check if name changed\n      if (change.name) {\n        if (seasonFarm == null || seasonFarm.name != change.name) {\n          data.name = change.name;\n        }\n      }\n      if (_.isEmpty(data)) return;\n      data.id = change.id;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          data,\n          type: 'application/vnd.oada.farm.1+json',\n          path: `/bookmarks/seasons/2019/farms/${data.id}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.put({requests, connection_id})\n  },\n  async onDomainChanged({actions, state}, {domain}) {\n    const myState = state.app.OADAManager;\n    const myActions = actions.app.OADAManager;\n    myState.domain = domain;\n    const {error} = await myActions.connect({domain});\n    if (!error) {\n      await myActions.fetchAndWatch();\n      await myActions.initSeasonFarms();\n      await myActions.initSeasonFields();\n    }\n  },\n  onFieldChanged({state, actions}, props) {\n    /*\n      If a field in the master list changed, apply change to this years season fields\n    */\n    const myActions = actions.app.OADAManager;\n    let changeType = _.get(props, 'response.change.type');\n    if (changeType == 'merge') {\n      var fieldsChanged = [];\n      _.forEach(_.get(props, 'response.change.body.data.fields'), (obj, key) => {\n        if (_.startsWith(key, '_')) return;\n        fieldsChanged.push({fieldId: key, name: obj.name, boundary: obj.boundary});\n      })\n      return myActions.changeSeasonFields(fieldsChanged);\n    } else {\n      console.warn(\"onFieldChanged: Unsupported change type:\", changeType)\n    }\n  },\n  onFarmsChanged() {\n    //TODO If a farm in the master list changed, apply change to this years season farm\n    console.log('TODO: If a farm in the master list changed, apply change to this years season farm')\n  },\n  onSeasonsChanged({state, actions}, props) {\n\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  connected: false\n}\n","import _state from './state'\nimport _actions from './actions'\n\nimport * as OADAManager from './OADAManager'\nimport oadaCacheOvermind from '@oada/oada-cache-overmind'\n\nconst oada =  oadaCacheOvermind('app.oada')\n\nexport const state = {\n  oada: oada.state,\n  OADAManager: OADAManager.state,\n  ..._state\n};\nexport const actions = {\n  oada: oada.actions,\n  OADAManager: OADAManager.actions,\n  ..._actions\n}\nexport const effects = {\n  oada: oada.effects\n}\n","import { createHook } from \"overmind-react\"\n\nimport { namespaced } from 'overmind/config'\n\nimport * as view from './view'\nimport * as app from './app'\n\nexport const config = namespaced({\n  view,\n  app\n})\n\nexport default createHook()\n","/*\n  Adds points/polygons to map when drawing a boundary\n*/\nimport React, { Component } from 'react';\nimport { Marker, Polygon, LayerGroup } from 'react-leaflet'\n\nimport overmind from '../../../overmind'\nimport _ from 'lodash';\n\nexport default function BoundaryDrawing() {\n  const {state, actions} = overmind();\n  const myState = state.view.Map.BoundaryDrawing;\n  const myActions = actions.view.Map.BoundaryDrawing;\n\n  const { boundary, drawing } = myState;\n  const { onMarkerMove } = myActions;\n\n  if (!drawing) return null;\n  return (\n    <LayerGroup>\n      <Polygon positions={_.map(boundary)} />\n      {_.map(boundary, (latlng, id) => <Marker position={latlng} key={id} draggable onMove={({latlng, oldLatLng}) => onMarkerMove({latlng, oldLatLng, id})}/>)}\n    </LayerGroup>\n  );\n}\n","/*\n  Adds points/polygons to map when drawing a boundary\n*/\nimport React from 'react';\nimport { Marker, Polygon, LayerGroup, GeoJSON } from 'react-leaflet'\n\nimport overmind from '../../../overmind'\n\nimport _ from 'lodash';\nimport uuid from 'uuid/v1'\n\nexport default function Fields() {\n  const {state, actions} = overmind();\n  const myState = state.view.Map;\n  const myActions = actions.view.Map;\n\n  const { fields } = myState;\n  const { onFieldClick } = myActions;\n\n  if (_.keys(fields).length == 0) return null;\n  return (\n    <LayerGroup>\n      {_.map(fields, (field, id) =>\n        <GeoJSON\n          bubblingMouseEvents={false}\n          style={field.style}\n          data={field.boundary}\n          key={uuid()} //Must be uuid to unmount/mount when field style or boundary changes\n          onClick={(evt) => {onFieldClick({id})}} />\n      )}\n    </LayerGroup>\n  );\n}\n","import React from 'react';\nimport { Map as LeafletMap, Marker, Popup, TileLayer, ZoomControl } from 'react-leaflet'\nimport './index.css'\n\nimport overmind from '../../overmind'\nimport _ from 'lodash'\nimport BoundaryDrawing from './BoundaryDrawing'\nimport Fields from './Fields'\n\nexport default function Map() {\n  const { actions, state } = overmind();\n  const myActions = actions.view.Map;\n  return (\n      <LeafletMap center={[41.448068, -84.972648]} zoom={13} onClick={(evt) => myActions.onMapClick({...evt.latlng})} zoomControl={false}>\n        <TileLayer\n          url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n        />\n        <BoundaryDrawing />\n        <Fields />\n      </LeafletMap>\n  );\n}\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport {TextInput, View} from 'react-native'\n\nimport overmind from '../../../overmind'\n\nexport default function DrawingToolbar() {\n  const { actions } = overmind();\n  const myActions = actions.view.TopBar;\n  return (\n    <Toolbar>\n      <View style={{flex: 1}} />\n      <Button color=\"inherit\" onClick={() => myActions.onCancelField()}>Cancel</Button>\n      <Button color=\"inherit\" onClick={() => myActions.onSaveField()}>Save</Button>\n    </Toolbar>\n  );\n}\n","import React from 'react'\nimport { Dropdown, Input } from 'semantic-ui-react'\nimport {View, Text} from 'react-native'\nimport _ from 'lodash'\n/*const tagOptions = [\n  {\n    text: 'Important',\n    value: 'Important',\n    label: { color: 'red', empty: true, circular: true },\n  }\n]*/\n\nimport overmind from '../../../../overmind'\n\nexport default function OperationsDropdown({style}) {\n  const { actions, state } = overmind();\n  const myActions = actions.view.TopBar.OperationDropdown;\n  const myState = state.view.TopBar.OperationDropdown;\n\n  const selectedOperation = myState.selectedOperation;\n  const operations = myState.list;\n  const open = myState.open;\n  const search = myState.search;\n  const onAdd = myActions.onAdd;\n  const onChange = myActions.onChange;\n  const onOpenChange = myActions.onOpenChange;\n  const onSearch = myActions.onSearch;\n\n  return (\n    <View style={style}>\n      <View style={{flexDirection: 'row'}}>\n        {\n           selectedOperation ?\n            <Dropdown\n              open={open}\n              onOpen={() => {onOpenChange({open: true})}}\n              onBlur={() => {onOpenChange({open: false})}}\n              text={selectedOperation.name}\n              icon='filter'\n              floating\n              labeled\n              button\n              className='icon'\n            >\n              <Dropdown.Menu style={{top: 42}}>\n                <Dropdown.Item style={{textAlign: 'center'}} text='Add New Operation' value='Add New Operation' onClick={(evt, data)=>{onAdd()}} />\n                <Input icon='search' iconPosition='left' className='search' style={{marginTop: 3}} value={search} onChange={(evt)=>{onSearch({search: evt.target.value})}} />\n                <Dropdown.Menu scrolling>\n                  {_.map(operations, option => (\n                    <Dropdown.Item key={option.value} {...option} onClick={(evt, data)=>{onChange({id: data.value})}} />\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown.Menu>\n            </Dropdown>\n          :\n            <Dropdown\n              onClick={() => {onAdd()}}\n              open={false}\n              text={'Add New Operation'}\n              icon='filter'\n              floating\n              labeled\n              button\n              className='icon' />\n        }\n        <View style={{flex: 1}} />\n      </View>\n    </View>\n  )\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\nimport {View} from 'react-native'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport overmind from '../../../../overmind'\n\nexport default function MoreDropdown({style}) {\n  const { actions, state } = overmind();\n  const myActions = actions.view.TopBar;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  return (\n    <View style={style}>\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Menu\" onClick={handleClick}>\n        <MoreIcon  />\n      </IconButton>\n      <Menu\n        style={{top: 50, right: 5}}\n        open={Boolean(anchorEl)}\n        keepMounted\n        anchorEl={anchorEl}\n        onClose={handleClose}>\n          <MenuItem onClick={()=>{handleClose(); myActions.onAddField()}}>Add Field</MenuItem>\n          {\n            !state.view.FieldDetails.open ? null :\n            <MenuItem onClick={()=>{myActions.onEditField()}}>Edit Field</MenuItem>\n          }\n          <MenuItem onClick={()=>{handleClose(); myActions.onConnect()}}>Connect to OADA</MenuItem>\n          {/*<MenuItem onClick={()=>{handleClose(); myActions.onResetCache()}}>Reset Cache</MenuItem>*/}\n      </Menu>\n    </View>\n  );\n}\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListIcon from '@material-ui/icons/Menu';\n\nimport OperationDropdown from './OperationDropdown';\nimport MoreDropdown from './MoreDropdown';\n\nexport default function NormalToolbar({toggleTitle}) {\n  return (\n    <Toolbar>\n      {/*<IconButton edge=\"start\" style={{marginRight: 7}} color=\"inherit\" aria-label=\"Menu\" onClick={()=>{console.log('TODO Menu Pressed')}}>\n        <ListIcon />\n      </IconButton>*/}\n      <OperationDropdown style={{flex: 1}} />\n      {/*<Button color=\"inherit\">2019</Button>*/}\n      <MoreDropdown />\n    </Toolbar>\n  );\n}\n","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport {View} from 'react-native'\n\nimport DrawingToolbar from './DrawingToolbar';\nimport NormalToolbar from './NormalToolbar';\n\nimport overmind from '../../overmind'\n\nexport default function TopBar() {\n  const {state} = overmind();\n  const drawing = state.view.Map.BoundaryDrawing.drawing;\n  return (\n    <View style={{zIndex: 1201}}>\n      <AppBar position=\"static\">\n        {\n          drawing ? <DrawingToolbar /> : <NormalToolbar />\n        }\n      </AppBar>\n    </View>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Text, View } from 'react-native';\n\nexport default function TemporaryDrawer() {\n  return (\n    <Drawer open={false} variant=\"persistent\">\n      <View style={{height: 64}} />\n      <div\n        style={{width: 250}}\n        role=\"presentation\">\n        <List>\n          {['Inbox', 'Starred', 'Send email'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {View, Text} from 'react-native';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport _ from 'lodash';\n\nimport overmind from '../../overmind'\n\nexport default function FieldDetails() {\n  const {state, actions} = overmind();\n  const myState = state.view.FieldDetails;\n  const myActions = actions.view.FieldDetails;\n\n  let { open, field, farm } = myState;\n  const { onStatusChange, onEditFieldClick } = myActions;\n\n  if (!Boolean(field)) {\n    open = false;\n    field = {};\n  }\n  return (\n    <Drawer anchor=\"bottom\" open={open} variant=\"persistent\">\n      <View style={{paddingBottom: 20}}>\n        <View style={{flexDirection: 'column', alignItems: 'center'}}>\n          <View style={{justifyContent: 'left', flexDirection: 'row', alignItems: 'center', marginTop: 10}}>\n              <Text style={{fontWeight: 'bold', fontSize: 20}}>\n                {field.name}\n              </Text>\n              <Text style={{marginLeft: 7, fontSize: 18}}>\n                {`- ${Math.round(field.acres)} ac`}\n              </Text>\n          </View>\n          {\n            farm == null ? null :\n            <Text style={{fontSize: 15, color: '#999', marginTop: 2, marginBottom: 7}}>\n              {farm.name}\n            </Text>\n          }\n        </View>\n        <View style={{justifyContent: 'center', flexDirection: 'row'}}>\n          <FormControl component=\"fieldset\">\n            <FormGroup aria-label=\"position\" name=\"position\" row>\n              <FormControlLabel\n                value=\"bottom\"\n                control={<Checkbox color=\"primary\" checked={(field.status == \"planned\") || false} onChange={()=>{onStatusChange({status: 'planned'})}} />}\n                label=\"Planned\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"bottom\"\n                control={<Checkbox color=\"primary\" checked={(field.status == \"started\") || false} onChange={()=>{onStatusChange({status: 'started'})}} />}\n                label=\"Started\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"bottom\"\n                control={<Checkbox color=\"primary\" checked={(field.status == \"done\") || false} onChange={()=>{onStatusChange({status: 'done'})}} />}\n                label=\"Done\"\n                labelPlacement=\"bottom\"\n              />\n            </FormGroup>\n          </FormControl>\n        </View>\n      </View>\n    </Drawer>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresPlanned({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#c50003', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.planned} ac (${acresStatus.plannedPercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresStarted({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#eeb705', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5, marginRight: 7, marginLeft: 7}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.started} ac (${acresStatus.startedPercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresDone({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#5bb25f', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.done} ac (${acresStatus.donePercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React, { Component } from 'react';\nimport { Text, View } from 'react-native';\n\nimport AcresPlanned from './AcresPlanned'\nimport AcresStarted from './AcresStarted'\nimport AcresDone from './AcresDone'\n\nimport overmind from '../../overmind'\n\nexport default function AcresStatus() {\n  const {state} = overmind();\n  const acresStatus = state.app.acresStatus;\n  const selectedOperationId = state.view.TopBar.OperationDropdown.selectedOperationId;\n  if (!selectedOperationId) return null;\n  return (\n    //z-index of leaflet map is 400\n    <View style={{position: \"absolute\", display: \"flex\", flexDirection: 'row', justifyContent: \"center\", alignItems: \"center\", top: 68, zIndex: 401, width: '100vw'}}>\n      <AcresPlanned acresStatus={acresStatus} />\n      <AcresStarted acresStatus={acresStatus} />\n      <AcresDone acresStatus={acresStatus} />\n    </View>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input, Dropdown, Icon } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function SaveField() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.SaveField;\n  const myActions = actions.view.Modals.SaveField;\n\n  const open = myState.open;\n  const name = myState.name;\n  const onNameChange = myActions.onNameChange;\n  const onCancel = myActions.onCancel;\n  const onSave = myActions.onSave;\n  const [farmOpen, setFarmOpen] = React.useState(false);\n\n  const farm = myState.farm || {};\n  const farmOptions = myState.farms;\n\n  return (\n    <Modal open={myState.open} size='tiny'>\n      <Modal.Header>\n        {(state.view.Map.editingField) ? 'Edit Field' : 'New Field'}\n      </Modal.Header>\n      <Modal.Content>\n        <View style={{flexDirection: 'column', zIndex: 1}}>\n          <Text style={{marginBottom: 7}}>Field Name:</Text>\n          <Input placeholder='Back 40' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n          <Text style={{marginBottom: 7, marginTop: 15}}>Farm:</Text>\n          <Dropdown\n            trigger={\n              <View style={{paddingLeft: 13, paddingRight: 7, border: '1px solid rgba(34,36,38,.15)', borderRadius: '.28571429rem', height: 38, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                <Text style={{color: (farm.name ? 'rgba(0,0,0,.87)' : 'rgba(0,0,0,.25)')}}>\n                  {farm.name || 'Select a farm'}\n                </Text>\n                <Icon name='caret down' style={{paddingBottom: 17}}/>\n              </View>\n            }\n            icon={null}\n            onOpen={() => {setFarmOpen(true)}}\n            onBlur={() => {setFarmOpen(false)}}\n            open={farmOpen}>\n            <Dropdown.Menu style={{overflow: 'hidden', maxHeight: '50vh'}}>\n              <Dropdown.Item style={{textAlign: 'center'}} text='Add New Farm' value='Add New Farm' onClick={(evt, data)=>{myActions.onFarmAdd(); setFarmOpen(false);}} />\n              <Input icon='search' iconPosition='left' className='search' value={myState.farmSearch} onChange={(evt)=>{myActions.onFarmSearchChange(evt.target.value)}} />\n              <Dropdown.Menu scrolling>\n                {farmOptions.map((option) => (\n                  <Dropdown.Item key={option.value} {...option} onClick={() => {myActions.onFarmChange({id: option.value}); setFarmOpen(false);}} />\n                ))}\n              </Dropdown.Menu>\n            </Dropdown.Menu>\n          </Dropdown>\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function OADADomain() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.OADADomain;\n  const myActions = actions.view.Modals.OADADomain;\n\n  const { open, domain } = myState;\n  const { onDomainChange, onCancel, onConnect } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>Connect to OADA Server</Modal.Header>\n      <Modal.Content>\n        <Text>Domain:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Input style={{flex: 1, marginTop: 7}} placeholder='https://oada.openatk.com' value={domain} onChange={(evt) => {onDomainChange({domain: evt.target.value})}} />\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Connect' onClick={() => onConnect({})} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function NewOperation() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.NewOperation;\n  const myActions = actions.view.Modals.NewOperation;\n\n  const { open, name } = myState;\n  const { onNameChange, onCancel, onSave } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>New Operation</Modal.Header>\n      <Modal.Content>\n        <Text>Name:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Input style={{flex: 1, marginTop: 7}} placeholder='Corn Planting' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function NewFarm() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.NewFarm;\n  const myActions = actions.view.Modals.NewFarm;\n\n  const { open, name } = myState;\n  const { onNameChange, onCancel, onSave } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>New Farm</Modal.Header>\n      <Modal.Content>\n        <Text>Name:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Input style={{flex: 1, marginTop: 7}} placeholder='Bowman Farms' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Map from './Map'\nimport TopBar from './TopBar'\nimport FieldList from './FieldList'\nimport FieldDetails from './FieldDetails'\nimport AcresStatus from './AcresStatus'\n\nimport ModalSaveField from './Modals/SaveField';\nimport ModalOADADomain from './Modals/OADADomain';\nimport ModalNewOperation from './Modals/NewOperation';\nimport ModalNewFarm from './Modals/NewFarm';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <AcresStatus />\n      <Map />\n      <FieldList />\n      <FieldDetails />\n      <ModalSaveField />\n      <ModalOADADomain />\n      <ModalNewOperation />\n      <ModalNewFarm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nimport App from './view/App'\n\nimport { createOvermind } from \"overmind\";\nimport { Provider } from \"overmind-react\";\nimport { config } from './overmind'\n\nconst app = createOvermind(config,\n{\n  devtools: true,\n});\n\nReactDOM.render(\n  <Provider value={app}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}