{"version":3,"sources":["serviceWorker.js","config/index.js","overmind/view/Login/index.js","overmind/view/Login/state.js","overmind/view/Login/actions.js","overmind/view/FieldDetails/state.js","overmind/app/OADAManager/tree.js","overmind/view/FieldDetails/index.js","overmind/view/FieldDetails/actions.js","overmind/view/FieldList/index.js","overmind/view/FieldList/state.js","overmind/view/FieldList/actions.js","overmind/view/Map/state.js","overmind/view/Map/actions.js","overmind/view/Map/BoundaryDrawing/index.js","overmind/view/Map/BoundaryDrawing/state.js","overmind/view/Map/BoundaryDrawing/actions.js","overmind/view/Map/index.js","overmind/view/Modals/state.js","overmind/view/Modals/actions.js","overmind/view/Modals/SaveField/actions.js","overmind/view/Modals/SaveField/index.js","overmind/view/Modals/SaveField/state.js","overmind/view/Modals/NewOperation/actions.js","overmind/view/Modals/NewOperation/index.js","overmind/view/Modals/NewOperation/state.js","overmind/view/Modals/NewFarm/actions.js","overmind/view/Modals/NewFarm/index.js","overmind/view/Modals/NewFarm/state.js","overmind/view/Modals/index.js","overmind/view/TopBar/actions.js","overmind/view/TopBar/OperationDropdown/index.js","overmind/view/TopBar/OperationDropdown/state.js","overmind/view/TopBar/OperationDropdown/actions.js","overmind/view/TopBar/index.js","overmind/view/TopBar/state.js","overmind/view/index.js","overmind/view/state.js","overmind/view/actions.js","overmind/app/test/testFields.js","overmind/app/test/testFarms.js","overmind/app/state.js","overmind/app/actions.js","overmind/app/OADAManager/state.js","overmind/app/OADAManager/actions.js","overmind/app/OADAManager/index.js","overmind/app/index.js","overmind/index.js","view/Login/index.js","view/Map/BoundaryDrawing/index.js","view/Map/Fields/index.js","view/Map/index.js","view/TopBar/DrawingToolbar/index.js","view/TopBar/NormalToolbar/OperationDropdown/index.js","view/TopBar/NormalToolbar/MoreDropdown/index.js","view/TopBar/NormalToolbar/index.js","view/TopBar/index.js","view/FieldList/index.js","view/FieldDetails/index.js","view/AcresStatus/AcresPlanned/index.js","view/AcresStatus/AcresStarted/index.js","view/AcresStatus/AcresDone/index.js","view/AcresStatus/index.js","view/Modals/SaveField.js","view/Modals/OADADomain.js","view/Modals/NewOperation.js","view/Modals/NewFarm.js","view/App.js","index.js","../../../oada-cache-overmind/index.js","view/logo.svg","../../../oada-cache-overmind/state.js","../../../oada-cache-overmind/actions.js","../../../oada-cache-overmind/effects.js"],"names":["Boolean","window","location","hostname","match","METADATA","REDIRECT","OPTIONS","redirect","metadata","scope","SCOPE","oadaDomain","state","domain","config","actions","onInitialize","localStorage","token","view","Login","login","myState","loading","app","OADAManager","connected","loggedIn","logout","domainChange","data","value","viewDemo","open","fieldId","_","get","field","selectedFieldId","operation","status","currentConnection","acres","geojsonArea","geometry","boundary","merge","farm","farmId","id","showAddOperationButton","isEmpty","bookmarks","_type","_rev","fields","farms","seasons","operations","_state","FieldDetails","close","changeOADAFieldStatus","operationId","clone","newStatus","requests","type","path","oada","delete","connection_id","tree","_id","put","changeLocalFieldStatus","unset","set","onStatusChange","myActions","onAddNewOperationClick","TopBar","OperationDropdown","onAdd","selectedField","fieldStyles","editingField","bounds","fieldsToRender","chain","mapValues","styledField","style","color","fillColor","omitBy","v","k","styleField","highlight","weight","unhighlight","unselectField","Promise","delay","onFieldClick","onMapClick","props","BoundaryDrawing","zoomBounds","compact","map","f","geo","featureCollection","GeoJSON","parse","BBox","drawing","addPointToBoundary","Map","uuid","lat","lng","updateBoundaryPoint","pipe","debounce","mutate","latlng","onMarkerMove","onStartDrawing","onStopDrawing","_actions","OADADomain","Modals","onConnectClick","onDomainChange","onConnect","onDomainChanged","onCancel","convertToGEOJSON","points","coordinates","p","length","push","getChanges","newBoundary","farm_id","seasonFarm_id","SaveField","seasonField","getSeasonField","newName","name","seasonFieldChanges","fieldChanges","isEqual","cloneDeep","saveChangesToLocalData","editingFieldId","fieldPath","seasonFieldPath","saveChangesToOADA","context","a","console","log","createField","addFieldToLocalData","year","addFieldToOADA","farmSearch","search","seasonFarms","toLowerCase","key","text","saveField","onSave","onNameChange","onFarmSearchChange","onFarmChange","onFarmAdd","NewFarm","callbackAction","onFarmAddComplete","addOperationToLocalData","addOperationToOADA","ret","substr","NewOperation","saveOperation","addFarmToLocalData","addFarmToOADA","saveFarm","action","onAddField","onSaveField","onCancelField","onEditField","currentField","coors","pop","forEach","onResetCache","resetCache","onLogout","selected","list","label","empty","circular","o","startsWith","selectedOperationId","selectedId","keys","selectedOperation","onChange","onOpenChange","onSearch","FieldList","acresStatus","operationFields","seasonFields","planned","started","done","fieldOperation","area","total","Math","round","plannedPercentage","startedPercentage","donePercentage","currentOADA","oadaOrgData","oadaSeasonFarmsIdBy_id","isNull","mapKeys","oadaSeasonFarms_idByFarm_id","localOrgData","localData","abc123","organizations","testFields","testFarms","getSeasonFarm","user","getAccessToken","promisify","oadaIdClient","getToken","replace","res","access_token","connect","effects","options","cache","then","response","error","connectionId","disconnect","getUserInfo","fetchAndWatch","watchRequests","watch","onFieldChanged","onSeasonsChanged","rewatchRequests","responses","initSeasonFields","fieldsChanged","obj","changeSeasonFields","initSeasonFarms","changed","changeSeasonFarms","theSeasonFields","fieldChange","seasonFarmId","change","seasonFarm","deleteSeasonFields","deleted","deleteSeasonFarms","changeType","wasDelete","fieldsDeleted","farmsChanged","farmsDeleted","warn","oadaCacheOvermind","namespaced","createHook","overmind","css","height","src","alt","Form","onSubmit","Input","placeholder","evt","Button","marginTop","primary","disabled","onClick","LayerGroup","Polygon","positions","Marker","position","draggable","onMove","oldLatLng","Fields","bubblingMouseEvents","center","zoom","zoomControl","TileLayer","url","attribution","DrawingToolbar","Toolbar","View","flex","OperationsDropdown","flexDirection","Dropdown","onOpen","onBlur","icon","floating","labeled","button","className","Menu","top","Item","textAlign","iconPosition","target","scrolling","option","MoreDropdown","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","aria-label","event","currentTarget","right","keepMounted","onClose","MenuItem","NormalToolbar","toggleTitle","zIndex","AppBar","TemporaryDrawer","Drawer","variant","width","role","List","index","ListItem","ListItemIcon","ListItemText","Divider","onEditFieldClick","anchor","paddingBottom","alignItems","justifyContent","Text","fontWeight","fontSize","marginLeft","marginBottom","FormControl","component","FormGroup","row","FormControlLabel","control","Checkbox","checked","labelPlacement","AcresPlanned","backgroundColor","paddingLeft","paddingRight","paddingTop","borderRadius","textShadowColor","textShadowOffset","textShadowRadius","AcresStarted","marginRight","AcresDone","AcresStatus","display","farmOpen","setFarmOpen","farmOptions","Modal","size","Header","Content","autoFocus","trigger","border","Icon","overflow","maxHeight","Actions","negative","positive","labelPosition","content","App","createOvermind","devtools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Object","defineProperty","exports","default","namespace","_effects","_interopRequireDefault","require","__esModule","module","connections","_namespace","ns","domainToConnectionId","websocket","isAuthenticated","catch","message","handleWatch","nullPath","split","shift","join","currentState","_lodash","concat","_oldState","body","deletePath","oldState","_deletePath","Error","concurrent","_bluebird","mapSeries","request","i","complete","_statePath","conn","watches","payload","headers","_responseData","arguments","source","ownKeys","_defineProperty","getOwnPropertyDescriptors","defineProperties","getOwnPropertyDescriptor","_objectSpread","newState","post","unwatch","_url","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","enumerable","apply","configurable","writable","domainUrl","_oadaCache","_default","args","resolve","func","connection","undefined"],"mappings":"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","file":"static/js/main.ebe3e1a9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SCOPE = 'oada.yield:all';\nconst OPENATK_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY';\nconst LOCALHOST_VIP_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\nconst REDIRECT_LOCALHOST = 'http://localhost:8000/oauth2/redirect.html';\nconst REDIRECT_OPENATK = 'http://openatk.com/FieldWorkApp/oauth2/redirect.html';\n\nlet METADATA;\nlet REDIRECT;\nlet oadaDomain = '';\nif (process.env.NODE_ENV !== 'production') {\n  console.log('NODE_ENV = ', process.env.NODE_ENV);\n  METADATA = LOCALHOST_VIP_METADATA;\n  REDIRECT = REDIRECT_LOCALHOST;\n  oadaDomain = 'https://localhost';\n} else {\n  METADATA = OPENATK_METADATA;\n  REDIRECT = REDIRECT_OPENATK;\n}\n\nlet OPTIONS = {\n    redirect: REDIRECT,\n    metadata: METADATA,\n    scope: SCOPE\n};\n\nexport default {\n  OPTIONS,\n  REDIRECT,\n  METADATA,\n  SCOPE,\n  oadaDomain\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import config from '../../../config'\nexport default {\n  domain: config.oadaDomain\n}\n","export default {\n  onInitialize({ state, actions }) {\n    const domain = window.localStorage['oada:domain'];\n    const token = window.localStorage['oada:token'];\n    if (domain) {\n      state.view.Login.domain = domain\n    }\n    if (domain && token) {\n      //Auto login\n      actions.view.Login.login({token});\n    }\n  },\n  async login({ state, actions }, {token}) {\n    const myState = state.view.Login;\n    let domain = myState.domain;\n    myState.loading = true;\n    domain = domain.match(/^http/) ? domain : 'https://'+myState.domain;\n    await actions.app.OADAManager.login({domain, token});\n    myState.loading = false;\n    if (state.app.OADAManager.connected) {\n      myState.loggedIn = true;\n      //Save domain and token\n      window.localStorage['oada:domain'] = myState.domain;\n      window.localStorage['oada:token'] = state.app.OADAManager.token;\n    }\n  },\n  async logout({ state, actions }) {\n    const myState = state.view.Login;\n    if (state.app.OADAManager.connected) {\n      await actions.app.OADAManager.logout();\n      delete window.localStorage['oada:domain']\n      delete window.localStorage['oada:token']\n    }\n    myState.loggedIn = false;\n  },\n  domainChange({ state }, data) {\n    const myState = state.view.Login;\n    myState.domain = data.value;\n  },\n  viewDemo({ state }, data) {\n    const myState = state.view.Login;\n    myState.loggedIn = true;\n  }\n}\n","import _ from 'lodash';\nimport geojsonArea from '@mapbox/geojson-area';\n\nexport default {\n  open: false,\n  fieldId: ({}, state) => {\n    return _.get(state, `view.Map.selectedField`);\n  },\n  field: ({fieldId: selectedFieldId}, state) => {\n    const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`);\n    if (selectedFieldId == null) return null;\n    const status = _.get(operation, `fields.${selectedFieldId}.status`, null);\n    let field = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      field = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.fields.${selectedFieldId}`); //TODO year\n    } else {\n      field = _.get(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}`); //TODO year, organization\n    }\n    if (field == null) return null;\n    const acres = geojsonArea.geometry(field.boundary) * 0.000247105 //Meters to acres;\n    return _.merge({}, field, {status, acres});\n  },\n  farm: ({field}, state) => {\n    //Get farm for selected field\n    let farm = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      if (_.get(field, 'farm._id')) {\n        const farmId = _.get(state, `app.oadaSeasonFarmsIdBy_id.${_.get(field, 'farm._id')}.id`)\n        farm = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.farms.${farmId}`); //TODO year\n      }\n    } else {\n      if (_.get(field, 'farm.id')) {\n        farm = _.get(state, `app.localData.abc123.seasons.2019.farms.${field.farm.id}`); //TODO year, organization\n      }\n    }\n    return farm;\n  },\n  showAddOperationButton: ({}, state) => {\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      return _.isEmpty(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations`)); //TODO year\n    } else {\n      return _.isEmpty(_.get(state, `app.localData.abc123.seasons.2019.operations`)); //TODO year\n    }\n  }\n}\n","export default {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    fields: {\n      _type: \"application/vnd.oada.fields.1+json\",\n      _rev: 0,\n      fields: {\n        \"*\": {\n          _type: \"application/vnd.oada.field.1+json\",\n          _rev: 0,\n          farm: {\n            _type: \"application/vnd.oada.farm.1+json\",\n          }\n        }\n      },\n      farms: {\n        \"*\": {\n          _type: \"application/vnd.oada.farm.1+json\",\n          _rev: 0\n        }\n      }\n    },\n    seasons: {\n      _type: \"application/vnd.oada.seasons.1+json\",\n      _rev: 0,\n      \"*\": {\n        _type: \"application/vnd.oada.season.1+json\",\n        _rev: 0,\n        fields: {\n          \"*\": {\n            _type: \"application/vnd.oada.field.1+json\",\n            _rev: 0,\n            operations: {\n              \"*\": {\n                _type: \"application/vnd.oada.operation.1+json\",\n                _rev: 0\n              }\n            }\n          }\n        },\n        farms: {\n          \"*\": {\n            _type: \"application/vnd.oada.farm.1+json\",\n            _rev: 0\n          }\n        },\n        operations: {\n          \"*\": {\n            _type: \"application/vnd.oada.operation.1+json\",\n            _rev: 0\n          }\n        }\n      }\n    }\n  }\n};\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\nimport uuid from 'uuid/v1';\nimport tree from '../../app/OADAManager/tree.js';\n\nexport default {\n  open({state}) {\n    const myState = state.view.FieldDetails;\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.FieldDetails;\n    myState.open = false;\n  },\n  changeOADAFieldStatus({state, actions}, status) {\n    const selectedFieldId = _.get(state, `view.Map.selectedField`);\n    const operationId = _.get(state, `view.TopBar.OperationDropdown.selectedOperationId`)\n\n    let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n    let field = _.clone(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`)) || {}; //TODO year, organization\n    let newStatus = status;\n    if (field.status == status) newStatus = null; //Unchecking\n    field.status = newStatus;\n    if (field.status == null) {\n      let requests = [\n        {  //Remove field to operation\n          type: 'application/vnd.oada.operation.1+json', //TODO oada.put should handle this\n          path: `/bookmarks/seasons/2019/operations/${operationId}/fields/${selectedFieldId}` //TODO year\n        },\n        { //Remove operation to field in season's field's operation list\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${selectedFieldId}/operations/${operationId}` //TODO year\n        }\n      ];\n      return actions.app.oada.delete({requests, connection_id: currentConnection});\n    } else {\n      const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`)\n      let requests = [\n        {  //Add field to operation\n          tree,\n          data: field,\n          type: 'application/vnd.oada.operation.1+json', //TODO oada.put should handle this\n          path: `/bookmarks/seasons/2019/operations/${operationId}/fields/${selectedFieldId}` //TODO year\n        },\n        { //Add operation to field in season's field's operation list\n          tree,\n          data: {_id: operation._id}, //OADA _id\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${selectedFieldId}/operations/${operationId}` //TODO year\n        }\n      ];\n      return actions.app.oada.put({requests, connection_id: currentConnection});\n    }\n  },\n  changeLocalFieldStatus({state}, status) {\n    const myState = state.view.FieldDetails;\n    const selectedFieldId = _.get(state, `view.Map.selectedField`);\n    const operationId = _.get(state, `view.TopBar.OperationDropdown.selectedOperationId`)\n    var field = _.clone(_.get(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`)) || {}; //TODO year, organization\n    var newStatus = status;\n    if (field.status == status) newStatus = null; //Unchecking\n    field.status = newStatus;\n    if (field.status == null) {\n      //Remove field from operation\n      _.unset(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`) //TODO year, organization\n      //Remove operation from season's field's operation list\n      _.unset(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations.${operationId}`) //TODO year, organization\n    } else {\n      //Add field to operation\n      _.set(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`, field) //TODO year, organization\n      //Create operations key on season's field list if doesn't exist\n      if (_.get(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations`) == null) _.set(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations`, {}) //TODO year, organization\n      //Add operation to field in season's field's operation list\n      _.set(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations.${operationId}`, {}) //TODO year, organization\n    }\n  },\n  onStatusChange({state, actions}, {status}) {\n    const myActions = actions.view.FieldDetails;\n    if (state.app.OADAManager.connected) {\n      myActions.changeOADAFieldStatus(status)\n    } else {\n      myActions.changeLocalFieldStatus(status)\n    }\n  },\n  onAddNewOperationClick({actions}) {\n    actions.view.TopBar.OperationDropdown.onAdd();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  selectedField: null\n}\n","export default {\n  \n}\n","import _ from 'lodash';\n\nexport default {\n  fieldStyles: {},\n  selectedField: null,\n  editingField: null,\n  bounds: [\n    [\n      41.44053877385792,\n      -84.97886180877687\n    ],\n    [\n      41.46330393671208,\n      -84.96770381927492\n    ]\n  ],\n  fields: ({}, state) => {\n    const fieldStyles = _.get(state, `view.Map.fieldStyles`)\n    const editingField = _.get(state, `view.Map.editingField`)\n    const drawingBoundary = _.get(state, `view.Map.BoundaryDrawing.drawing`)\n    const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`)\n    const fieldsToRender = _.get(state, `app.seasonFields`);\n    return _.chain(fieldsToRender).mapValues((field, id) => {\n      if (editingField == id) return null; //Don't show this field.\n      var styledField = _.clone(field);\n      //Add any styles\n      if (fieldStyles[id] != null) styledField.style = fieldStyles[id];\n      //Fill based on status of current operation\n      if (operation) {\n        var color = \"white\"\n        if (operation.fields && operation.fields[id]) {\n          if (operation.fields[id].status == 'planned') color = 'red'\n          if (operation.fields[id].status == 'started') color = 'orange'\n          if (operation.fields[id].status == 'done') color = 'green'\n        }\n        styledField.style = _.merge({}, styledField.style, {fillColor: color, color})\n      }\n      return styledField;\n    }).omitBy((v, k) => {\n      if (v == null) return true;\n    }).value();\n  }\n}\n","import _ from 'lodash';\nimport Promise from 'bluebird';\nimport BBox from '@turf/bbox';\nimport GeoJSON from 'geojson';\n\nexport default {\n  styleField: {\n    highlight({state}, fieldId) {\n      if (fieldId) {\n        const myState = _.get(state, 'view.Map');\n        _.set(myState, `fieldStyles.${fieldId}`, {weight: 5})\n      }\n    },\n    unhighlight({state}, fieldId) {\n      if (fieldId) {\n        const myState = _.get(state, 'view.Map');\n        _.set(myState, `fieldStyles.${fieldId}`, {weight: 3})\n      }\n    }\n  },\n  async unselectField({state, actions}) {\n    const myActions = _.get(actions, 'view.Map');\n    const myState = _.get(state, 'view.Map');\n    if (myState.selectedField) {\n      actions.view.FieldDetails.close();\n      myActions.styleField.unhighlight(myState.selectedField);\n      await Promise.delay(200)\n      myState.selectedField = null;\n    }\n  },\n  onFieldClick({state, actions}, {id}) {\n    const myActions = _.get(actions, 'view.Map');\n    const myState = _.get(state, 'view.Map');\n    const drawing = _.get(myState, `BoundaryDrawing.drawing`);\n    if (!drawing) {\n      myActions.styleField.unhighlight(myState.selectedField);\n      myState.selectedField = id;\n      myActions.styleField.highlight(id);\n      actions.view.FieldDetails.open();\n    }\n  },\n  onMapClick({actions}, props) {\n    const myActions = _.get(actions, 'view.Map');\n    myActions.unselectField()\n    //Pass click to boundary drawing\n    myActions.BoundaryDrawing.onMapClick(props)\n  },\n  async zoomBounds({state}, props) {\n    const myState = _.get(state, 'view.Map');\n    const fields = _.compact(_.map(myState.fields, (f) => {\n      if (!f.boundary) return null; //Don't include fields without boundaries\n      return {geo: f.boundary}\n    }));\n    const featureCollection = GeoJSON.parse(fields, {GeoJSON: 'geo'})\n    const bounds = BBox(featureCollection)\n    myState.bounds = [[bounds[1], bounds[0]], [bounds[3], bounds[2]]];\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  boundary: {},\n  drawing: false\n}\n","import _ from 'lodash';\nimport {pipe, debounce, mutate} from 'overmind';\nimport uuid from 'uuid/v1';\n\nexport default {\n  addPointToBoundary({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    _.set(myState, `boundary.${uuid()}`, [props.lat, props.lng]);\n  },\n  updateBoundaryPoint: pipe(debounce(10), mutate(({state}, props) => {\n    const myState = state.view.Map.BoundaryDrawing;\n    _.set(myState, `boundary.${props.id}`, [props.latlng.lat, props.latlng.lng]);\n  })),\n  onMapClick({state, actions}, {lat, lng}) {\n    const myState = state.view.Map.BoundaryDrawing;\n    const myActions = actions.view.Map.BoundaryDrawing;\n    if (myState.drawing) {\n      myActions.addPointToBoundary({lat, lng});\n    }\n  },\n  onMarkerMove({actions}, props) {\n    const myActions = actions.view.Map.BoundaryDrawing;\n    myActions.updateBoundaryPoint(props);\n  },\n  onStartDrawing({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    myState.boundary = (props || {}).boundary || {};\n    myState.drawing = true;\n  },\n  onStopDrawing({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    myState.drawing = false;\n    myState.boundary = {};\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as BoundaryDrawing from './BoundaryDrawing'\n\nexport const state = {\n  BoundaryDrawing: BoundaryDrawing.state,\n  ..._state\n};\nexport const actions = {\n  BoundaryDrawing: BoundaryDrawing.actions,\n  ..._actions\n}\n","import config from '../../../config'\nexport default {\n  OADADomain: {\n    open: false,\n    domain: config.oadaDomain\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../app/OADAManager/tree\";\n\nexport default {\n  OADADomain: {\n    open({state}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.open = true;\n    },\n    close({state}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.open = false;\n    },\n    onConnectClick({actions}) {\n      const myActions = actions.view.Modals.OADADomain;\n      myActions.open();\n    },\n    onDomainChange({state}, {domain}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.domain = domain;\n    },\n    async onConnect({actions, state}) {\n      const myState = state.view.Modals.OADADomain;\n      const myActions = actions.view.Modals.OADADomain;\n      const {domain} = myState;\n      myState.loading = true;\n      await actions.app.OADAManager.onDomainChanged({domain});\n      myState.loading = false;\n      myActions.close()\n    },\n    onCancel({actions}) {\n      const myActions = actions.view.Modals.OADADomain;\n      myActions.close();\n    }\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\n\nfunction convertToGEOJSON(points) {\n  var boundary = {\n    type: \"Polygon\",\n    coordinates: [_.map(points, (p) => {return [p[1], p[0]]})] //Flip lat/lng and add array around\n  }\n  //Add first point again\n  if (boundary.coordinates && boundary.coordinates[0] && boundary.coordinates[0].length > 0) {\n    boundary.coordinates[0].push(boundary.coordinates[0][0]);\n  }\n  return boundary;\n}\nfunction getChanges({state, actions}, {fieldId, newBoundary, farmId, farm_id, seasonFarm_id}) {\n  const myState = state.view.Modals.SaveField;\n  //See if name or boundary has changed\n  let seasonField = actions.app.getSeasonField(fieldId);\n  let newName = myState.name;\n  var seasonFieldChanges = {};\n  var fieldChanges = {};\n  //Get changes the effect both\n  if (newName != seasonField.name) seasonFieldChanges.name = newName;\n  if (_.isEqual(newBoundary, seasonField.boundary) == false) seasonFieldChanges.boundary = newBoundary;\n\n  fieldChanges = _.cloneDeep(seasonFieldChanges)\n  //See if farm has changed\n  if (seasonFarm_id) {\n    //Connected to oada\n    if (!seasonField.farm || seasonField.farm._id != seasonFarm_id) {\n      seasonFieldChanges.farm = {_id: seasonFarm_id};\n      //TODO this isn't right, we shouldn't be adding a farm in the function that calls this if it isn't our current year\n      fieldChanges.farm = {_id: farm_id};\n    }\n  } else {\n    //Local\n    if (!seasonField.farm || seasonField.farm.id != farmId) {\n      seasonFieldChanges.farm = {id: farmId};\n      fieldChanges.farm = {id: farmId};\n    }\n  }\n  //TODO only change field if is current year\n  return {fieldChanges, seasonFieldChanges};\n}\nfunction saveChangesToLocalData({state}, editingFieldId, fieldChanges, seasonFieldChanges) {\n  if (_.isEmpty(fieldChanges) && _.isEmpty(seasonFieldChanges)) return;\n  const fieldPath = `app.localData.abc123.fields.fields.${editingFieldId}`; //TODO organization\n  _.set(state, fieldPath, _.merge({}, _.get(state, fieldPath), fieldChanges));\n  const seasonFieldPath = `app.localData.abc123.seasons.2019.fields.${editingFieldId}` //TODO year, organization\n  _.set(state, seasonFieldPath, _.merge({}, _.get(state, seasonFieldPath), seasonFieldChanges));\n}\nasync function saveChangesToOADA(context, editingFieldId, fieldChanges, seasonFieldChanges) {\n  const { state, actions } = context;\n  if (_.isEmpty(fieldChanges) && _.isEmpty(seasonFieldChanges)) return;\n  //Add to OADA\n  let requests = [];\n  if (_.isEmpty(fieldChanges) == false) {\n    requests.push({\n      tree,\n      data: fieldChanges,\n      path: `/bookmarks/fields/fields/${editingFieldId}`\n    })\n  }\n  if (_.isEmpty(seasonFieldChanges) == false) {\n    requests.push({\n      tree,\n      data: seasonFieldChanges,\n      path: `/bookmarks/seasons/2019/fields/${editingFieldId}` //TODO year\n    })\n  }\n  console.log('fieldChanges', fieldChanges);\n  console.log('seasonFieldChanges', seasonFieldChanges);\n  const connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  await actions.app.oada.put({requests, connection_id})\n}\n\nfunction createField(context, {boundary, farmId, farm_id}) {\n  const { state } = context;\n  const myState = state.view.Modals.SaveField;\n  var field = {\n    name: myState.name,\n    boundary: boundary,\n    farm: (farm_id) ?\n      {\n        _id: farm_id //OADA farm resource id\n      }\n      :\n      {\n        id: farmId\n      }\n  }\n  return field\n}\nfunction addFieldToLocalData(context, {field}) {\n  const { state } = context;\n  const id = uuid();\n  _.set(state, `app.localData.abc123.fields.fields.${id}`, field); //TODO organization\n  _.set(state, `app.localData.abc123.seasons.2019.fields.${id}`, {...field, operations: {}, year: '2019'}); //TODO year, organization\n  return id;\n}\nasync function addFieldToOADA(context, {field, seasonField}) {\n  const { state, actions } = context;\n  const id = uuid();\n  //Add to OADA\n  let requests = [];\n  if (field) {\n    requests.push({\n      tree,\n      data: field,\n      path: `/bookmarks/fields/fields/${id}`\n    })\n  }\n  if (seasonField) {\n    requests.push({\n      tree,\n      data: {...seasonField, operations: {}, year: '2019'}, //TODO year\n      path: `/bookmarks/seasons/2019/fields/${id}` //TODO year\n    })\n  }\n  let connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  await actions.app.oada.put({requests, connection_id})\n}\n\nexport default {\n  open({state, actions}) {\n    const myState = state.view.Modals.SaveField;\n    const editingField = _.get(state, `view.Map.editingField`);\n    if (editingField == null) {\n      myState.name = \"\";\n    } else {\n      let field = actions.app.getSeasonField(editingField);\n      //Populate the name in the modal popup\n      myState.name = field.name;\n      if (state.app.OADAManager.connected) {\n        //Get season farm id by oada id\n        const farmId = _.get(state, `app.oadaSeasonFarmsIdBy_id.${_.get(field, 'farm._id')}.id`)\n        myState.farmId = farmId;\n      } else {\n        myState.farmId = _.get(field, 'farm.id');\n      }\n    }\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.Modals.SaveField;\n    myState.open = false;\n  },\n  async saveField(context) {\n    const {state} = context;\n    const myState = state.view.Modals.SaveField;\n    //Convert the field to geojson\n    const points = _.get(state, `view.Map.BoundaryDrawing.boundary`)\n    const boundary = convertToGEOJSON(points);\n\n    //Create farm or get existing farms id (cannot update an existing farm here)\n    let farmId = myState.farmId;\n    let farm_id = null;\n    let seasonFarm_id = null;\n    let farm = myState.farm;\n    if (farm) {\n      if (state.app.OADAManager.connected) {\n        //Get farm_id\n        farm_id = _.get(state, `app.oadaOrgData.fields.farms.${farmId}._id`)\n        //Get seasonFarm_id from farmId\n        seasonFarm_id = _.get(state, `app.seasonFarms.${farmId}._id`)\n      }\n    }\n    //Update or create field\n    let editingFieldId = _.get(state, `view.Map.editingField`);\n    if (editingFieldId) {\n      //We are editing a field find the changes, if any\n      const {fieldChanges, seasonFieldChanges} = getChanges(context, {fieldId: editingFieldId, newBoundary: boundary, farmId, farm_id, seasonFarm_id})\n      if (state.app.OADAManager.connected) {\n        saveChangesToOADA(context, editingFieldId, fieldChanges, seasonFieldChanges)\n      } else {\n        saveChangesToLocalData(context, editingFieldId, fieldChanges, seasonFieldChanges)\n      }\n    } else {\n      //TODO only add field if is current year, otherwise just seasonfield\n      if (state.app.OADAManager.connected) {\n        const field = await createField(context, {boundary, farm_id});\n        const seasonField = await createField(context, {boundary, farm_id: seasonFarm_id});\n        await addFieldToOADA(context, {field, seasonField})\n      } else {\n        const field = await createField(context, {boundary, farm, farmId: farmId})\n        await addFieldToLocalData(context, {field})\n      }\n    }\n  },\n  onSave({actions, state}) {\n    const myActions = actions.view.Modals.SaveField;\n    myActions.saveField();\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n    state.view.Map.editingField = null;\n    myActions.close();\n  },\n  onCancel({actions, state}) {\n    const myActions = actions.view.Modals.SaveField;\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n    state.view.Map.editingField = null;\n    myActions.close();\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.SaveField;\n    myState.name = name;\n  },\n  onFarmSearchChange({state}, value) {\n    const myState = state.view.Modals.SaveField;\n    myState.farmSearch = value;\n  },\n  onFarmChange({state}, {id}) {\n    const myState = state.view.Modals.SaveField;\n    myState.farmId = id;\n  },\n  onFarmAdd({actions}) {\n    actions.view.Modals.NewFarm.open({callbackAction: 'view.Modals.SaveField.onFarmAddComplete'});\n  },\n  onFarmAddComplete({state}, {id}) {\n    const myState = state.view.Modals.SaveField;\n    //Update farmId\n    myState.farmId = id;\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\nexport default {\n  open: false,\n  name: '',\n  farmSearch: '',\n  farms: ({farmSearch: search}, state) => {\n    return _.compact(_.map(state.app.seasonFarms, (f, id) => {\n      if (!f || search != '' && f.name && f.name.toLowerCase().search(search.toLowerCase()) == -1) return null;\n      return {key: id, text: f.name, value: id};\n    }))\n  },\n  farmId: null,\n  farm: ({farmId, farms}, state) => {\n    if (farmId) {\n      return _.get(state, `app.seasonFarms.${farmId}`)\n    }\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\nfunction createOperation(context, {name}) {\n  var operation = {\n    name,\n    fields: {}\n  }\n  return operation;\n}\n\nfunction addOperationToLocalData({state}, {operation}) {\n  const id = uuid();\n  _.set(state, `app.localData.abc123.seasons.2019.operations.${id}`, operation); //TODO year, organization\n  return id;\n}\nasync function addOperationToOADA({state, actions}, {operation}) {\n  //Add to OADA\n  const id = uuid();\n  let requests = [\n    {\n      tree,\n      data: operation,\n      path: `/bookmarks/seasons/2019/operations/${id}` //TODO year\n    }\n  ];\n  const connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  const ret = await actions.app.oada.put({requests, connection_id})\n  const _id = _.get(ret, 'responses.0.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  return {id, _id}\n}\n\nexport default {\n  open({state}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.name = '';\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.open = false;\n  },\n  async saveOperation(context) {\n    const {state} = context;\n    const myState = state.view.Modals.NewOperation;\n    const operation = createOperation(context, {name: myState.name})\n    if (state.app.OADAManager.connected) {\n      const {id, _id} = await addOperationToOADA(context, {operation});\n      _.set(state, `view.TopBar.OperationDropdown.selected`, id)\n    } else {\n      const id = await addOperationToLocalData(context, {operation});\n      _.set(state, `view.TopBar.OperationDropdown.selected`, id)\n    }\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.name = name;\n  },\n  onCancel({actions}) {\n    const myActions = actions.view.Modals.NewOperation;\n    myActions.close();\n  },\n  async onSave({actions}) {\n    const myActions = actions.view.Modals.NewOperation;\n    await myActions.saveOperation();\n    myActions.close();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  name: ''\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\nfunction createFarm(context, {name}) {\n  var farm = {\n    name\n  }\n  return farm;\n}\nfunction addFarmToLocalData(context, {farm}) {\n  const { state } = context;\n  const id = uuid();\n  _.set(state, `app.localData.abc123.farms.${id}`, farm); //TODO organization\n  _.set(state, `app.localData.abc123.seasons.2019.farms.${id}`, farm); //TODO year, organization\n  return id;\n}\nasync function addFarmToOADA(context, {farm}) {\n  const { state, actions } = context;\n  const id = uuid();\n  //TODO only add to season farms depending on what year is selected, need to figure out return values for that as well (since may only have one request)\n  //Add to OADA\n  let requests = [\n    {\n      tree,\n      data: farm,\n      path: `/bookmarks/fields/farms/${id}`\n    },\n    {\n      tree,\n      data: farm,\n      path: `/bookmarks/seasons/2019/farms/${id}` //TODO year\n    },\n  ];\n  let connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  const ret = await actions.app.oada.put({requests, connection_id})\n  const farm_id = _.get(ret, 'responses.0.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  if (farm_id == null) throw 'OADA did not return an _id when creating a farm.'\n  const seasonFarm_id = _.get(ret, 'responses.1.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  if (seasonFarm_id == null) throw 'OADA did not return an _id when creating a season farm.'\n  return {farm_id, seasonFarm_id, id};\n}\nexport default {\n  open({state}, {callbackAction}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.name = '';\n    myState.open = true;\n    myState.callbackAction = callbackAction || null;\n  },\n  close({state}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.open = false;\n  },\n  async saveFarm(context) {\n    const {state, actions} = context;\n    const myState = state.view.Modals.NewFarm;\n    const farm = createFarm(context, {name: myState.name})\n    if (state.app.OADAManager.connected) {\n      const {farm_id, seasonFarm_id, id} = await addFarmToOADA(context, {farm});\n      if (myState.callbackAction) {\n        const action = _.get(actions, myState.callbackAction);\n        if (!action) throw `callbackAction: ${myState.callbackAction} does not exist.`\n        action({farm_id, seasonFarm_id, id});\n      }\n    } else {\n      const id = await addFarmToLocalData(context, {farm});\n      if (myState.callbackAction) {\n        const action = _.get(actions, myState.callbackAction);\n        if (!action) throw `callbackAction: ${myState.callbackAction} does not exist.`\n        action({id});\n      }\n    }\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.name = name;\n  },\n  onCancel({actions}) {\n    const myActions = actions.view.Modals.NewFarm;\n    myActions.close();\n  },\n  async onSave({actions}) {\n    const myActions = actions.view.Modals.NewFarm;\n    await myActions.saveFarm();\n    myActions.close();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  name: ''\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as SaveField from './SaveField'\nimport * as NewOperation from './NewOperation'\nimport * as NewFarm from './NewFarm'\n\nexport const state = {\n  SaveField: SaveField.state,\n  NewOperation: NewOperation.state,\n  NewFarm: NewFarm.state,\n  ..._state\n};\nexport const actions = {\n  SaveField: SaveField.actions,\n  NewOperation: NewOperation.actions,\n  NewFarm: NewFarm.actions,\n  ..._actions\n}\n","import _ from 'lodash'\nimport uuid from 'uuid/v1'\n\nexport default {\n  onAddField({actions}) {\n    actions.view.Map.BoundaryDrawing.onStartDrawing();\n  },\n  onSaveField({actions}) {\n    actions.view.Modals.SaveField.open();\n  },\n  onCancelField({state, actions}) {\n    state.view.Map.editingField = null; //Stop editing if we were\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n  },\n  onEditField({actions, state}) {\n    const currentField = state.view.FieldDetails.field;\n    //Hide the current boundary\n    state.view.Map.editingField = state.view.FieldDetails.fieldId;\n    //Convert to drawing boundary: {<rand-id>: [lat, lng], ...}\n    let boundary = {};\n    let coors = _.get(currentField, 'boundary.coordinates.0');\n    if (coors.length > 0) coors.pop();\n    _.forEach(coors || [], (coors) => { //TODO will not work with holes in fields etc\n      boundary[uuid()] = [coors[1], coors[0]];\n    });\n    //Start drawing\n    actions.view.Map.BoundaryDrawing.onStartDrawing({boundary});\n    //Close the details drawer\n    actions.view.Map.unselectField()\n  },\n  async onResetCache({actions}) {\n    await actions.app.oada.resetCache();\n    //Refresh the page\n    //location.reload();\n  },\n  async onLogout({actions}) {\n    await actions.view.Login.logout()\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\n\nexport default {\n  open: false,\n  selected: null,\n  search: '',\n  list: ({selected, operations}, state) => {\n    //Get operations, filtering by search\n    const search = _.get(state, `view.TopBar.OperationDropdown.search`)\n    return _.omitBy(_.mapValues(operations, ({name}, id) => {\n      if (id == null) return null; //Not an operation, a _key for oada\n      if (search != '' && name.search(search) == -1) return null;\n      return {\n        text: name,\n        value: id,\n        selected: (selected == id),\n        label: { color: 'green', empty: true, circular: true }\n      }\n    }), _.isEmpty)\n  },\n  operations: ({}, state) => {\n    let operations = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      operations = _.omitBy(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations`) || {}, (o, k) => {return _.startsWith(k, '_')}); //TODO year\n    } else {\n      operations = _.get(state, `app.localData.abc123.seasons.2019.operations`) //TODO year, organization\n    }\n    return operations\n  },\n  selectedOperationId: ({selected, operations}, state) => {\n    let selectedId = selected;\n    if (selectedId == null && _.keys(operations).length > 0) selectedId = _.keys(operations)[0];\n    return selectedId;\n  },\n  selectedOperation: ({selectedOperationId, operations}, state) => {\n    return operations[selectedOperationId];\n  }\n}\n","export default {\n  onAdd({state, actions}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.open = false;\n    return actions.view.Modals.NewOperation.open()\n  },\n  onChange({state}, {id}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.selected = id;\n    myState.open = false;\n  },\n  onOpenChange({state}, {open}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.open = open;\n  },\n  onSearch({state}, {search}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.search = search;\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as OperationDropdown from './OperationDropdown'\n\nexport const state = {\n  OperationDropdown: OperationDropdown.state,\n  ..._state\n};\nexport const actions = {\n  OperationDropdown: OperationDropdown.actions,\n  ..._actions\n}\n","export default {\n\n}\n","import _state from './state'\nimport _actions from './actions'\n\nimport * as Login from './Login'\nimport * as FieldDetails from './FieldDetails'\nimport * as FieldList from './FieldList'\nimport * as Map from './Map'\nimport * as Modals from './Modals'\nimport * as TopBar from './TopBar'\n\nexport const state = {\n  Login: Login.state,\n  FieldDetails: FieldDetails.state,\n  FieldList: FieldList.state,\n  Map: Map.state,\n  Modals: Modals.state,\n  TopBar: TopBar.state,\n  ..._state\n};\nexport const actions = {\n  Login: Login.actions,\n  FieldDetails: FieldDetails.actions,\n  FieldList: FieldList.actions,\n  Map: Map.actions,\n  Modals: Modals.actions,\n  TopBar: TopBar.actions,\n  ..._actions\n}\nexport const onInitialize = async ({actions}) => {\n  await actions.app.onInitialize();\n  await actions.view.Login.onInitialize();\n}\n","import _ from 'lodash';\n\nexport default {\n  \n}\n","import _ from 'lodash'\nexport default {\n\n}\n","export default {\n  \"42f60b10-784c-11ea-8dfd-a3e960f56105\": {\n    \"name\": \"1004 G-N\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97584700584412,\n            41.4628134964027\n          ],\n          [\n            -84.97539639472963,\n            41.462765256171906\n          ],\n          [\n            -84.97495651245119,\n            41.46275721612994\n          ],\n          [\n            -84.97424840927125,\n            41.46250797433487\n          ],\n          [\n            -84.97405529022217,\n            41.46203360827181\n          ],\n          [\n            -84.97410893440247,\n            41.46044164256161\n          ],\n          [\n            -84.97139453887941,\n            41.46130195211675\n          ],\n          [\n            -84.96770381927492,\n            41.46327177680542\n          ],\n          [\n            -84.97010707855226,\n            41.46330393671208\n          ],\n          [\n            -84.9764907360077,\n            41.46306273702346\n          ],\n          [\n            -84.97634053230287,\n            41.45965368547904\n          ],\n          [\n            -84.97462391853334,\n            41.46024867436535\n          ],\n          [\n            -84.9746346473694,\n            41.461004463187685\n          ],\n          [\n            -84.97491359710695,\n            41.46126175098986\n          ],\n          [\n            -84.97492432594301,\n            41.46172004235903\n          ],\n          [\n            -84.97529983520509,\n            41.46208988917259\n          ],\n          [\n            -84.97581481933594,\n            41.46234717266838\n          ],\n          [\n            -84.9761688709259,\n            41.46278133625282\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\"\n    }\n  },\n  \"7c0ce950-784c-11ea-bfa5-97fea4f9bfd9\": {\n    \"name\": \"1001 HO-N\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97347593307495,\n            41.44864540647965\n          ],\n          [\n            -84.97626543045044,\n            41.44856498851091\n          ],\n          [\n            -84.97617959976196,\n            41.44784122230691\n          ],\n          [\n            -84.977445602417,\n            41.44782513852177\n          ],\n          [\n            -84.97759580612183,\n            41.44862932289387\n          ],\n          [\n            -84.97886180877687,\n            41.448532821295515\n          ],\n          [\n            -84.97866868972778,\n            41.44205080201176\n          ],\n          [\n            -84.97654438018799,\n            41.442887227983185\n          ],\n          [\n            -84.97549295425415,\n            41.44425443952937\n          ],\n          [\n            -84.97323989868165,\n            41.44608806625952\n          ],\n          [\n            -84.97272491455078,\n            41.44689227216232\n          ],\n          [\n            -84.97330427169801,\n            41.44726220353039\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\",\n    }\n  },\n  \"8ab27420-784c-11ea-bfa5-97fea4f9bfd9\": {\n    \"name\": \"1002 HO-S\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97152328491212,\n            41.44697269220437\n          ],\n          [\n            -84.97148036956789,\n            41.44166475561947\n          ],\n          [\n            -84.97152328491212,\n            41.44111785263252\n          ],\n          [\n            -84.97347593307495,\n            41.441085681725035\n          ],\n          [\n            -84.97373342514038,\n            41.44073180069027\n          ],\n          [\n            -84.97635126113893,\n            41.44053877385792\n          ],\n          [\n            -84.97645854949953,\n            41.44134304853828\n          ],\n          [\n            -84.97607231140138,\n            41.44161649965898\n          ],\n          [\n            -84.97611522674562,\n            41.44240467585386\n          ],\n          [\n            -84.97540712356569,\n            41.44398099952468\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\"\n    }\n  }\n}\n","export default {\n  \"42f08cd0-784c-11ea-8dfd-a3e960f56105\": {\n    name: \"Bowman and Bowman\"\n  },\n  \"52f08cd0-784c-11ea-8dfd-a3e960f56105\": {\n    name: \"Martz Farms\"\n  }\n}\n","import testFields from './test/testFields';\nimport testFarms from './test/testFarms';\nimport _ from 'lodash';\nimport geojsonArea from '@mapbox/geojson-area';\n\nexport default {\n  acresStatus: ({}, state) => {\n    //Get id's of all fields in this operation\n    const operationFields = state.app.operationFields;\n    const seasonFields = state.app.seasonFields;\n    //Loop through each field, totaling acres.\n    let planned = 0;\n    let started = 0;\n    let done = 0;\n    _.forEach(operationFields, (fieldOperation, key) => {\n      if (fieldOperation == null) return;\n      //Get field\n      let field = seasonFields[key];\n      if (field == null) return;\n      //Compute area of field boundary\n      let area = geojsonArea.geometry(field.boundary) * 0.000247105 //Meters to acres;\n      if (fieldOperation.status == 'planned') {\n        planned += area;\n      } else if (fieldOperation.status == 'started') {\n        started += area;\n      } else if (fieldOperation.status == 'done') {\n        done += area;\n      }\n    });\n    let total = planned + started + done;\n    return {\n      planned: Math.round(planned),\n      plannedPercentage: Math.round((planned / (total || 1)) * 100),\n      started: Math.round(started),\n      startedPercentage: Math.round((started / (total || 1)) * 100),\n      done: Math.round(done),\n      donePercentage: Math.round((done / (total || 1)) * 100),\n    };\n  },\n  seasonFarms: ({}, state) => {\n    let farms;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      farms = _.chain(state).get(`app.oada.${currentConnection}.bookmarks.seasons.2019.farms`).omitBy((v, k) => { //TODO year\n        if (_.startsWith(k, '_')) return true;\n        if (v == null) return true;\n      }).value();\n    } else {\n      farms = _.get(state, `app.localData.abc123.seasons.2019.farms`) //TODO year, organization\n    }\n    return farms || {};\n  },\n  seasonFields: ({}, state) => {\n    let fields;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      fields = _.chain(state).get(`app.oada.${currentConnection}.bookmarks.seasons.2019.fields`).omitBy((v, k) => { //TODO year\n        if (_.startsWith(k, '_')) return true;\n        if (v == null) return true;\n      }).value();\n    } else {\n      fields = _.get(state, `app.localData.abc123.seasons.2019.fields`) //TODO year, organization\n    }\n    return fields || {};\n  },\n  operationFields: ({}, state) => {\n    let operationId = _.get(state, 'view.TopBar.OperationDropdown.selectedOperationId');\n    let operationFields = [];\n    if (operationId != null) {\n      if (_.get(state, `app.OADAManager.connected`) == true) {\n        let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n        operationFields = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations.${operationId}.fields`) || []; //TODO year\n      } else {\n        operationFields = _.get(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields`) || []; //TODO year, organization\n      }\n    }\n    return operationFields; // {<field-id>: {status: 'planned'}, ...}\n  },\n  currentOADA: ({}, state) => {\n    if (state.app.OADAManager.connected) {\n      const currentConnection = state.app.OADAManager.currentConnection;\n      if (!currentConnection) return;\n      return state.app.oada[currentConnection];\n    }\n  },\n  oadaOrgData: ({currentOADA}) => {\n    if (currentOADA) {\n      return currentOADA.bookmarks;\n    }\n  },\n  oadaSeasonFarmsIdBy_id: ({oadaOrgData}, state) => {\n    return _.chain(oadaOrgData).get(`seasons.2019.farms`).mapValues((v, k) => {\n      if (!v) return null\n      return {_id: v._id, id: k};\n    }).omitBy(_.isNull).mapKeys((v, k) => {\n      return v._id; //Key of oada id\n    }).value();  //{_id: <oada-res-id>, id: <path-id>}\n  },\n  oadaSeasonFarms_idByFarm_id: ({oadaOrgData}, state) => {\n    return _.chain(oadaOrgData).get(`fields.farms`).mapValues((v, k) => {\n      if (!v) return null\n      //Lookup season farm id\n      const seasonFarm_id = _.get(oadaOrgData, `seasons.2019.farms.${k}._id`);\n      return {seasonFarm_id: seasonFarm_id, farm_id: v._id};\n    }).omitBy(_.isNull).mapKeys((v, k) => {\n      return v.farm_id; //Key of oada id\n    }).value();  //{_id: <oada-res-id>, id: <path-id>}\n  },\n  localOrgData: ({localData}) => {\n    return localData.abc123; //TODO organization\n  },\n  localData: {\n    organizations: {\n      'abc123': {\n        name: 'Default'\n      }\n    },\n    'abc123': {\n      fields: {\n        fields: {\n          /*'a': {\n            id: 'a',\n            name: 'Back 40',\n            boundary: '' //GEOJSON\n          }*/\n          ...testFields,\n        },\n        farms: {\n          ...testFarms,\n        }\n      },\n      seasons: {\n        /*'2019': {\n          fields: {\n            '<field-uuid>': {\n              season: 2018,\n              boundary: <geo-json>,\n              operations: {\n                '<operation-uuid>': {}\n              }\n            }\n          },\n          operations: {\n            '<operation-uuid>': {\n              id: '<operation-uuid>',\n              year: 2019,\n              name: 'Corn Planting',\n              fields: {\n                '<field-uuid>': {\n                  status: 'Planned',\n                }\n              }\n            }\n          }\n        }*/\n        '2019': {\n          fields: {\n            ...testFields,\n          },\n          farms: {\n            ...testFarms,\n          },\n          operations: {\n            /*'<operation-uuid>': {\n              id: '<operation-uuid>',\n              year: 2019,\n              name: 'Corn Planting',\n              fields: {\n                '<field-uuid>': {\n                  status: 'Planned',\n                }\n              }\n            }*/\n          }\n        }\n      }\n    }\n  }\n}\n","import _ from 'lodash'\nexport default {\n  getSeasonField({state}, id) {\n    let fields = [];\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      fields = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.fields`) //TODO year\n    } else {\n      fields = _.get(state, `app.localData.abc123.seasons.2019.fields`) //TODO year, organization\n    }\n    return fields[id];\n  },\n  getSeasonFarm({state}, id) {\n    let farms = [];\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      farms = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.farms`) //TODO year\n    } else {\n      farms = _.get(state, `app.localData.abc123.seasons.2019.farms`) //TODO year, organization\n    }\n    return farms[id];\n  },\n  onInitialize({state, actions}) {\n    actions.view.Map.zoomBounds();\n  }\n}\n","import _ from 'lodash';\nexport default {\n  connected: false,\n  currentConnection: null,\n  domain: null,\n  token: null,\n  user: ({currentConnection}, state) => {\n    if (!currentConnection) return null;\n    return _.get(state, 'app.oada.localhost.users.me');\n  }\n}\n","import tree from './tree';\nimport config from '../../../config'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport { browser as oadaIdClient } from '@oada/oada-id-client/index.js'\nconst getAccessToken = Promise.promisify(oadaIdClient.getAccessToken)\n\nexport default {\n  async getToken({state}, domain) {\n    /*\n      Get token from local storage or request one\n    */\n    const myState = state.app.OADAManager;\n    if (myState.token) return myState.token;\n    let res = await getAccessToken(domain.replace(/^https?:\\/\\//, ''), {\n      metadata: config.METADATA,\n      scope: config.SCOPE,\n      redirect: config.REDIRECT\n    })\n    return res.access_token;\n  },\n  async connect({actions, state, effects}, {domain, token}) {\n    const myState = state.app.OADAManager;\n    const myActions = actions.app.OADAManager;\n    if (token) myState.token = token;\n    token = await myActions.getToken(domain);\n    return actions.app.oada.connect({\n      token,\n      domain: domain,\n      options: config.OPTIONS,\n      cache: false\n    }).then((response) => {\n      if (!response.error) {\n        myState.currentConnection = response.connectionId;\n        myState.token = response.token;\n        myState.connected = true;\n        //Unselect local opeation\n        state.view.TopBar.OperationDropdown.selected = null;\n      }\n      return response;\n    })\n  },\n  async logout({actions, state}) {\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    myState.token = null;\n    await actions.app.oada.disconnect({connection_id})\n  },\n  async getUserInfo({actions, state}) {\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    let requests = [{\n      path: '/users/me',\n    }];\n    await actions.app.oada.get({requests, connection_id})\n  },\n  async fetchAndWatch({actions, state}) {\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //Fetch field and seasons\n    let watchRequests = [\n      {\n        path: '/bookmarks/fields',\n        tree,\n        watch: {\n          actions: [actions.app.OADAManager.onFieldChanged]\n        }\n      },\n      {\n        path: '/bookmarks/seasons',\n        tree,\n        watch: {\n          actions: [actions.app.OADAManager.onSeasonsChanged]\n        },\n      }\n    ];\n    const ret = await actions.app.oada.get({requests: watchRequests, connection_id})\n    let rewatchRequests = [];\n    if (ret.responses[0].error) {\n      //On 404 create and rewatch\n      if (ret.responses[0].status != 404) throw ret.responses[0].error;\n      //Create fields and try to watch again\n      let requests = [{\n        tree,\n        data: {\n          fields: {},\n          farms: {}\n        },\n        path: '/bookmarks/fields'\n      }];\n      //Create\n      await actions.app.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[0]);\n    }\n    if (ret.responses[1].error) {\n      //On 404 create and rewatch\n      if (ret.responses[1].status != 404) throw ret.responses[0].error;\n      //Create seasons and try to watch again\n      let requests = [{\n        tree,\n        data: {},\n        path: '/bookmarks/seasons'\n      }];\n      //Create\n      await actions.app.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[1]);\n    }\n    if (rewatchRequests.length > 0) await actions.app.oada.get({requests: rewatchRequests, connection_id})\n  },\n  initSeasonFields({state, actions}) {\n    /*\n      Put changes from master field list into season fields\n    */\n    const myActions = actions.app.OADAManager;\n    //Get master field list fields\n    var fieldsChanged = [];\n    _.forEach(_.get(state, 'app.oadaOrgData.fields.fields'), (obj, key) => {\n      if (_.startsWith(key, '_')) return;\n      fieldsChanged.push({fieldId: key, name: obj.name, boundary: obj.boundary, farm: obj.farm});\n    })\n    return myActions.changeSeasonFields(fieldsChanged);\n  },\n  initSeasonFarms({state, actions}) {\n    /*\n      Put changes from master farm list into season farms\n    */\n    const myActions = actions.app.OADAManager;\n    //Get master field list fields\n    var changed = [];\n    _.forEach(_.get(state, 'app.oadaOrgData.fields.farms'), (obj, key) => {\n      if (_.startsWith(key, '_')) return;\n      changed.push({farmId: key, name: obj.name});\n    })\n    return myActions.changeSeasonFarms(changed);\n  },\n  async changeSeasonFields({state, actions}, fieldsChanged) {\n    /*\n      Apply any changes to season fields\n    */\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let theSeasonFields = state.app.seasonFields;\n    _.forEach(fieldsChanged, (fieldChange) => {\n      if (fieldChange.fieldId == null) return;\n      let data = {};\n      let seasonField = theSeasonFields[fieldChange.fieldId]\n      if (fieldChange.name) {\n        if (seasonField == null || seasonField.name != fieldChange.name) {\n          data.name = fieldChange.name;\n        }\n      }\n      if (fieldChange.boundary) {\n        if (seasonField == null || _.isEqual(seasonField.boundary, fieldChange.boundary) == false) {\n          data.boundary = fieldChange.boundary;\n        }\n      }\n      if (fieldChange.farm) {\n        //Find new season farm id from farm id\n        const farmId = _.get(fieldChange, 'farm._id');\n        if (farmId) {\n          const seasonFarmId = _.get(state, `app.oadaSeasonFarms_idByFarm_id.${farmId}.seasonFarm_id`)\n          if (seasonField == null || seasonField.farm == null || seasonField.farm._id == null || (seasonFarmId != null && seasonField.farm._id != seasonFarmId)) {\n            data.farm = _.merge({}, data.farm, {_id: seasonFarmId});\n          }\n        }\n      }\n      if (_.isEmpty(data)) return;\n      requests.push(\n        { //Change season's field's name, boundary\n          tree,\n          data,\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${fieldChange.fieldId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.put({requests, connection_id})\n  },\n  async changeSeasonFarms({state, actions}, changed) {\n    /*\n      Apply any changes to season farms\n    */\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFarms = state.app.seasonFarms;\n    _.forEach(changed, (change) => {\n      if (change.farmId == null) return;\n      let data = {};\n      let seasonFarm = seasonFarms[change.farmId]\n      //Check if name changed\n      if (change.name) {\n        if (seasonFarm == null || seasonFarm.name != change.name) {\n          data.name = change.name;\n        }\n      }\n      if (_.isEmpty(data)) return;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          data,\n          type: 'application/vnd.oada.farm.1+json',\n          path: `/bookmarks/seasons/2019/farms/${data.id}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.put({requests, connection_id})\n  },\n  async deleteSeasonFields({state, actions}, deleted) {\n    console.log('delete season fields', deleted);\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFields = state.app.seasonFields;\n    _.forEach(deleted, (fieldId) => {\n      let seasonField = seasonFields[fieldId]\n      if (!seasonField) return;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${fieldId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.delete({requests, connection_id})\n  },\n  async deleteSeasonFarms({state, actions}, deleted) {\n    console.log('delete season farms', deleted);\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFarms = state.app.seasonFarms;\n    _.forEach(deleted, (farmId) => {\n      let seasonFarm = seasonFarms[farmId]\n      if (!seasonFarm) return;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          type: 'application/vnd.oada.farm.1+json',\n          path: `/bookmarks/seasons/2019/farms/${farmId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.delete({requests, connection_id})\n  },\n  async login({actions, state}, {domain, token}) {\n    const myState = state.app.OADAManager;\n    const myActions = actions.app.OADAManager;\n    myState.domain = domain;\n    const {error} = await myActions.connect({domain, token});\n    if (!error) {\n      await myActions.getUserInfo();\n      await myActions.fetchAndWatch();\n      await myActions.initSeasonFarms();\n      await myActions.initSeasonFields();\n      await actions.view.Map.zoomBounds();\n    }\n  },\n  async onFieldChanged({state, actions}, props) {\n    /*\n      If a farm/field in the master list changed, apply change to this years season fields\n    */\n    console.log('onFieldChanged', props);\n    const myActions = actions.app.OADAManager;\n    let changeType = _.get(props, 'response.change.type');\n    if (changeType == 'merge' || changeType == 'delete') {\n      let deleted = false;\n      const wasDelete = _.get(props, 'response.change.wasDelete');\n      if (changeType == 'deleted' || wasDelete) deleted = true;\n      let fieldsChanged = [];\n      let fieldsDeleted = [];\n      _.forEach(_.get(props, 'response.change.body.data.fields'), (obj, key) => {\n        if (key == 'undefined') {\n          console.log('WARNING: Received a bad field change from OADA', props);\n          return; //TODO temp fix for oada changes being wrong\n        }\n        if (deleted) {\n          fieldsDeleted.push(key);\n        } else {\n          fieldsChanged.push({fieldId: key, deleted, name: _.get(obj, 'name'), boundary: _.get(obj, 'boundary')});\n        }\n      })\n      if (fieldsDeleted.length > 0) myActions.deleteSeasonFields(fieldsDeleted);\n      if (fieldsChanged.length > 0) myActions.changeSeasonFields(fieldsChanged);\n      let farmsChanged = [];\n      let farmsDeleted = [];\n      _.forEach(_.get(props, 'response.change.body.data.farms'), (obj, key) => {\n        if (key == 'undefined') {\n          console.log('WARNING: Received a bad farm change from OADA', props);\n          return; //TODO temp fix for oada changes being wrong\n        }\n        if (deleted) {\n          farmsDeleted.push(key);\n        } else {\n          farmsChanged.push({farmId: key, deleted, name: _.get(obj, 'name')});\n        }\n      })\n      if (farmsDeleted.length > 0) myActions.deleteSeasonFarms(farmsDeleted);\n      if (farmsChanged.length > 0) myActions.changeSeasonFarms(farmsChanged);\n    } else {\n      console.warn(\"onFieldChanged: Unsupported change type:\", changeType)\n    }\n  },\n  onSeasonsChanged({state, actions}, props) {\n\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _state from './state'\nimport _actions from './actions'\n\nimport * as OADAManager from './OADAManager'\nimport oadaCacheOvermind from '@oada/oada-cache-overmind'\n\nconst oada =  oadaCacheOvermind('app.oada')\n\nexport const state = {\n  oada: oada.state,\n  OADAManager: OADAManager.state,\n  ..._state\n};\nexport const actions = {\n  oada: oada.actions,\n  OADAManager: OADAManager.actions,\n  ..._actions\n}\nexport const effects = {\n  oada: oada.effects\n}\n","import { createHook } from \"overmind-react\"\n\nimport { namespaced } from 'overmind/config'\n\nimport * as view from './view'\nimport * as app from './app'\n\nexport const config = namespaced({\n  view,\n  app,\n})\n\nexport default createHook()\n","import React from 'react';\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport _ from 'lodash'\nimport overmind from '../../overmind'\nimport { Input, Button, Form, Dropdown } from 'semantic-ui-react'\n\nfunction Login() {\n  const { state, actions } = overmind();\n  const myState = state.view.Login;\n  const myActions = actions.view.Login;\n\n  return (\n    <div css={css`\n      height: 100vh;\n      width: 100vw;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      background: url(imgs/login-background.jpg) no-repeat center center fixed;\n      background-size: cover;\n    `}>\n      <div css={css`\n        width: 400px;\n        display: flex;\n        flex-direction: column;\n        background: #fff;\n        padding: 15px;\n        padding-top: 7px;\n        border-radius: 5px;\n      `}>\n        <img css={{\n          height: 300\n        }} src={`imgs/logo2.svg`} alt={'logo'} />\n        <Form css={css`\n          display: flex;\n          flex-direction: column;\n        `} onSubmit={myActions.login}>\n          <Input placeholder='OADA Domain...' value={myState.domain} onChange={(evt, data) => myActions.domainChange(data)} />\n          <Button\n            style={{marginTop: 7}} primary\n            loading={myState.loading}\n            disabled={myState.loading}>\n            Connect to Your OADA Cloud\n          </Button>\n          <Button\n            style={{marginTop: 7}}\n            onClick={myActions.viewDemo}\n            disabled={myState.loading}>\n            View Demo\n          </Button>\n        </Form>\n      </div>\n      <a css={css`\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        font-size: 1.2em;\n        color: #FFFFFF;\n        cursor: pointer;\n      `} onClick={myActions.logout}\n      >Logout</a>\n    </div>\n  );\n}\n\nexport default Login;\n","/*\n  Adds points/polygons to map when drawing a boundary\n*/\nimport React, { Component } from 'react';\nimport { Marker, Polygon, LayerGroup } from 'react-leaflet'\n\nimport overmind from '../../../overmind'\nimport _ from 'lodash';\n\nexport default function BoundaryDrawing() {\n  const {state, actions} = overmind();\n  const myState = state.view.Map.BoundaryDrawing;\n  const myActions = actions.view.Map.BoundaryDrawing;\n\n  const { boundary, drawing } = myState;\n  const { onMarkerMove } = myActions;\n\n  if (!drawing) return null;\n  return (\n    <LayerGroup>\n      <Polygon positions={_.map(boundary)} />\n      {_.map(boundary, (latlng, id) => <Marker position={latlng} key={id} draggable onMove={({latlng, oldLatLng}) => onMarkerMove({latlng, oldLatLng, id})}/>)}\n    </LayerGroup>\n  );\n}\n","/*\n  Adds points/polygons to map when drawing a boundary\n*/\nimport React from 'react';\nimport { Marker, Polygon, LayerGroup, GeoJSON } from 'react-leaflet'\n\nimport overmind from '../../../overmind'\n\nimport _ from 'lodash';\nimport uuid from 'uuid/v1'\n\nexport default function Fields() {\n  const {state, actions} = overmind();\n  const myState = state.view.Map;\n  const myActions = actions.view.Map;\n\n  const { fields } = myState;\n  const { onFieldClick } = myActions;\n\n  if (_.keys(fields).length == 0) return null;\n  return (\n    <LayerGroup>\n      {_.map(fields, (field, id) =>\n        <GeoJSON\n          bubblingMouseEvents={false}\n          style={field.style}\n          data={field.boundary}\n          key={uuid()} //Must be uuid to unmount/mount when field style or boundary changes\n          onClick={(evt) => {onFieldClick({id})}} />\n      )}\n    </LayerGroup>\n  );\n}\n","import React from 'react';\nimport { Map as LeafletMap, Marker, Popup, TileLayer, ZoomControl } from 'react-leaflet'\nimport './index.css'\n\nimport overmind from '../../overmind'\nimport _ from 'lodash'\nimport BoundaryDrawing from './BoundaryDrawing'\nimport Fields from './Fields'\n\nexport default function Map() {\n  const { actions, state } = overmind();\n  const myActions = actions.view.Map;\n  const myState = state.view.Map;\n  return (\n      <LeafletMap bounds={myState.bounds} center={[41.448068, -84.972648]} zoom={13} onClick={(evt) => myActions.onMapClick({...evt.latlng})} zoomControl={false}>\n        <TileLayer\n          url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n        />\n        <BoundaryDrawing />\n        <Fields />\n      </LeafletMap>\n  );\n}\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport {TextInput, View} from 'react-native'\n\nimport overmind from '../../../overmind'\n\nexport default function DrawingToolbar() {\n  const { actions } = overmind();\n  const myActions = actions.view.TopBar;\n  return (\n    <Toolbar>\n      <View style={{flex: 1}} />\n      <Button color=\"inherit\" onClick={() => myActions.onCancelField()}>Cancel</Button>\n      <Button color=\"inherit\" onClick={() => myActions.onSaveField()}>Save</Button>\n    </Toolbar>\n  );\n}\n","import React from 'react'\nimport { Dropdown, Input } from 'semantic-ui-react'\nimport {View, Text} from 'react-native'\nimport _ from 'lodash'\n/*const tagOptions = [\n  {\n    text: 'Important',\n    value: 'Important',\n    label: { color: 'red', empty: true, circular: true },\n  }\n]*/\n\nimport overmind from '../../../../overmind'\n\nexport default function OperationsDropdown({style}) {\n  const { actions, state } = overmind();\n  const myActions = actions.view.TopBar.OperationDropdown;\n  const myState = state.view.TopBar.OperationDropdown;\n\n  const selectedOperation = myState.selectedOperation;\n  const operations = myState.list;\n  const open = myState.open;\n  const search = myState.search;\n  const onAdd = myActions.onAdd;\n  const onChange = myActions.onChange;\n  const onOpenChange = myActions.onOpenChange;\n  const onSearch = myActions.onSearch;\n\n  return (\n    <View style={style}>\n      <View style={{flexDirection: 'row'}}>\n        {\n           selectedOperation ?\n            <Dropdown\n              open={open}\n              onOpen={() => {onOpenChange({open: true})}}\n              onBlur={() => {onOpenChange({open: false})}}\n              text={selectedOperation.name}\n              icon='cog'\n              floating\n              labeled\n              button\n              className='icon'\n            >\n              <Dropdown.Menu style={{top: 42}}>\n                <Dropdown.Item style={{textAlign: 'center'}} text='Add New Operation' value='Add New Operation' onClick={(evt, data)=>{onAdd()}} />\n                <Input icon='search' iconPosition='left' className='search' style={{marginTop: 3}} value={search} onChange={(evt)=>{onSearch({search: evt.target.value})}} />\n                <Dropdown.Menu scrolling>\n                  {_.map(operations, option => (\n                    <Dropdown.Item key={option.value} {...option} onClick={(evt, data)=>{onChange({id: data.value})}} />\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown.Menu>\n            </Dropdown>\n          :\n            <Dropdown\n              onClick={() => {onAdd()}}\n              open={false}\n              text={'Add New Operation'}\n              icon='cog'\n              floating\n              labeled\n              button\n              className='icon' />\n        }\n        <View style={{flex: 1}} />\n      </View>\n    </View>\n  )\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\nimport {View} from 'react-native'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport overmind from '../../../../overmind'\n\nexport default function MoreDropdown({style}) {\n  const { actions, state } = overmind();\n  const myActions = actions.view.TopBar;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  return (\n    <View style={style}>\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Menu\" onClick={handleClick}>\n        <MoreIcon  />\n      </IconButton>\n      <Menu\n        style={{top: 50, right: 5}}\n        open={Boolean(anchorEl)}\n        keepMounted\n        anchorEl={anchorEl}\n        onClose={handleClose}>\n          <MenuItem onClick={()=>{handleClose(); myActions.onAddField()}}>Add Field</MenuItem>\n          {\n            !state.view.FieldDetails.open ? null :\n            <MenuItem onClick={()=>{handleClose(); myActions.onEditField()}}>Edit Field</MenuItem>\n          }\n          <MenuItem onClick={()=>{handleClose(); myActions.onLogout()}}>Logout</MenuItem>\n          {/*<MenuItem onClick={()=>{handleClose(); myActions.onResetCache()}}>Reset Cache</MenuItem>*/}\n      </Menu>\n    </View>\n  );\n}\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListIcon from '@material-ui/icons/Menu';\n\nimport OperationDropdown from './OperationDropdown';\nimport MoreDropdown from './MoreDropdown';\n\nexport default function NormalToolbar({toggleTitle}) {\n  return (\n    <Toolbar>\n      {/*<IconButton edge=\"start\" style={{marginRight: 7}} color=\"inherit\" aria-label=\"Menu\" onClick={()=>{console.log('TODO Menu Pressed')}}>\n        <ListIcon />\n      </IconButton>*/}\n      <OperationDropdown style={{flex: 1}} />\n      {/*<Button color=\"inherit\">2019</Button>*/}\n      <MoreDropdown />\n    </Toolbar>\n  );\n}\n","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport {View} from 'react-native'\n\nimport DrawingToolbar from './DrawingToolbar';\nimport NormalToolbar from './NormalToolbar';\n\nimport overmind from '../../overmind'\n\nexport default function TopBar() {\n  const {state} = overmind();\n  const drawing = state.view.Map.BoundaryDrawing.drawing;\n  return (\n    <View style={{zIndex: 1201}}>\n      <AppBar position=\"static\">\n        {\n          drawing ? <DrawingToolbar /> : <NormalToolbar />\n        }\n      </AppBar>\n    </View>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Text, View } from 'react-native';\n\nexport default function TemporaryDrawer() {\n  return (\n    <Drawer open={false} variant=\"persistent\">\n      <View style={{height: 64}} />\n      <div\n        style={{width: 250}}\n        role=\"presentation\">\n        <List>\n          {['Inbox', 'Starred', 'Send email'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {View, Text} from 'react-native';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport _ from 'lodash';\nimport { Button } from 'semantic-ui-react'\n\n\nimport overmind from '../../overmind'\n\nexport default function FieldDetails() {\n  const {state, actions} = overmind();\n  const myState = state.view.FieldDetails;\n  const myActions = actions.view.FieldDetails;\n\n  let { open, field, farm, showAddOperationButton } = myState;\n  const { onStatusChange, onEditFieldClick, onAddNewOperationClick } = myActions;\n\n  if (!Boolean(field)) {\n    open = false;\n    field = {};\n  }\n  return (\n    <Drawer anchor=\"bottom\" open={open} variant=\"persistent\">\n      <View style={{paddingBottom: 20}}>\n        <View style={{flexDirection: 'column', alignItems: 'center'}}>\n          <View style={{justifyContent: 'left', flexDirection: 'row', alignItems: 'center', marginTop: 10}}>\n              <Text style={{fontWeight: 'bold', fontSize: 20}}>\n                {field.name}\n              </Text>\n              <Text style={{marginLeft: 7, fontSize: 18}}>\n                {`- ${Math.round(field.acres)} ac`}\n              </Text>\n          </View>\n          {\n            farm == null ? null :\n            <Text style={{fontSize: 15, color: '#999', marginTop: 2, marginBottom: 7}}>\n              {farm.name}\n            </Text>\n          }\n        </View>\n        <View style={{justifyContent: 'center', flexDirection: 'row'}}>\n          {\n            showAddOperationButton ?\n              <Button style={{marginTop: 15}} onClick={() => myActions.onAddNewOperationClick()}>Add New Operation</Button>\n            :\n            <FormControl component=\"fieldset\">\n              <FormGroup aria-label=\"position\" name=\"position\" row>\n                <FormControlLabel\n                  value=\"bottom\"\n                  control={<Checkbox color=\"primary\" checked={(field.status == \"planned\") || false} onChange={()=>{onStatusChange({status: 'planned'})}} />}\n                  label=\"Planned\"\n                  labelPlacement=\"bottom\"\n                />\n                <FormControlLabel\n                  value=\"bottom\"\n                  control={<Checkbox color=\"primary\" checked={(field.status == \"started\") || false} onChange={()=>{onStatusChange({status: 'started'})}} />}\n                  label=\"Started\"\n                  labelPlacement=\"bottom\"\n                />\n                <FormControlLabel\n                  value=\"bottom\"\n                  control={<Checkbox color=\"primary\" checked={(field.status == \"done\") || false} onChange={()=>{onStatusChange({status: 'done'})}} />}\n                  label=\"Done\"\n                  labelPlacement=\"bottom\"\n                />\n              </FormGroup>\n            </FormControl>\n          }\n        </View>\n      </View>\n    </Drawer>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresPlanned({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#c50003', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.planned} ac (${acresStatus.plannedPercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresStarted({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#eeb705', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5, marginRight: 7, marginLeft: 7}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.started} ac (${acresStatus.startedPercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresDone({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#5bb25f', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.done} ac (${acresStatus.donePercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React, { Component } from 'react';\nimport { Text, View } from 'react-native';\n\nimport AcresPlanned from './AcresPlanned'\nimport AcresStarted from './AcresStarted'\nimport AcresDone from './AcresDone'\n\nimport overmind from '../../overmind'\n\nexport default function AcresStatus() {\n  const {state} = overmind();\n  const acresStatus = state.app.acresStatus;\n  const selectedOperationId = state.view.TopBar.OperationDropdown.selectedOperationId;\n  if (!selectedOperationId) return null;\n  return (\n    //z-index of leaflet map is 400\n    <View style={{position: \"absolute\", display: \"flex\", flexDirection: 'row', justifyContent: \"center\", alignItems: \"center\", top: 68, zIndex: 401, width: '100vw'}}>\n      <AcresPlanned acresStatus={acresStatus} />\n      <AcresStarted acresStatus={acresStatus} />\n      <AcresDone acresStatus={acresStatus} />\n    </View>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Form, Button, Modal, Input, Dropdown, Icon } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function SaveField() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.SaveField;\n  const myActions = actions.view.Modals.SaveField;\n\n  const open = myState.open;\n  const name = myState.name;\n  const onNameChange = myActions.onNameChange;\n  const onCancel = myActions.onCancel;\n  const onSave = myActions.onSave;\n  const [farmOpen, setFarmOpen] = React.useState(false);\n\n  const farm = myState.farm || {};\n  const farmOptions = myState.farms;\n\n  return (\n    <Modal open={myState.open} size='tiny'>\n      <Modal.Header>\n        {(state.view.Map.editingField) ? 'Edit Field' : 'New Field'}\n      </Modal.Header>\n      <Modal.Content>\n        <View style={{flexDirection: 'column', zIndex: 1}}>\n          <Text style={{marginBottom: 7}}>Field Name:</Text>\n          <Form onSubmit={() => onSave()}>\n            <Input autoFocus placeholder='Back 40' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n          </Form>\n          <Text style={{marginBottom: 7, marginTop: 15}}>Farm:</Text>\n          <Dropdown\n            trigger={\n              <View style={{paddingLeft: 13, paddingRight: 7, border: '1px solid rgba(34,36,38,.15)', borderRadius: '.28571429rem', height: 38, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                <Text style={{color: (farm.name ? 'rgba(0,0,0,.87)' : 'rgba(0,0,0,.25)')}}>\n                  {farm.name || 'Select a farm'}\n                </Text>\n                <Icon name='caret down' style={{paddingBottom: 17}}/>\n              </View>\n            }\n            icon={null}\n            onOpen={() => {setFarmOpen(true)}}\n            onBlur={() => {setFarmOpen(false)}}\n            open={farmOpen}>\n            <Dropdown.Menu style={{overflow: 'hidden', maxHeight: '50vh'}}>\n              <Dropdown.Item style={{textAlign: 'center'}} text='Add New Farm' value='Add New Farm' onClick={(evt, data)=>{myActions.onFarmAdd(); setFarmOpen(false);}} />\n              <Input icon='search' iconPosition='left' className='search' value={myState.farmSearch} onChange={(evt)=>{myActions.onFarmSearchChange(evt.target.value)}} />\n              <Dropdown.Menu scrolling>\n                {farmOptions.map((option) => (\n                  <Dropdown.Item key={option.value} {...option} onClick={() => {myActions.onFarmChange({id: option.value}); setFarmOpen(false);}} />\n                ))}\n              </Dropdown.Menu>\n            </Dropdown.Menu>\n          </Dropdown>\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function OADADomain() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.OADADomain;\n  const myActions = actions.view.Modals.OADADomain;\n\n  const { open, domain } = myState;\n  const { onDomainChange, onCancel, onConnect } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>Connect to OADA Server</Modal.Header>\n      <Modal.Content>\n        <Text>Domain:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Input style={{flex: 1, marginTop: 7}} placeholder='https://oada.openatk.com' value={domain} onChange={(evt) => {onDomainChange({domain: evt.target.value})}} />\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Connect' onClick={() => onConnect({})} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input, Form } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function NewOperation() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.NewOperation;\n  const myActions = actions.view.Modals.NewOperation;\n\n  const { open, name } = myState;\n  const { onNameChange, onCancel, onSave } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>New Operation</Modal.Header>\n      <Modal.Content>\n        <Text>Name:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Form style={{flex: 1}} onSubmit={onSave}>\n            <Input autoFocus style={{width: '100%', marginTop: 7}} placeholder='Corn Planting' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n          </Form>\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function NewFarm() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.NewFarm;\n  const myActions = actions.view.Modals.NewFarm;\n\n  const { open, name } = myState;\n  const { onNameChange, onCancel, onSave } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>New Farm</Modal.Header>\n      <Modal.Content>\n        <Text>Name:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Input style={{flex: 1, marginTop: 7}} placeholder='Bowman Farms' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Login from './Login'\nimport Map from './Map'\nimport TopBar from './TopBar'\nimport FieldList from './FieldList'\nimport FieldDetails from './FieldDetails'\nimport AcresStatus from './AcresStatus'\n\nimport ModalSaveField from './Modals/SaveField';\nimport ModalOADADomain from './Modals/OADADomain';\nimport ModalNewOperation from './Modals/NewOperation';\nimport ModalNewFarm from './Modals/NewFarm';\n\nimport overmind from '../overmind'\n\nfunction App() {\n  const { state } = overmind();\n\n  if (!state.view.Login.loggedIn) {\n    return <Login />\n  }\n\n  return (\n    <div className=\"App\">\n\n      <TopBar />\n      <AcresStatus />\n      <Map />\n      <FieldList />\n      <FieldDetails />\n      <ModalSaveField />\n      <ModalOADADomain />\n      <ModalNewOperation />\n      <ModalNewFarm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nimport App from './view/App'\n\nimport { createOvermind } from \"overmind\";\nimport { Provider } from \"overmind-react\";\nimport { config } from './overmind'\n\nconst app = createOvermind(config,\n{\n  devtools: true,\n});\n\nReactDOM.render(\n  <Provider value={app}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _state = _interopRequireDefault(require(\"./state\"));\n\nvar _actions = _interopRequireDefault(require(\"./actions\"));\n\nvar _effects = _interopRequireDefault(require(\"./effects\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _default(namespace) {\n  return {\n    state: _state.default,\n    effects: _effects.default,\n    actions: (0, _actions.default)(namespace)\n  };\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = {\n  connections: {}\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _bluebird = _interopRequireDefault(require(\"bluebird\"));\n\nvar _url = _interopRequireDefault(require(\"url\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar namespace = null;\n\nfunction ns(context) {\n  return _lodash.default.mapValues(context, obj => {\n    if (namespace == null) return obj;\n    return _lodash.default.get(obj, namespace);\n  });\n}\n\nfunction domainToConnectionId(domainUrl) {\n  var domain = _url.default.parse(domainUrl).hostname;\n\n  return domain.replace(/\\./g, '_');\n}\n\nfunction _default(_namespace) {\n  namespace = _namespace;\n  return {\n    connect(context, props) {\n      var {\n        state,\n        effects\n      } = ns(context);\n      var connectionId = props.connection_id || domainToConnectionId(props.domain);\n      return effects.connect({\n        connection_id: connectionId,\n        domain: props.domain,\n        options: props.options,\n        cache: props.cache,\n        token: props.token,\n        websocket: props.websocket\n      }).then(response => {\n        if (state[connectionId] == null) state[connectionId] = {};\n        state[connectionId].token = response.token;\n        state[connectionId].domain = props.domain; //Clear bookmarks if exist\n\n        if (state[connectionId].bookmarks) state[connectionId].bookmarks = {};\n        state.isAuthenticated = true;\n        return {\n          token: response.token,\n          connectionId\n        };\n      }).catch(error => {\n        state.error = {\n          error: error.message\n        };\n        state.isAuthenticated = false;\n        return {\n          error\n        };\n      });\n    },\n\n    handleWatch(context, props) {\n      var {\n        state,\n        effects\n      } = ns(context);\n      var nullPath = null;\n\n      if (props.nullPath) {\n        nullPath = props.nullPath.split('/');\n        nullPath.shift();\n        nullPath.shift();\n        nullPath = nullPath.join('.');\n      }\n\n      if (props.response.change.type === 'merge') {\n        var currentState = _lodash.default.get(state, \"\".concat(props.connection_id, \".\").concat(props.path));\n\n        var _oldState = _lodash.default.cloneDeep(currentState);\n\n        _lodash.default.merge(currentState, props.response.change.body.data);\n\n        if (props.response.change.wasDelete && nullPath) {\n          var deletePath = \"\".concat(props.path, \".\").concat(nullPath);\n\n          _lodash.default.unset(state, \"\".concat(props.connection_id, \".\").concat(deletePath));\n        }\n\n        return {\n          oldState: _oldState\n        };\n      } else if (props.response.change.type === 'delete') {\n        var oldState = _lodash.default.cloneDeep(_lodash.default.get(state, \"\".concat(props.connection_id, \".\").concat(props.path)));\n\n        if (nullPath) {\n          var _deletePath = \"\".concat(props.path, \".\").concat(nullPath);\n\n          _lodash.default.unset(state, \"\".concat(props.connection_id, \".\").concat(_deletePath));\n        }\n\n        return {\n          oldState\n        };\n      } else {\n        console.warn('oada-cache-overmind - UNKNOWN CHANGE TYPE:', props);\n      }\n    },\n\n    get(context, props) {\n      var {\n        state,\n        effects,\n        actions\n      } = ns(context);\n      if (!props.requests) throw new Error('Missing requests. Please pass requests in as an array of request objects under the requests key');\n      var requests = props.requests || [];\n      var PromiseMap = props.concurrent ? _bluebird.default.map : _bluebird.default.mapSeries;\n      return PromiseMap(requests, (request, i) => {\n        if (request.complete) return;\n\n        var _statePath = request.path.replace(/^\\//, '').split('/').join('.');\n\n        if (request.watch) {\n          var conn = state[request.connection_id || props.connection_id];\n\n          if (conn) {\n            if (conn && conn.watches && conn.watches[request.path]) return;\n            request.watch.actions = [actions.handleWatch, ...request.watch.actions];\n            request.watch.payload = request.watch.payload || {};\n            request.watch.payload.connection_id = request.connection_id || props.connection_id;\n            request.watch.payload.path = _statePath;\n          }\n        }\n\n        return effects.get({\n          connection_id: request.connection_id || props.connection_id,\n          url: request.url,\n          path: request.path,\n          headers: request.headers,\n          watch: request.watch,\n          tree: request.tree || props.tree\n        }).then(response => {\n          var _responseData = response.data; //Build out path one object at a time.\n\n          var path = \"\".concat(request.connection_id || props.connection_id, \".\").concat(_statePath); //Set response\n\n          if (_responseData) _lodash.default.set(state, path, _responseData);\n\n          if (request.watch) {\n            path = \"\".concat(request.connection_id || props.connection_id, \".watches.\").concat(request.path);\n\n            _lodash.default.set(state, path, true);\n          }\n\n          requests[i].complete = true;\n          return response;\n        }).catch(error => {\n          return _objectSpread({\n            error\n          }, error.response);\n        });\n      }).then(responses => {\n        return {\n          responses,\n          requests\n        };\n      });\n    },\n\n    put(context, props) {\n      var {\n        state,\n        effects,\n        actions\n      } = ns(context);\n      if (!props.requests) throw new Error(\"Missing requests. Please pass requests in as an array of request objects under the requests key\");\n      var requests = props.requests || [];\n      var PromiseMap = props.concurrent ? _bluebird.default.map : _bluebird.default.mapSeries;\n      return PromiseMap(requests, (request, i) => {\n        if (request.complete) return;\n        return effects.put({\n          url: request.url,\n          //props.domain + ((request.path[0] === '/') ? '':'/') + request.path,\n          path: request.path,\n          data: request.data,\n          type: request.type,\n          headers: request.headers,\n          tree: request.tree || props.tree,\n          connection_id: request.connection_id || props.connection_id\n        }).then(response => {\n          var path = \"\".concat(request.connection_id || props.connection_id).concat(request.path.split(\"/\").join(\".\"));\n\n          var oldState = _lodash.default.cloneDeep(_lodash.default.get(state, path));\n\n          var newState = _lodash.default.merge(oldState, request.data);\n\n          _lodash.default.set(state, path, newState);\n\n          requests[i].complete = true;\n          return response;\n        });\n      }).then(responses => {\n        return {\n          responses,\n          requests\n        };\n      });\n    },\n\n    post(context, props) {\n      var {\n        state,\n        effects,\n        actions\n      } = ns(context);\n      if (!props.requests) throw new Error(\"Missing requests. Please pass requests in as an array of request objects under the requests key\");\n      var requests = props.requests || [];\n      var PromiseMap = props.concurrent ? _bluebird.default.map : _bluebird.default.mapSeries;\n      return PromiseMap(requests, (request, i) => {\n        if (request.complete) return;\n        return effects.post({\n          url: request.url,\n          //props.domain + ((request.path[0] === '/') ? '':'/') + request.path,\n          path: request.path,\n          data: request.data,\n          type: request.type,\n          headers: request.headers,\n          tree: request.tree || props.tree,\n          connection_id: request.connection_id || props.connection_id\n        }).then(response => {\n          var id = response.headers.location; //TODO why is this here?\n\n          var path = \"\".concat(request.connection_id || props.connection_id).concat(request.path.split(\"/\").join(\".\"));\n\n          var oldState = _lodash.default.cloneDeep(_lodash.default.get(state, path));\n\n          var newState = _lodash.default.merge(oldState, request.data);\n\n          _lodash.default.set(state, path, newState);\n\n          requests[i].complete = true;\n          return;\n        });\n      }).then(responses => {\n        return {\n          responses\n        };\n      });\n    },\n\n    delete(context, props) {\n      var {\n        state,\n        effects,\n        actions\n      } = ns(context);\n      if (!props.requests) throw new Error(\"Missing requests. Please pass requests in as an array of request objects under the requests key\");\n      var requests = props.requests || [];\n      var PromiseMap = props.concurrent ? _bluebird.default.map : _bluebird.default.mapSeries;\n      return PromiseMap(requests, (request, i) => {\n        if (request.complete) return;\n        var connectionId = request.connection_id || props.connection_id;\n\n        var _statePath = request.path.replace(/^\\//, \"\").split(\"/\").join(\".\");\n\n        var conn = _lodash.default.get(state, connectionId);\n\n        if (request.unwatch && conn && conn.watches) {\n          // Don't send the unwatch request if it isn't being watched already.\n          if (!conn.watches[request.path]) return;\n        }\n\n        return effects.delete({\n          connection_id: connectionId,\n          url: request.url,\n          path: request.path,\n          headers: request.headers,\n          unwatch: request.unwatch,\n          type: request.type,\n          tree: request.tree || props.tree\n        }).then(response => {\n          //Handle watches index and optimistically update\n          if (request.unwatch && conn && conn.watches) {\n            _lodash.default.unset(state, \"\".concat(connectionId, \".watches.\").concat(request.path));\n          } else {\n            _lodash.default.unset(state, \"\".concat(connectionId, \".\").concat(_statePath));\n          }\n\n          requests[i].complete = true;\n          return response;\n        });\n      }).then(responses => {\n        return {\n          responses,\n          requests\n        };\n      });\n    },\n\n    disconnect(context, props) {\n      var {\n        state,\n        effects\n      } = ns(context);\n      return effects.disconnect({\n        connection_id: props.connection_id\n      });\n    },\n\n    resetCache(context, props) {\n      //Currently oada-cache resets all of the cache, not just the db for a single connection_id\n      var {\n        effects,\n        state\n      } = ns(context); //Connect if not connected\n\n      return effects.resetCache({\n        connection_id: props.connection_id || domainToConnectionId(props.domain)\n      });\n    }\n\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _oadaCache = _interopRequireDefault(require(\"@oada/oada-cache\"));\n\nvar _uuid = _interopRequireDefault(require(\"uuid\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar connections = {};\n\nvar connect = function connect(args) {\n  if (!args.connection_id) throw 'connection_id not supplied';\n  if (args.connection_id && connections[args.connection_id]) return Promise.resolve(connections[args.connection_id]);\n  return _oadaCache.default.connect(args).then(conn => {\n    conn.cache = {};\n    connections[args.connection_id] = conn;\n    return conn;\n  });\n};\n\nvar get = function get(args) {\n  if (!args.connection_id) throw 'connection_id not supplied';\n\n  if (args.watch && args.watch.actions) {\n    var actions = args.watch.actions;\n\n    args.watch.func = payload => {\n      actions.forEach(action => {\n        action(payload);\n      });\n    };\n  }\n\n  return connections[args.connection_id].get(args);\n};\n\nvar put = function put(args) {\n  if (!args.connection_id) throw 'connection_id not supplied';\n  return connections[args.connection_id].put(args);\n};\n\nvar post = function post(args) {\n  if (!args.connection_id) throw 'connection_id not supplied';\n  return connections[args.connection_id].post(args);\n};\n\nvar _delete = function _delete(args) {\n  if (!args.connection_id) throw 'connection_id not supplied';\n  return connections[args.connection_id].delete(args);\n};\n\nvar disconnect = function _disconnect(args) {\n  if (!args.connection_id) throw 'connection_id not supplied';\n  var connection = connections[args.connection_id];\n  connections[args.connection_id] = undefined;\n  return connection.disconnect();\n};\n\nvar resetCache = function resetCache(args) {\n  //Currently oada-cache resets all of the cache, not just the db for a single connection_id\n  return connections[args.connection_id].resetCache(args);\n};\n\nvar _default = {\n  connect,\n  get,\n  put,\n  post,\n  delete: _delete,\n  resetCache,\n  disconnect\n};\nexports.default = _default;"],"sourceRoot":""}