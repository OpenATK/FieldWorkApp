{"version":3,"sources":["serviceWorker.js","config/index.js","overmind/view/Login/state.js","overmind/view/Login/index.js","overmind/view/Login/actions.js","overmind/view/FieldDetails/state.js","overmind/app/OADAManager/tree.js","overmind/view/FieldDetails/index.js","overmind/view/FieldDetails/actions.js","overmind/view/FieldList/index.js","overmind/view/FieldList/state.js","overmind/view/FieldList/actions.js","overmind/view/Map/state.js","overmind/view/Map/actions.js","overmind/view/Map/BoundaryDrawing/index.js","overmind/view/Map/BoundaryDrawing/state.js","overmind/view/Map/BoundaryDrawing/actions.js","overmind/view/Map/index.js","overmind/view/Modals/state.js","overmind/view/Modals/actions.js","overmind/view/Modals/SaveField/actions.js","overmind/view/Modals/SaveField/index.js","overmind/view/Modals/SaveField/state.js","overmind/view/Modals/NewOperation/actions.js","overmind/view/Modals/NewOperation/index.js","overmind/view/Modals/NewOperation/state.js","overmind/view/Modals/NewFarm/actions.js","overmind/view/Modals/NewFarm/index.js","overmind/view/Modals/NewFarm/state.js","overmind/view/Modals/index.js","overmind/view/TopBar/actions.js","overmind/view/TopBar/OperationDropdown/index.js","overmind/view/TopBar/OperationDropdown/state.js","overmind/view/TopBar/OperationDropdown/actions.js","overmind/view/TopBar/index.js","overmind/view/TopBar/state.js","overmind/view/index.js","overmind/view/state.js","overmind/view/actions.js","overmind/app/test/testFields.js","overmind/app/test/testFarms.js","overmind/app/state.js","overmind/app/actions.js","overmind/app/OADAManager/state.js","overmind/app/OADAManager/actions.js","overmind/app/OADAManager/index.js","overmind/app/index.js","overmind/index.js","view/Login/index.js","view/Map/BoundaryDrawing/index.js","view/Map/Fields/index.js","view/Map/index.js","view/TopBar/DrawingToolbar/index.js","view/TopBar/NormalToolbar/OperationDropdown/index.js","view/TopBar/NormalToolbar/MoreDropdown/index.js","view/TopBar/NormalToolbar/index.js","view/TopBar/index.js","view/FieldList/index.js","view/FieldDetails/index.js","view/AcresStatus/AcresPlanned/index.js","view/AcresStatus/AcresStarted/index.js","view/AcresStatus/AcresDone/index.js","view/AcresStatus/index.js","view/Modals/SaveField.js","view/Modals/OADADomain.js","view/Modals/NewOperation.js","view/Modals/NewFarm.js","view/App.js","index.js","view/logo.svg"],"names":["Boolean","window","location","hostname","match","METADATA","REDIRECT","OPTIONS","redirect","metadata","scope","SCOPE","oadaDomain","domain","config","state","_state","actions","onInitialize","localStorage","token","view","Login","login","myState","loading","app","OADAManager","connected","loggedIn","logout","domainChange","data","value","viewDemo","open","fieldId","_","get","field","selectedFieldId","operation","fields","status","currentConnection","acres","geojsonArea","geometry","boundary","merge","farm","farmId","id","bookmarks","_type","_rev","farms","seasons","operations","FieldDetails","close","changeOADAFieldStatus","operationId","clone","newStatus","requests","type","path","oada","delete","connection_id","tree","_id","put","changeLocalFieldStatus","unset","set","onStatusChange","myActions","selectedField","fieldStyles","editingField","fieldsToRender","chain","mapValues","styledField","style","color","fillColor","omitBy","v","k","styleField","highlight","weight","unhighlight","unselectField","Promise","delay","onFieldClick","onMapClick","props","BoundaryDrawing","drawing","addPointToBoundary","Map","uuid","lat","lng","updateBoundaryPoint","pipe","debounce","mutate","latlng","onMarkerMove","onStartDrawing","onStopDrawing","_actions","OADADomain","Modals","onConnectClick","onDomainChange","onConnect","onDomainChanged","onCancel","convertToGEOJSON","points","map","p","getChanges","newBoundary","farm_id","seasonFarm_id","SaveField","seasonField","getSeasonField","newName","name","seasonFieldChanges","fieldChanges","isEqual","cloneDeep","saveChangesToLocalData","editingFieldId","isEmpty","fieldPath","seasonFieldPath","saveChangesToOADA","context","a","push","console","log","createField","addFieldToLocalData","year","addFieldToOADA","farmSearch","search","compact","seasonFarms","f","toLowerCase","key","text","saveField","onSave","onNameChange","onFarmSearchChange","onFarmChange","onFarmAdd","NewFarm","callbackAction","onFarmAddComplete","addOperationToLocalData","addOperationToOADA","ret","substr","NewOperation","saveOperation","addFarmToLocalData","addFarmToOADA","saveFarm","action","onAddField","onSaveField","onCancelField","onEditField","currentField","forEach","coors","onResetCache","resetCache","onLogout","selected","list","label","empty","circular","o","startsWith","selectedOperationId","selectedId","keys","length","selectedOperation","onAdd","TopBar","OperationDropdown","onChange","onOpenChange","onSearch","FieldList","acresStatus","operationFields","seasonFields","planned","started","done","fieldOperation","area","total","Math","round","plannedPercentage","startedPercentage","donePercentage","currentOADA","oadaOrgData","oadaSeasonFarmsIdBy_id","mapKeys","localOrgData","localData","abc123","organizations","testFields","testFarms","getSeasonFarm","user","getAccessToken","promisify","oadaIdClient","getToken","replace","res","access_token","connect","effects","options","then","response","error","connectionId","disconnect","getUserInfo","fetchAndWatch","watchRequests","watch","onFieldChanged","onSeasonsChanged","rewatchRequests","responses","initSeasonFields","fieldsChanged","obj","changeSeasonFields","initSeasonFarms","changed","changeSeasonFarms","theSeasonFields","fieldChange","change","seasonFarm","deleteSeasonFields","deleted","deleteSeasonFarms","changeType","wasDelete","fieldsDeleted","farmsChanged","farmsDeleted","warn","oadaCacheOvermind","namespaced","createHook","overmind","css","height","src","alt","Form","onSubmit","Input","placeholder","evt","Button","marginTop","primary","disabled","onClick","LayerGroup","Polygon","positions","Marker","position","draggable","onMove","oldLatLng","Fields","GeoJSON","bubblingMouseEvents","center","zoom","zoomControl","TileLayer","url","attribution","DrawingToolbar","Toolbar","View","flex","OperationsDropdown","flexDirection","Dropdown","onOpen","onBlur","icon","floating","labeled","button","className","Menu","top","Item","textAlign","iconPosition","target","scrolling","option","MoreDropdown","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","aria-label","event","currentTarget","right","keepMounted","onClose","MenuItem","NormalToolbar","toggleTitle","zIndex","AppBar","TemporaryDrawer","Drawer","variant","width","role","List","index","ListItem","ListItemIcon","ListItemText","Divider","onEditFieldClick","anchor","paddingBottom","alignItems","justifyContent","Text","fontWeight","fontSize","marginLeft","marginBottom","FormControl","component","FormGroup","row","FormControlLabel","control","Checkbox","checked","labelPlacement","AcresPlanned","backgroundColor","paddingLeft","paddingRight","paddingTop","borderRadius","textShadowColor","textShadowOffset","textShadowRadius","AcresStarted","marginRight","AcresDone","AcresStatus","display","farmOpen","setFarmOpen","farmOptions","Modal","size","Header","Content","autoFocus","trigger","border","Icon","overflow","maxHeight","Actions","negative","positive","labelPosition","content","App","createOvermind","devtools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ba4c416a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SCOPE = 'oada.yield:all';\nconst OPENATK_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY';\nconst LOCALHOST_VIP_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\nconst REDIRECT_LOCALHOST = 'http://localhost:8000/oauth2/redirect.html';\nconst REDIRECT_OPENATK = 'http://openatk.com/FieldWorkApp/oauth2/redirect.html';\n\nlet METADATA;\nlet REDIRECT;\nlet oadaDomain = '';\nif (process.env.NODE_ENV !== 'production') {\n  console.log('NODE_ENV = ', process.env.NODE_ENV);\n  METADATA = LOCALHOST_VIP_METADATA;\n  REDIRECT = REDIRECT_LOCALHOST;\n  oadaDomain = 'https://localhost';\n} else {\n  METADATA = OPENATK_METADATA;\n  REDIRECT = REDIRECT_OPENATK;\n}\n\nlet OPTIONS = {\n    redirect: REDIRECT,\n    metadata: METADATA,\n    scope: SCOPE\n};\n\nexport default {\n  OPTIONS,\n  REDIRECT,\n  METADATA,\n  SCOPE,\n  oadaDomain\n}\n","import config from '../../../config'\nexport default {\n  domain: config.oadaDomain\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  onInitialize({ state, actions }) {\n    const domain = window.localStorage['oada:domain'];\n    const token = window.localStorage['oada:token'];\n    if (domain) {\n      state.view.Login.domain = domain\n    }\n    if (domain && token) {\n      //Auto login\n      actions.view.Login.login({token});\n    }\n  },\n  async login({ state, actions }, {token}) {\n    const myState = state.view.Login;\n    let domain = myState.domain;\n    myState.loading = true;\n    domain = domain.match(/^http/) ? domain : 'https://'+myState.domain;\n    await actions.app.OADAManager.login({domain, token});\n    myState.loading = false;\n    if (state.app.OADAManager.connected) {\n      myState.loggedIn = true;\n      //Save domain and token\n      window.localStorage['oada:domain'] = myState.domain;\n      window.localStorage['oada:token'] = state.app.OADAManager.token;\n    }\n  },\n  async logout({ state, actions }) {\n    const myState = state.view.Login;\n    if (state.app.OADAManager.connected) {\n      await actions.app.OADAManager.logout();\n      delete window.localStorage['oada:domain']\n      delete window.localStorage['oada:token']\n    }\n    myState.loggedIn = false;\n  },\n  domainChange({ state }, data) {\n    const myState = state.view.Login;\n    myState.domain = data.value;\n  },\n  viewDemo({ state }, data) {\n    const myState = state.view.Login;\n    myState.loggedIn = true;\n  }\n}\n","import _ from 'lodash';\nimport geojsonArea from '@mapbox/geojson-area';\n\nexport default {\n  open: false,\n  fieldId: ({}, state) => {\n    return _.get(state, `view.Map.selectedField`);\n  },\n  field: ({fieldId: selectedFieldId}, state) => {\n    const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`);\n    if (operation == null || operation.fields == null || selectedFieldId == null) return null;\n    const status = _.get(operation.fields[selectedFieldId], 'status');\n    let field = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      field = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.fields.${selectedFieldId}`); //TODO year\n    } else {\n      field = _.get(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}`); //TODO year, organization\n    }\n    if (field == null) return null;\n    const acres = geojsonArea.geometry(field.boundary) * 0.000247105 //Meters to acres;\n    return _.merge({}, field, {status, acres});\n  },\n  farm: ({field}, state) => {\n    //Get farm for selected field\n    let farm = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      if (_.get(field, 'farm._id')) {\n        const farmId = _.get(state, `app.oadaSeasonFarmsIdBy_id.${_.get(field, 'farm._id')}.id`)\n        farm = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.farms.${farmId}`); //TODO year\n      }\n    } else {\n      if (_.get(field, 'farm.id')) {\n        farm = _.get(state, `app.localData.abc123.seasons.2019.farms.${field.farm.id}`); //TODO year, organization\n      }\n    }\n    return farm;\n  }\n}\n","export default {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    fields: {\n      _type: \"application/vnd.oada.fields.1+json\",\n      _rev: 0,\n      fields: {\n        \"*\": {\n          _type: \"application/vnd.oada.field.1+json\",\n          _rev: 0,\n          farm: {\n            _type: \"application/vnd.oada.farm.1+json\",\n          }\n        }\n      },\n      farms: {\n        \"*\": {\n          _type: \"application/vnd.oada.farm.1+json\",\n          _rev: 0\n        }\n      }\n    },\n    seasons: {\n      _type: \"application/vnd.oada.seasons.1+json\",\n      _rev: 0,\n      \"*\": {\n        _type: \"application/vnd.oada.season.1+json\",\n        _rev: 0,\n        fields: {\n          \"*\": {\n            _type: \"application/vnd.oada.field.1+json\",\n            _rev: 0,\n            operations: {\n              \"*\": {\n                _type: \"application/vnd.oada.operation.1+json\",\n                _rev: 0\n              }\n            }\n          }\n        },\n        farms: {\n          \"*\": {\n            _type: \"application/vnd.oada.farm.1+json\",\n            _rev: 0\n          }\n        },\n        operations: {\n          \"*\": {\n            _type: \"application/vnd.oada.operation.1+json\",\n            _rev: 0\n          }\n        }\n      }\n    }\n  }\n};\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\nimport uuid from 'uuid/v1';\nimport tree from '../../app/OADAManager/tree.js';\n\nexport default {\n  open({state}) {\n    const myState = state.view.FieldDetails;\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.FieldDetails;\n    myState.open = false;\n  },\n  changeOADAFieldStatus({state, actions}, status) {\n    const selectedFieldId = _.get(state, `view.Map.selectedField`);\n    const operationId = _.get(state, `view.TopBar.OperationDropdown.selectedOperationId`)\n\n    let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n    let field = _.clone(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`)) || {}; //TODO year, organization\n    let newStatus = status;\n    if (field.status == status) newStatus = null; //Unchecking\n    field.status = newStatus;\n    if (field.status == null) {\n      let requests = [\n        {  //Remove field to operation\n          type: 'application/vnd.oada.operation.1+json', //TODO oada.put should handle this\n          path: `/bookmarks/seasons/2019/operations/${operationId}/fields/${selectedFieldId}` //TODO year\n        },\n        { //Remove operation to field in season's field's operation list\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${selectedFieldId}/operations/${operationId}` //TODO year\n        }\n      ];\n      return actions.app.oada.delete({requests, connection_id: currentConnection});\n    } else {\n      const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`)\n      let requests = [\n        {  //Add field to operation\n          tree,\n          data: field,\n          type: 'application/vnd.oada.operation.1+json', //TODO oada.put should handle this\n          path: `/bookmarks/seasons/2019/operations/${operationId}/fields/${selectedFieldId}` //TODO year\n        },\n        { //Add operation to field in season's field's operation list\n          tree,\n          data: {_id: operation._id}, //OADA _id\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${selectedFieldId}/operations/${operationId}` //TODO year\n        }\n      ];\n      return actions.app.oada.put({requests, connection_id: currentConnection});\n    }\n  },\n  changeLocalFieldStatus({state}, status) {\n    const myState = state.view.FieldDetails;\n    const selectedFieldId = _.get(state, `view.Map.selectedField`);\n    const operationId = _.get(state, `view.TopBar.OperationDropdown.selectedOperationId`)\n    var field = _.clone(_.get(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`)) || {}; //TODO year, organization\n    var newStatus = status;\n    if (field.status == status) newStatus = null; //Unchecking\n    field.status = newStatus;\n    if (field.status == null) {\n      //Remove field from operation\n      _.unset(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`) //TODO year, organization\n      //Remove operation from season's field's operation list\n      _.unset(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations.${operationId}`) //TODO year, organization\n    } else {\n      //Add field to operation\n      _.set(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields.${selectedFieldId}`, field) //TODO year, organization\n      //Create operations key on season's field list if doesn't exist\n      if (_.get(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations`) == null) _.set(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations`, {}) //TODO year, organization\n      //Add operation to field in season's field's operation list\n      _.set(state, `app.localData.abc123.seasons.2019.fields.${selectedFieldId}.operations.${operationId}`, {}) //TODO year, organization\n    }\n  },\n  onStatusChange({state, actions}, {status}) {\n    const myActions = actions.view.FieldDetails;\n    if (state.app.OADAManager.connected) {\n      myActions.changeOADAFieldStatus(status)\n    } else {\n      myActions.changeLocalFieldStatus(status)\n    }\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  selectedField: null\n}\n","export default {\n  \n}\n","import _ from 'lodash';\n\nexport default {\n  fieldStyles: {},\n  selectedField: null,\n  editingField: null,\n  fields: ({}, state) => {\n    const fieldStyles = _.get(state, `view.Map.fieldStyles`)\n    const editingField = _.get(state, `view.Map.editingField`)\n    const drawingBoundary = _.get(state, `view.Map.BoundaryDrawing.drawing`)\n    const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`)\n    const fieldsToRender = _.get(state, `app.seasonFields`);\n    return _.chain(fieldsToRender).mapValues((field, id) => {\n      if (editingField == id) return null; //Don't show this field.\n      var styledField = _.clone(field);\n      //Add any styles\n      if (fieldStyles[id] != null) styledField.style = fieldStyles[id];\n      //Fill based on status of current operation\n      if (operation) {\n        var color = \"white\"\n        if (operation.fields && operation.fields[id]) {\n          if (operation.fields[id].status == 'planned') color = 'red'\n          if (operation.fields[id].status == 'started') color = 'orange'\n          if (operation.fields[id].status == 'done') color = 'green'\n        }\n        styledField.style = _.merge({}, styledField.style, {fillColor: color, color})\n      }\n      return styledField;\n    }).omitBy((v, k) => {\n      if (v == null) return true;\n    }).value();\n  }\n}\n","import _ from 'lodash';\nimport Promise from 'bluebird';\n\nexport default {\n  styleField: {\n    highlight({state}, fieldId) {\n      if (fieldId) {\n        const myState = _.get(state, 'view.Map');\n        _.set(myState, `fieldStyles.${fieldId}`, {weight: 5})\n      }\n    },\n    unhighlight({state}, fieldId) {\n      if (fieldId) {\n        const myState = _.get(state, 'view.Map');\n        _.set(myState, `fieldStyles.${fieldId}`, {weight: 3})\n      }\n    }\n  },\n  async unselectField({state, actions}) {\n    const myActions = _.get(actions, 'view.Map');\n    const myState = _.get(state, 'view.Map');\n    if (myState.selectedField) {\n      actions.view.FieldDetails.close();\n      myActions.styleField.unhighlight(myState.selectedField);\n      await Promise.delay(200)\n      myState.selectedField = null;\n    }\n  },\n  onFieldClick({state, actions}, {id}) {\n    const myActions = _.get(actions, 'view.Map');\n    const myState = _.get(state, 'view.Map');\n    const drawing = _.get(myState, `BoundaryDrawing.drawing`);\n    if (!drawing) {\n      myActions.styleField.unhighlight(myState.selectedField);\n      myState.selectedField = id;\n      myActions.styleField.highlight(id);\n      actions.view.FieldDetails.open();\n    }\n  },\n  onMapClick({actions}, props) {\n    const myActions = _.get(actions, 'view.Map');\n    myActions.unselectField()\n    //Pass click to boundary drawing\n    myActions.BoundaryDrawing.onMapClick(props)\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  boundary: {},\n  drawing: false\n}\n","import _ from 'lodash';\nimport {pipe, debounce, mutate} from 'overmind';\nimport uuid from 'uuid/v1';\n\nexport default {\n  addPointToBoundary({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    _.set(myState, `boundary.${uuid()}`, [props.lat, props.lng]);\n  },\n  updateBoundaryPoint: pipe(debounce(10), mutate(({state}, props) => {\n    const myState = state.view.Map.BoundaryDrawing;\n    _.set(myState, `boundary.${props.id}`, [props.latlng.lat, props.latlng.lng]);\n  })),\n  onMapClick({state, actions}, {lat, lng}) {\n    const myState = state.view.Map.BoundaryDrawing;\n    const myActions = actions.view.Map.BoundaryDrawing;\n    if (myState.drawing) {\n      myActions.addPointToBoundary({lat, lng});\n    }\n  },\n  onMarkerMove({actions}, props) {\n    const myActions = actions.view.Map.BoundaryDrawing;\n    myActions.updateBoundaryPoint(props);\n  },\n  onStartDrawing({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    myState.boundary = (props || {}).boundary || {};\n    myState.drawing = true;\n  },\n  onStopDrawing({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    myState.drawing = false;\n    myState.boundary = {};\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as BoundaryDrawing from './BoundaryDrawing'\n\nexport const state = {\n  BoundaryDrawing: BoundaryDrawing.state,\n  ..._state\n};\nexport const actions = {\n  BoundaryDrawing: BoundaryDrawing.actions,\n  ..._actions\n}\n","import config from '../../../config'\nexport default {\n  OADADomain: {\n    open: false,\n    domain: config.oadaDomain\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../app/OADAManager/tree\";\n\nexport default {\n  OADADomain: {\n    open({state}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.open = true;\n    },\n    close({state}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.open = false;\n    },\n    onConnectClick({actions}) {\n      const myActions = actions.view.Modals.OADADomain;\n      myActions.open();\n    },\n    onDomainChange({state}, {domain}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.domain = domain;\n    },\n    async onConnect({actions, state}) {\n      const myState = state.view.Modals.OADADomain;\n      const myActions = actions.view.Modals.OADADomain;\n      const {domain} = myState;\n      myState.loading = true;\n      await actions.app.OADAManager.onDomainChanged({domain});\n      myState.loading = false;\n      myActions.close()\n    },\n    onCancel({actions}) {\n      const myActions = actions.view.Modals.OADADomain;\n      myActions.close();\n    }\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\n\nfunction convertToGEOJSON(points) {\n  var boundary = {\n    type: \"Polygon\",\n    \"coordinates\": [_.map(points, (p) => {return [p[1], p[0]]})] //Flip lat/lng and add array around\n  }\n  return boundary;\n}\nfunction getChanges({state, actions}, {fieldId, newBoundary, farmId, farm_id, seasonFarm_id}) {\n  const myState = state.view.Modals.SaveField;\n  //See if name or boundary has changed\n  let seasonField = actions.app.getSeasonField(fieldId);\n  let newName = myState.name;\n  var seasonFieldChanges = {};\n  var fieldChanges = {};\n  //Get changes the effect both\n  if (newName != seasonField.name) seasonFieldChanges.name = newName;\n  if (_.isEqual(newBoundary, seasonField.boundary) == false) seasonFieldChanges.boundary = newBoundary;\n\n  fieldChanges = _.cloneDeep(seasonFieldChanges)\n  //See if farm has changed\n  if (seasonFarm_id) {\n    //Connected to oada\n    if (!seasonField.farm || seasonField.farm._id != seasonFarm_id) {\n      seasonFieldChanges.farm = {_id: seasonFarm_id};\n      //TODO this isn't right, we shouldn't be adding a farm in the function that calls this if it isn't our current year\n      fieldChanges.farm = {_id: farm_id};\n    }\n  } else {\n    //Local\n    if (!seasonField.farm || seasonField.farm.id != farmId) {\n      seasonFieldChanges.farm = {id: farmId};\n      fieldChanges.farm = {id: farmId};\n    }\n  }\n  //TODO only change field if is current year\n  return {fieldChanges, seasonFieldChanges};\n}\nfunction saveChangesToLocalData({state}, editingFieldId, fieldChanges, seasonFieldChanges) {\n  if (_.isEmpty(fieldChanges) && _.isEmpty(seasonFieldChanges)) return;\n  const fieldPath = `app.localData.abc123.fields.fields.${editingFieldId}`; //TODO organization\n  _.set(state, fieldPath, _.merge({}, _.get(state, fieldPath), fieldChanges));\n  const seasonFieldPath = `app.localData.abc123.seasons.2019.fields.${editingFieldId}` //TODO year, organization\n  _.set(state, seasonFieldPath, _.merge({}, _.get(state, seasonFieldPath), seasonFieldChanges));\n}\nasync function saveChangesToOADA(context, editingFieldId, fieldChanges, seasonFieldChanges) {\n  const { state, actions } = context;\n  if (_.isEmpty(fieldChanges) && _.isEmpty(seasonFieldChanges)) return;\n  //Add to OADA\n  let requests = [];\n  if (_.isEmpty(fieldChanges) == false) {\n    requests.push({\n      tree,\n      data: fieldChanges,\n      path: `/bookmarks/fields/fields/${editingFieldId}`\n    })\n  }\n  if (_.isEmpty(seasonFieldChanges) == false) {\n    requests.push({\n      tree,\n      data: seasonFieldChanges,\n      path: `/bookmarks/seasons/2019/fields/${editingFieldId}` //TODO year\n    })\n  }\n  console.log('fieldChanges', fieldChanges);\n  console.log('seasonFieldChanges', seasonFieldChanges);\n  const connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  await actions.app.oada.put({requests, connection_id})\n}\n\nfunction createField(context, {boundary, farmId, farm_id}) {\n  const { state } = context;\n  const myState = state.view.Modals.SaveField;\n  var field = {\n    name: myState.name,\n    boundary: boundary,\n    farm: (farm_id) ?\n      {\n        _id: farm_id //OADA farm resource id\n      }\n      :\n      {\n        id: farmId\n      }\n  }\n  return field\n}\nfunction addFieldToLocalData(context, {field}) {\n  const { state } = context;\n  const id = uuid();\n  _.set(state, `app.localData.abc123.fields.fields.${id}`, field); //TODO organization\n  _.set(state, `app.localData.abc123.seasons.2019.fields.${id}`, {...field, operations: {}, year: '2019'}); //TODO year, organization\n  return id;\n}\nasync function addFieldToOADA(context, {field, seasonField}) {\n  const { state, actions } = context;\n  const id = uuid();\n  //Add to OADA\n  let requests = [];\n  if (field) {\n    requests.push({\n      tree,\n      data: field,\n      path: `/bookmarks/fields/fields/${id}`\n    })\n  }\n  if (seasonField) {\n    requests.push({\n      tree,\n      data: {...seasonField, operations: {}, year: '2019'}, //TODO year\n      path: `/bookmarks/seasons/2019/fields/${id}` //TODO year\n    })\n  }\n  let connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  await actions.app.oada.put({requests, connection_id})\n}\n\nexport default {\n  open({state, actions}) {\n    const myState = state.view.Modals.SaveField;\n    const editingField = _.get(state, `view.Map.editingField`);\n    if (editingField == null) {\n      myState.name = \"\";\n    } else {\n      let field = actions.app.getSeasonField(editingField);\n      //Populate the name in the modal popup\n      myState.name = field.name;\n      if (state.app.OADAManager.connected) {\n        //Get season farm id by oada id\n        const farmId = _.get(state, `app.oadaSeasonFarmsIdBy_id.${_.get(field, 'farm._id')}.id`)\n        myState.farmId = farmId;\n      } else {\n        myState.farmId = _.get(field, 'farm.id');\n      }\n    }\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.Modals.SaveField;\n    myState.open = false;\n  },\n  async saveField(context) {\n    const {state} = context;\n    const myState = state.view.Modals.SaveField;\n    //Convert the field to geojson\n    const points = _.get(state, `view.Map.BoundaryDrawing.boundary`)\n    const boundary = convertToGEOJSON(points);\n\n    //Create farm or get existing farms id (cannot update an existing farm here)\n    let farmId = myState.farmId;\n    let farm_id = null;\n    let seasonFarm_id = null;\n    let farm = myState.farm;\n    if (farm) {\n      if (state.app.OADAManager.connected) {\n        //Get farm_id\n        farm_id = _.get(state, `app.oadaOrgData.fields.farms.${farmId}._id`)\n        //Get seasonFarm_id from farmId\n        seasonFarm_id = _.get(state, `app.seasonFarms.${farmId}._id`)\n      }\n    }\n    //Update or create field\n    let editingFieldId = _.get(state, `view.Map.editingField`);\n    if (editingFieldId) {\n      //We are editing a field find the changes, if any\n      const {fieldChanges, seasonFieldChanges} = getChanges(context, {fieldId: editingFieldId, newBoundary: boundary, farmId, farm_id, seasonFarm_id})\n      if (state.app.OADAManager.connected) {\n        saveChangesToOADA(context, editingFieldId, fieldChanges, seasonFieldChanges)\n      } else {\n        saveChangesToLocalData(context, editingFieldId, fieldChanges, seasonFieldChanges)\n      }\n    } else {\n      //TODO only add field if is current year, otherwise just seasonfield\n      if (state.app.OADAManager.connected) {\n        const field = await createField(context, {boundary, farm_id});\n        const seasonField = await createField(context, {boundary, farm_id: seasonFarm_id});\n        await addFieldToOADA(context, {field, seasonField})\n      } else {\n        const field = await createField(context, {boundary, farm, farmId: farmId})\n        await addFieldToLocalData(context, {field})\n      }\n    }\n  },\n  onSave({actions, state}) {\n    const myActions = actions.view.Modals.SaveField;\n    myActions.saveField();\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n    state.view.Map.editingField = null;\n    myActions.close();\n  },\n  onCancel({actions, state}) {\n    const myActions = actions.view.Modals.SaveField;\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n    state.view.Map.editingField = null;\n    myActions.close();\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.SaveField;\n    myState.name = name;\n  },\n  onFarmSearchChange({state}, value) {\n    const myState = state.view.Modals.SaveField;\n    myState.farmSearch = value;\n  },\n  onFarmChange({state}, {id}) {\n    const myState = state.view.Modals.SaveField;\n    myState.farmId = id;\n  },\n  onFarmAdd({actions}) {\n    actions.view.Modals.NewFarm.open({callbackAction: 'view.Modals.SaveField.onFarmAddComplete'});\n  },\n  onFarmAddComplete({state}, {id}) {\n    const myState = state.view.Modals.SaveField;\n    //Update farmId\n    myState.farmId = id;\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\nexport default {\n  open: false,\n  name: '',\n  farmSearch: '',\n  farms: ({farmSearch: search}, state) => {\n    return _.compact(_.map(state.app.seasonFarms, (f, id) => {\n      if (!f || search != '' && f.name && f.name.toLowerCase().search(search.toLowerCase()) == -1) return null;\n      return {key: id, text: f.name, value: id};\n    }))\n  },\n  farmId: null,\n  farm: ({farmId, farms}, state) => {\n    if (farmId) {\n      return _.get(state, `app.seasonFarms.${farmId}`)\n    }\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\nfunction createOperation(context, {name}) {\n  var operation = {\n    name,\n    fields: {}\n  }\n  return operation;\n}\n\nfunction addOperationToLocalData({state}, {operation}) {\n  const id = uuid();\n  _.set(state, `app.localData.abc123.seasons.2019.operations.${id}`, operation); //TODO year, organization\n  return id;\n}\nasync function addOperationToOADA({state, actions}, {operation}) {\n  //Add to OADA\n  const id = uuid();\n  let requests = [\n    {\n      tree,\n      data: operation,\n      path: `/bookmarks/seasons/2019/operations/${id}` //TODO year\n    }\n  ];\n  const connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  const ret = await actions.app.oada.put({requests, connection_id})\n  const _id = _.get(ret, 'responses.0.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  return {id, _id}\n}\n\nexport default {\n  open({state}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.name = '';\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.open = false;\n  },\n  async saveOperation(context) {\n    const {state} = context;\n    const myState = state.view.Modals.NewOperation;\n    const operation = createOperation(context, {name: myState.name})\n    if (state.app.OADAManager.connected) {\n      const {id, _id} = await addOperationToOADA(context, {operation});\n      _.set(state, `view.TopBar.OperationDropdown.selected`, id)\n    } else {\n      const id = await addOperationToLocalData(context, {operation});\n      _.set(state, `view.TopBar.OperationDropdown.selected`, id)\n    }\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.name = name;\n  },\n  onCancel({actions}) {\n    const myActions = actions.view.Modals.NewOperation;\n    myActions.close();\n  },\n  async onSave({actions}) {\n    const myActions = actions.view.Modals.NewOperation;\n    await myActions.saveOperation();\n    myActions.close();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  name: ''\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\nfunction createFarm(context, {name}) {\n  var farm = {\n    name\n  }\n  return farm;\n}\nfunction addFarmToLocalData(context, {farm}) {\n  const { state } = context;\n  const id = uuid();\n  _.set(state, `app.localData.abc123.farms.${id}`, farm); //TODO organization\n  _.set(state, `app.localData.abc123.seasons.2019.farms.${id}`, farm); //TODO year, organization\n  return id;\n}\nasync function addFarmToOADA(context, {farm}) {\n  const { state, actions } = context;\n  const id = uuid();\n  //TODO only add to season farms depending on what year is selected, need to figure out return values for that as well (since may only have one request)\n  //Add to OADA\n  let requests = [\n    {\n      tree,\n      data: farm,\n      path: `/bookmarks/fields/farms/${id}`\n    },\n    {\n      tree,\n      data: farm,\n      path: `/bookmarks/seasons/2019/farms/${id}` //TODO year\n    },\n  ];\n  let connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  const ret = await actions.app.oada.put({requests, connection_id})\n  const farm_id = _.get(ret, 'responses.0.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  if (farm_id == null) throw 'OADA did not return an _id when creating a farm.'\n  const seasonFarm_id = _.get(ret, 'responses.1.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  if (seasonFarm_id == null) throw 'OADA did not return an _id when creating a season farm.'\n  return {farm_id, seasonFarm_id, id};\n}\nexport default {\n  open({state}, {callbackAction}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.name = '';\n    myState.open = true;\n    myState.callbackAction = callbackAction || null;\n  },\n  close({state}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.open = false;\n  },\n  async saveFarm(context) {\n    const {state, actions} = context;\n    const myState = state.view.Modals.NewFarm;\n    const farm = createFarm(context, {name: myState.name})\n    if (state.app.OADAManager.connected) {\n      const {farm_id, seasonFarm_id, id} = await addFarmToOADA(context, {farm});\n      if (myState.callbackAction) {\n        const action = _.get(actions, myState.callbackAction);\n        if (!action) throw `callbackAction: ${myState.callbackAction} does not exist.`\n        action({farm_id, seasonFarm_id, id});\n      }\n    } else {\n      const id = await addFarmToLocalData(context, {farm});\n      if (myState.callbackAction) {\n        const action = _.get(actions, myState.callbackAction);\n        if (!action) throw `callbackAction: ${myState.callbackAction} does not exist.`\n        action({id});\n      }\n    }\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.name = name;\n  },\n  onCancel({actions}) {\n    const myActions = actions.view.Modals.NewFarm;\n    myActions.close();\n  },\n  async onSave({actions}) {\n    const myActions = actions.view.Modals.NewFarm;\n    await myActions.saveFarm();\n    myActions.close();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  name: ''\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as SaveField from './SaveField'\nimport * as NewOperation from './NewOperation'\nimport * as NewFarm from './NewFarm'\n\nexport const state = {\n  SaveField: SaveField.state,\n  NewOperation: NewOperation.state,\n  NewFarm: NewFarm.state,\n  ..._state\n};\nexport const actions = {\n  SaveField: SaveField.actions,\n  NewOperation: NewOperation.actions,\n  NewFarm: NewFarm.actions,\n  ..._actions\n}\n","import _ from 'lodash'\nimport uuid from 'uuid/v1'\n\nexport default {\n  onAddField({actions}) {\n    actions.view.Map.BoundaryDrawing.onStartDrawing();\n  },\n  onSaveField({actions}) {\n    actions.view.Modals.SaveField.open();\n  },\n  onCancelField({state, actions}) {\n    state.view.Map.editingField = null; //Stop editing if we were\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n  },\n  onEditField({actions, state}) {\n    const currentField = state.view.FieldDetails.field;\n    //Hide the current boundary\n    state.view.Map.editingField = state.view.FieldDetails.fieldId;\n    //Convert to drawing boundary: {<rand-id>: [lat, lng], ...}\n    let boundary = {};\n    _.forEach(_.get(currentField, 'boundary.coordinates.0') || [], (coors) => { //TODO will not work with holes in fields etc\n      boundary[uuid()] = [coors[1], coors[0]];\n    });\n    //Start drawing\n    actions.view.Map.BoundaryDrawing.onStartDrawing({boundary});\n    //Close the details drawer\n    actions.view.Map.unselectField()\n  },\n  async onResetCache({actions}) {\n    await actions.app.oada.resetCache();\n    //Refresh the page\n    //location.reload();\n  },\n  async onLogout({actions}) {\n    await actions.view.Login.logout()\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\n\nexport default {\n  open: false,\n  selected: null,\n  search: '',\n  list: ({selected, operations}, state) => {\n    //Get operations, filtering by search\n    const search = _.get(state, `view.TopBar.OperationDropdown.search`)\n    return _.omitBy(_.mapValues(operations, ({name}, id) => {\n      if (id == null) return null; //Not an operation, a _key for oada\n      if (search != '' && name.search(search) == -1) return null;\n      return {\n        text: name,\n        value: id,\n        selected: (selected == id),\n        label: { color: 'green', empty: true, circular: true }\n      }\n    }), _.isEmpty)\n  },\n  operations: ({}, state) => {\n    let operations = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      operations = _.omitBy(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations`) || {}, (o, k) => {return _.startsWith(k, '_')}); //TODO year\n    } else {\n      operations = _.get(state, `app.localData.abc123.seasons.2019.operations`) //TODO year, organization\n    }\n    return operations\n  },\n  selectedOperationId: ({selected, operations}, state) => {\n    let selectedId = selected;\n    if (selectedId == null && _.keys(operations).length > 0) selectedId = _.keys(operations)[0];\n    return selectedId;\n  },\n  selectedOperation: ({selectedOperationId, operations}, state) => {\n    return operations[selectedOperationId];\n  }\n}\n","export default {\n  onAdd({state, actions}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.open = false;\n    return actions.view.Modals.NewOperation.open()\n  },\n  onChange({state}, {id}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.selected = id;\n    myState.open = false;\n  },\n  onOpenChange({state}, {open}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.open = open;\n  },\n  onSearch({state}, {search}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.search = search;\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as OperationDropdown from './OperationDropdown'\n\nexport const state = {\n  OperationDropdown: OperationDropdown.state,\n  ..._state\n};\nexport const actions = {\n  OperationDropdown: OperationDropdown.actions,\n  ..._actions\n}\n","export default {\n\n}\n","import _state from './state'\nimport _actions from './actions'\n\nimport * as Login from './Login'\nimport * as FieldDetails from './FieldDetails'\nimport * as FieldList from './FieldList'\nimport * as Map from './Map'\nimport * as Modals from './Modals'\nimport * as TopBar from './TopBar'\n\nexport const state = {\n  Login: Login.state,\n  FieldDetails: FieldDetails.state,\n  FieldList: FieldList.state,\n  Map: Map.state,\n  Modals: Modals.state,\n  TopBar: TopBar.state,\n  ..._state\n};\nexport const actions = {\n  Login: Login.actions,\n  FieldDetails: FieldDetails.actions,\n  FieldList: FieldList.actions,\n  Map: Map.actions,\n  Modals: Modals.actions,\n  TopBar: TopBar.actions,\n  ..._actions\n}\nexport const onInitialize = ({actions}) => {\n  actions.view.Login.onInitialize();\n}\n","import _ from 'lodash';\n\nexport default {\n  \n}\n","import _ from 'lodash'\nexport default {\n\n}\n","export default {\n  \"42f60b10-784c-11ea-8dfd-a3e960f56105\": {\n    \"name\": \"1004 G-N\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97584700584412,\n            41.4628134964027\n          ],\n          [\n            -84.97539639472963,\n            41.462765256171906\n          ],\n          [\n            -84.97495651245119,\n            41.46275721612994\n          ],\n          [\n            -84.97424840927125,\n            41.46250797433487\n          ],\n          [\n            -84.97405529022217,\n            41.46203360827181\n          ],\n          [\n            -84.97410893440247,\n            41.46044164256161\n          ],\n          [\n            -84.97139453887941,\n            41.46130195211675\n          ],\n          [\n            -84.96770381927492,\n            41.46327177680542\n          ],\n          [\n            -84.97010707855226,\n            41.46330393671208\n          ],\n          [\n            -84.9764907360077,\n            41.46306273702346\n          ],\n          [\n            -84.97634053230287,\n            41.45965368547904\n          ],\n          [\n            -84.97462391853334,\n            41.46024867436535\n          ],\n          [\n            -84.9746346473694,\n            41.461004463187685\n          ],\n          [\n            -84.97491359710695,\n            41.46126175098986\n          ],\n          [\n            -84.97492432594301,\n            41.46172004235903\n          ],\n          [\n            -84.97529983520509,\n            41.46208988917259\n          ],\n          [\n            -84.97581481933594,\n            41.46234717266838\n          ],\n          [\n            -84.9761688709259,\n            41.46278133625282\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\"\n    }\n  },\n  \"7c0ce950-784c-11ea-bfa5-97fea4f9bfd9\": {\n    \"name\": \"1001 HO-N\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97347593307495,\n            41.44864540647965\n          ],\n          [\n            -84.97626543045044,\n            41.44856498851091\n          ],\n          [\n            -84.97617959976196,\n            41.44784122230691\n          ],\n          [\n            -84.977445602417,\n            41.44782513852177\n          ],\n          [\n            -84.97759580612183,\n            41.44862932289387\n          ],\n          [\n            -84.97886180877687,\n            41.448532821295515\n          ],\n          [\n            -84.97866868972778,\n            41.44205080201176\n          ],\n          [\n            -84.97654438018799,\n            41.442887227983185\n          ],\n          [\n            -84.97549295425415,\n            41.44425443952937\n          ],\n          [\n            -84.97323989868165,\n            41.44608806625952\n          ],\n          [\n            -84.97272491455078,\n            41.44689227216232\n          ],\n          [\n            -84.97330427169801,\n            41.44726220353039\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\",\n    }\n  },\n  \"8ab27420-784c-11ea-bfa5-97fea4f9bfd9\": {\n    \"name\": \"1002 HO-S\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97152328491212,\n            41.44697269220437\n          ],\n          [\n            -84.97148036956789,\n            41.44166475561947\n          ],\n          [\n            -84.97152328491212,\n            41.44111785263252\n          ],\n          [\n            -84.97347593307495,\n            41.441085681725035\n          ],\n          [\n            -84.97373342514038,\n            41.44073180069027\n          ],\n          [\n            -84.97635126113893,\n            41.44053877385792\n          ],\n          [\n            -84.97645854949953,\n            41.44134304853828\n          ],\n          [\n            -84.97607231140138,\n            41.44161649965898\n          ],\n          [\n            -84.97611522674562,\n            41.44240467585386\n          ],\n          [\n            -84.97540712356569,\n            41.44398099952468\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\"\n    }\n  }\n}\n","export default {\n  \"42f08cd0-784c-11ea-8dfd-a3e960f56105\": {\n    name: \"Bowman and Bowman\"\n  },\n  \"52f08cd0-784c-11ea-8dfd-a3e960f56105\": {\n    name: \"Martz Farms\"\n  }\n}\n","import testFields from './test/testFields';\nimport testFarms from './test/testFarms';\nimport _ from 'lodash';\nimport geojsonArea from '@mapbox/geojson-area';\n\nexport default {\n  acresStatus: ({}, state) => {\n    //Get id's of all fields in this operation\n    const operationFields = state.app.operationFields;\n    const seasonFields = state.app.seasonFields;\n    //Loop through each field, totaling acres.\n    let planned = 0;\n    let started = 0;\n    let done = 0;\n    _.forEach(operationFields, (fieldOperation, key) => {\n      if (fieldOperation == null) return;\n      //Get field\n      let field = seasonFields[key];\n      if (field == null) return;\n      //Compute area of field boundary\n      let area = geojsonArea.geometry(field.boundary) * 0.000247105 //Meters to acres;\n      if (fieldOperation.status == 'planned') {\n        planned += area;\n      } else if (fieldOperation.status == 'started') {\n        started += area;\n      } else if (fieldOperation.status == 'done') {\n        done += area;\n      }\n    });\n    let total = planned + started + done;\n    return {\n      planned: Math.round(planned),\n      plannedPercentage: Math.round((planned / (total || 1)) * 100),\n      started: Math.round(started),\n      startedPercentage: Math.round((started / (total || 1)) * 100),\n      done: Math.round(done),\n      donePercentage: Math.round((done / (total || 1)) * 100),\n    };\n  },\n  seasonFarms: ({}, state) => {\n    let farms;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      farms = _.chain(state).get(`app.oada.${currentConnection}.bookmarks.seasons.2019.farms`).omitBy((v, k) => { //TODO year\n        if (_.startsWith(k, '_')) return true;\n        if (v == null) return true;\n      }).value();\n    } else {\n      farms = _.get(state, `app.localData.abc123.seasons.2019.farms`) //TODO year, organization\n    }\n    return farms || {};\n  },\n  seasonFields: ({}, state) => {\n    let fields;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      fields = _.chain(state).get(`app.oada.${currentConnection}.bookmarks.seasons.2019.fields`).omitBy((v, k) => { //TODO year\n        if (_.startsWith(k, '_')) return true;\n        if (v == null) return true;\n      }).value();\n    } else {\n      fields = _.get(state, `app.localData.abc123.seasons.2019.fields`) //TODO year, organization\n    }\n    return fields || {};\n  },\n  operationFields: ({}, state) => {\n    let operationId = _.get(state, 'view.TopBar.OperationDropdown.selectedOperationId');\n    let operationFields = [];\n    if (operationId != null) {\n      if (_.get(state, `app.OADAManager.connected`) == true) {\n        let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n        operationFields = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.operations.${operationId}.fields`) || []; //TODO year\n      } else {\n        operationFields = _.get(state, `app.localData.abc123.seasons.2019.operations.${operationId}.fields`) || []; //TODO year, organization\n      }\n    }\n    return operationFields; // {<field-id>: {status: 'planned'}, ...}\n  },\n  currentOADA: ({}, state) => {\n    if (state.app.OADAManager.connected) {\n      const currentConnection = state.app.OADAManager.currentConnection;\n      if (!currentConnection) return;\n      return state.app.oada[currentConnection];\n    }\n  },\n  oadaOrgData: ({currentOADA}) => {\n    if (currentOADA) {\n      return currentOADA.bookmarks;\n    }\n  },\n  oadaSeasonFarmsIdBy_id: ({oadaOrgData}, state) => {\n    return _.chain(oadaOrgData).get(`seasons.2019.farms`).mapValues((v, k) => {\n      return {_id: v._id, id: k};\n    }).mapKeys((v, k) => {\n      return v._id; //Key of oada id\n    }).value();  //{_id: <oada-res-id>, id: <path-id>}\n  },\n  localOrgData: ({localData}) => {\n    return localData.abc123; //TODO organization\n  },\n  localData: {\n    organizations: {\n      'abc123': {\n        name: 'Default'\n      }\n    },\n    'abc123': {\n      fields: {\n        fields: {\n          /*'a': {\n            id: 'a',\n            name: 'Back 40',\n            boundary: '' //GEOJSON\n          }*/\n          ...testFields,\n        },\n        farms: {\n          ...testFarms,\n        }\n      },\n      seasons: {\n        /*'2019': {\n          fields: {\n            '<field-uuid>': {\n              season: 2018,\n              boundary: <geo-json>,\n              operations: {\n                '<operation-uuid>': {}\n              }\n            }\n          },\n          operations: {\n            '<operation-uuid>': {\n              id: '<operation-uuid>',\n              year: 2019,\n              name: 'Corn Planting',\n              fields: {\n                '<field-uuid>': {\n                  status: 'Planned',\n                }\n              }\n            }\n          }\n        }*/\n        '2019': {\n          fields: {\n            ...testFields,\n          },\n          farms: {\n            ...testFarms,\n          },\n          operations: {\n            /*'<operation-uuid>': {\n              id: '<operation-uuid>',\n              year: 2019,\n              name: 'Corn Planting',\n              fields: {\n                '<field-uuid>': {\n                  status: 'Planned',\n                }\n              }\n            }*/\n          }\n        }\n      }\n    }\n  }\n}\n","import _ from 'lodash'\nexport default {\n  getSeasonField({state}, id) {\n    let fields = [];\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      fields = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.fields`) //TODO year\n    } else {\n      fields = _.get(state, `app.localData.abc123.seasons.2019.fields`) //TODO year, organization\n    }\n    return fields[id];\n  },\n  getSeasonFarm({state}, id) {\n    let farms = [];\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      farms = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2019.farms`) //TODO year\n    } else {\n      farms = _.get(state, `app.localData.abc123.seasons.2019.farms`) //TODO year, organization\n    }\n    return farms[id];\n  }\n}\n","import _ from 'lodash';\nexport default {\n  connected: false,\n  currentConnection: null,\n  domain: null,\n  token: null,\n  user: ({currentConnection}, state) => {\n    if (!currentConnection) return null;\n    return _.get(state, 'app.oada.localhost.users.me');\n  }\n}\n","import tree from './tree';\nimport config from '../../../config'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport { browser as oadaIdClient } from '@oada/oada-id-client/index.js'\nconst getAccessToken = Promise.promisify(oadaIdClient.getAccessToken)\n\nexport default {\n  async getToken({state}, domain) {\n    /*\n      Get token from local storage or request one\n    */\n    const myState = state.app.OADAManager;\n    if (myState.token) return myState.token;\n    let res = await getAccessToken(domain.replace(/^https?:\\/\\//, ''), {\n      metadata: config.METADATA,\n      scope: config.SCOPE,\n      redirect: config.REDIRECT\n    })\n    return res.access_token;\n  },\n  async connect({actions, state, effects}, {domain, token}) {\n    const myState = state.app.OADAManager;\n    const myActions = actions.app.OADAManager;\n    if (token) myState.token = token;\n    token = await myActions.getToken(domain);\n    return actions.app.oada.connect({\n      token,\n      domain: domain,\n      options: config.OPTIONS\n    }).then((response) => {\n      if (!response.error) {\n        myState.currentConnection = response.connectionId;\n        myState.token = response.token;\n        myState.connected = true;\n        //Unselect local opeation\n        state.view.TopBar.OperationDropdown.selected = null;\n      }\n      return response;\n    })\n  },\n  async logout({actions, state}) {\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    await actions.app.oada.disconnect({connection_id})\n  },\n  async getUserInfo({actions, state}) {\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    let requests = [{\n      path: '/users/me',\n    }];\n    await actions.app.oada.get({requests, connection_id})\n  },\n  async fetchAndWatch({actions, state}) {\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //Fetch field and seasons\n    let watchRequests = [\n      {\n        path: '/bookmarks/fields',\n        tree,\n        watch: {\n          actions: [actions.app.OADAManager.onFieldChanged]\n        }\n      },\n      {\n        path: '/bookmarks/seasons',\n        tree,\n        watch: {\n          actions: [actions.app.OADAManager.onSeasonsChanged]\n        },\n      }\n    ];\n    const ret = await actions.app.oada.get({requests: watchRequests, connection_id})\n    let rewatchRequests = [];\n    if (ret.responses[0].error) {\n      //On 404 create and rewatch\n      if (ret.responses[0].status != 404) throw ret.responses[0].error;\n      //Create fields and try to watch again\n      let requests = [{\n        tree,\n        data: {\n          fields: {},\n          farms: {}\n        },\n        path: '/bookmarks/fields'\n      }];\n      //Create\n      await actions.app.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[0]);\n    }\n    if (ret.responses[1].error) {\n      //On 404 create and rewatch\n      if (ret.responses[1].status != 404) throw ret.responses[0].error;\n      //Create seasons and try to watch again\n      let requests = [{\n        tree,\n        data: {},\n        path: '/bookmarks/seasons'\n      }];\n      //Create\n      await actions.app.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[1]);\n    }\n    if (rewatchRequests.length > 0) await actions.app.oada.get({requests: rewatchRequests, connection_id})\n  },\n  initSeasonFields({state, actions}) {\n    /*\n      Put changes from master field list into season fields\n    */\n    const myActions = actions.app.OADAManager;\n    //Get master field list fields\n    var fieldsChanged = [];\n    _.forEach(_.get(state, 'app.oadaOrgData.fields.fields'), (obj, key) => {\n      if (_.startsWith(key, '_')) return;\n      fieldsChanged.push({fieldId: key, name: obj.name, boundary: obj.boundary});\n    })\n    return myActions.changeSeasonFields(fieldsChanged);\n  },\n  initSeasonFarms({state, actions}) {\n    /*\n      Put changes from master farm list into season farms\n    */\n    const myActions = actions.app.OADAManager;\n    //Get master field list fields\n    var changed = [];\n    _.forEach(_.get(state, 'app.oadaOrgData.fields.farms'), (obj, key) => {\n      if (_.startsWith(key, '_')) return;\n      changed.push({id: key, name: obj.name});\n    })\n    return myActions.changeSeasonFarms(changed);\n  },\n  async changeSeasonFields({state, actions}, fieldsChanged) {\n    /*\n      Apply any changes to season fields\n    */\n    console.log('change season fields', fieldsChanged);\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let theSeasonFields = state.app.seasonFields;\n    _.forEach(fieldsChanged, (fieldChange) => {\n      let data = {};\n      let seasonField = theSeasonFields[fieldChange.fieldId]\n      if (fieldChange.name) {\n        if (seasonField == null || seasonField.name != fieldChange.name) {\n          data.name = fieldChange.name;\n        }\n      }\n      if (fieldChange.boundary) {\n        if (seasonField == null || _.isEqual(seasonField.boundary, fieldChange.boundary) == false) {\n          data.boundary = fieldChange.boundary;\n        }\n      }\n      if (_.isEmpty(data)) return;\n      data.id = fieldChange.fieldId;\n      requests.push(\n        { //Change season's field's name, boundary\n          tree,\n          data,\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${fieldChange.fieldId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.put({requests, connection_id})\n  },\n  async changeSeasonFarms({state, actions}, changed) {\n    /*\n      Apply any changes to season farms\n    */\n    console.log('change season farms', changed);\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFarms = state.app.seasonFarms;\n    _.forEach(changed, (change) => {\n      let data = {};\n      let seasonFarm = seasonFarms[change.id]\n      //Check if name changed\n      if (change.name) {\n        if (seasonFarm == null || seasonFarm.name != change.name) {\n          data.name = change.name;\n        }\n      }\n      if (_.isEmpty(data)) return;\n      data.id = change.id;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          data,\n          type: 'application/vnd.oada.farm.1+json',\n          path: `/bookmarks/seasons/2019/farms/${data.id}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.put({requests, connection_id})\n  },\n  async deleteSeasonFields({state, actions}, deleted) {\n    console.log('delete season fields', deleted);\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFields = state.app.seasonFields;\n    _.forEach(deleted, (fieldId) => {\n      let seasonField = seasonFields[fieldId]\n      if (!seasonField) return;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2019/fields/${fieldId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.delete({requests, connection_id})\n  },\n  async deleteSeasonFarms({state, actions}, deleted) {\n    console.log('delete season farms', deleted);\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFarms = state.app.seasonFarms;\n    _.forEach(deleted, (farmId) => {\n      let seasonFarm = seasonFarms[farmId]\n      if (!seasonFarm) return;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          type: 'application/vnd.oada.farm.1+json',\n          path: `/bookmarks/seasons/2019/farms/${farmId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.delete({requests, connection_id})\n  },\n  async login({actions, state}, {domain, token}) {\n    const myState = state.app.OADAManager;\n    const myActions = actions.app.OADAManager;\n    myState.domain = domain;\n    const {error} = await myActions.connect({domain, token});\n    if (!error) {\n      await myActions.getUserInfo();\n      await myActions.fetchAndWatch();\n      await myActions.initSeasonFarms();\n      await myActions.initSeasonFields();\n    }\n  },\n  async onFieldChanged({state, actions}, props) {\n    /*\n      If a farm/field in the master list changed, apply change to this years season fields\n    */\n    console.log('onFieldChanged', props);\n    const myActions = actions.app.OADAManager;\n    let changeType = _.get(props, 'response.change.type');\n    if (changeType == 'merge' || changeType == 'delete') {\n      let deleted = false;\n      const wasDelete = _.get(props, 'response.change.wasDelete');\n      if (changeType == 'deleted' || wasDelete) deleted = true;\n      let fieldsChanged = [];\n      let fieldsDeleted = [];\n      _.forEach(_.get(props, 'response.change.body.data.fields'), (obj, key) => {\n        if (deleted) {\n          fieldsDeleted.push(key);\n        } else {\n          fieldsChanged.push({fieldId: key, deleted, name: _.get(obj, 'name'), boundary: _.get(obj, 'boundary')});\n        }\n      })\n      if (fieldsDeleted.length > 0) myActions.deleteSeasonFields(fieldsDeleted);\n      if (fieldsChanged.length > 0) myActions.changeSeasonFields(fieldsChanged);\n      let farmsChanged = [];\n      let farmsDeleted = [];\n      _.forEach(_.get(props, 'response.change.body.data.farms'), (obj, key) => {\n        if (deleted) {\n          farmsDeleted.push(key);\n        } else {\n          farmsChanged.push({farmId: key, deleted, name: _.get(obj, 'name')});\n        }\n      })\n      if (farmsDeleted.length > 0) myActions.deleteSeasonFarms(farmsDeleted);\n      if (farmsChanged.length > 0) myActions.changeSeasonFarms(farmsChanged);\n    } else {\n      console.warn(\"onFieldChanged: Unsupported change type:\", changeType)\n    }\n  },\n  onSeasonsChanged({state, actions}, props) {\n\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _state from './state'\nimport _actions from './actions'\n\nimport * as OADAManager from './OADAManager'\nimport oadaCacheOvermind from '@oada/oada-cache-overmind'\n\nconst oada =  oadaCacheOvermind('app.oada')\n\nexport const state = {\n  oada: oada.state,\n  OADAManager: OADAManager.state,\n  ..._state\n};\nexport const actions = {\n  oada: oada.actions,\n  OADAManager: OADAManager.actions,\n  ..._actions\n}\nexport const effects = {\n  oada: oada.effects\n}\n","import { createHook } from \"overmind-react\"\n\nimport { namespaced } from 'overmind/config'\n\nimport * as view from './view'\nimport * as app from './app'\n\nexport const config = namespaced({\n  view,\n  app,\n})\n\nexport default createHook()\n","import React from 'react';\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport _ from 'lodash'\nimport overmind from '../../overmind'\nimport { Input, Button, Form, Dropdown } from 'semantic-ui-react'\n\nfunction Login() {\n  const { state, actions } = overmind();\n  const myState = state.view.Login;\n  const myActions = actions.view.Login;\n\n  return (\n    <div css={css`\n      height: 100vh;\n      width: 100vw;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      background: url(imgs/login-background.jpg) no-repeat center center fixed;\n      background-size: cover;\n    `}>\n      <div css={css`\n        width: 400px;\n        display: flex;\n        flex-direction: column;\n        background: #fff;\n        padding: 15px;\n        padding-top: 7px;\n        border-radius: 5px;\n      `}>\n        <img css={{\n          height: 300\n        }} src={`imgs/logo2.svg`} alt={'logo'} />\n        <Form css={css`\n          display: flex;\n          flex-direction: column;\n        `} onSubmit={myActions.login}>\n          <Input placeholder='OADA Domain...' value={myState.domain} onChange={(evt, data) => myActions.domainChange(data)} />\n          <Button\n            style={{marginTop: 7}} primary\n            loading={myState.loading}\n            disabled={myState.loading}>\n            Connect to Your OADA Cloud\n          </Button>\n          <Button\n            style={{marginTop: 7}}\n            onClick={myActions.viewDemo}\n            disabled={myState.loading}>\n            View Demo\n          </Button>\n        </Form>\n      </div>\n      <a css={css`\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        font-size: 1.2em;\n        color: #FFFFFF;\n        cursor: pointer;\n      `} onClick={myActions.logout}\n      >Logout</a>\n    </div>\n  );\n}\n\nexport default Login;\n","/*\n  Adds points/polygons to map when drawing a boundary\n*/\nimport React, { Component } from 'react';\nimport { Marker, Polygon, LayerGroup } from 'react-leaflet'\n\nimport overmind from '../../../overmind'\nimport _ from 'lodash';\n\nexport default function BoundaryDrawing() {\n  const {state, actions} = overmind();\n  const myState = state.view.Map.BoundaryDrawing;\n  const myActions = actions.view.Map.BoundaryDrawing;\n\n  const { boundary, drawing } = myState;\n  const { onMarkerMove } = myActions;\n\n  if (!drawing) return null;\n  return (\n    <LayerGroup>\n      <Polygon positions={_.map(boundary)} />\n      {_.map(boundary, (latlng, id) => <Marker position={latlng} key={id} draggable onMove={({latlng, oldLatLng}) => onMarkerMove({latlng, oldLatLng, id})}/>)}\n    </LayerGroup>\n  );\n}\n","/*\n  Adds points/polygons to map when drawing a boundary\n*/\nimport React from 'react';\nimport { Marker, Polygon, LayerGroup, GeoJSON } from 'react-leaflet'\n\nimport overmind from '../../../overmind'\n\nimport _ from 'lodash';\nimport uuid from 'uuid/v1'\n\nexport default function Fields() {\n  const {state, actions} = overmind();\n  const myState = state.view.Map;\n  const myActions = actions.view.Map;\n\n  const { fields } = myState;\n  const { onFieldClick } = myActions;\n\n  if (_.keys(fields).length == 0) return null;\n  return (\n    <LayerGroup>\n      {_.map(fields, (field, id) =>\n        <GeoJSON\n          bubblingMouseEvents={false}\n          style={field.style}\n          data={field.boundary}\n          key={uuid()} //Must be uuid to unmount/mount when field style or boundary changes\n          onClick={(evt) => {onFieldClick({id})}} />\n      )}\n    </LayerGroup>\n  );\n}\n","import React from 'react';\nimport { Map as LeafletMap, Marker, Popup, TileLayer, ZoomControl } from 'react-leaflet'\nimport './index.css'\n\nimport overmind from '../../overmind'\nimport _ from 'lodash'\nimport BoundaryDrawing from './BoundaryDrawing'\nimport Fields from './Fields'\n\nexport default function Map() {\n  const { actions, state } = overmind();\n  const myActions = actions.view.Map;\n  return (\n      <LeafletMap center={[41.448068, -84.972648]} zoom={13} onClick={(evt) => myActions.onMapClick({...evt.latlng})} zoomControl={false}>\n        <TileLayer\n          url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n        />\n        <BoundaryDrawing />\n        <Fields />\n      </LeafletMap>\n  );\n}\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport {TextInput, View} from 'react-native'\n\nimport overmind from '../../../overmind'\n\nexport default function DrawingToolbar() {\n  const { actions } = overmind();\n  const myActions = actions.view.TopBar;\n  return (\n    <Toolbar>\n      <View style={{flex: 1}} />\n      <Button color=\"inherit\" onClick={() => myActions.onCancelField()}>Cancel</Button>\n      <Button color=\"inherit\" onClick={() => myActions.onSaveField()}>Save</Button>\n    </Toolbar>\n  );\n}\n","import React from 'react'\nimport { Dropdown, Input } from 'semantic-ui-react'\nimport {View, Text} from 'react-native'\nimport _ from 'lodash'\n/*const tagOptions = [\n  {\n    text: 'Important',\n    value: 'Important',\n    label: { color: 'red', empty: true, circular: true },\n  }\n]*/\n\nimport overmind from '../../../../overmind'\n\nexport default function OperationsDropdown({style}) {\n  const { actions, state } = overmind();\n  const myActions = actions.view.TopBar.OperationDropdown;\n  const myState = state.view.TopBar.OperationDropdown;\n\n  const selectedOperation = myState.selectedOperation;\n  const operations = myState.list;\n  const open = myState.open;\n  const search = myState.search;\n  const onAdd = myActions.onAdd;\n  const onChange = myActions.onChange;\n  const onOpenChange = myActions.onOpenChange;\n  const onSearch = myActions.onSearch;\n\n  return (\n    <View style={style}>\n      <View style={{flexDirection: 'row'}}>\n        {\n           selectedOperation ?\n            <Dropdown\n              open={open}\n              onOpen={() => {onOpenChange({open: true})}}\n              onBlur={() => {onOpenChange({open: false})}}\n              text={selectedOperation.name}\n              icon='cog'\n              floating\n              labeled\n              button\n              className='icon'\n            >\n              <Dropdown.Menu style={{top: 42}}>\n                <Dropdown.Item style={{textAlign: 'center'}} text='Add New Operation' value='Add New Operation' onClick={(evt, data)=>{onAdd()}} />\n                <Input icon='search' iconPosition='left' className='search' style={{marginTop: 3}} value={search} onChange={(evt)=>{onSearch({search: evt.target.value})}} />\n                <Dropdown.Menu scrolling>\n                  {_.map(operations, option => (\n                    <Dropdown.Item key={option.value} {...option} onClick={(evt, data)=>{onChange({id: data.value})}} />\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown.Menu>\n            </Dropdown>\n          :\n            <Dropdown\n              onClick={() => {onAdd()}}\n              open={false}\n              text={'Add New Operation'}\n              icon='cog'\n              floating\n              labeled\n              button\n              className='icon' />\n        }\n        <View style={{flex: 1}} />\n      </View>\n    </View>\n  )\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\nimport {View} from 'react-native'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport overmind from '../../../../overmind'\n\nexport default function MoreDropdown({style}) {\n  const { actions, state } = overmind();\n  const myActions = actions.view.TopBar;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  return (\n    <View style={style}>\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Menu\" onClick={handleClick}>\n        <MoreIcon  />\n      </IconButton>\n      <Menu\n        style={{top: 50, right: 5}}\n        open={Boolean(anchorEl)}\n        keepMounted\n        anchorEl={anchorEl}\n        onClose={handleClose}>\n          <MenuItem onClick={()=>{handleClose(); myActions.onAddField()}}>Add Field</MenuItem>\n          {\n            !state.view.FieldDetails.open ? null :\n            <MenuItem onClick={()=>{handleClose(); myActions.onEditField()}}>Edit Field</MenuItem>\n          }\n          <MenuItem onClick={()=>{handleClose(); myActions.onLogout()}}>Logout</MenuItem>\n          {/*<MenuItem onClick={()=>{handleClose(); myActions.onResetCache()}}>Reset Cache</MenuItem>*/}\n      </Menu>\n    </View>\n  );\n}\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListIcon from '@material-ui/icons/Menu';\n\nimport OperationDropdown from './OperationDropdown';\nimport MoreDropdown from './MoreDropdown';\n\nexport default function NormalToolbar({toggleTitle}) {\n  return (\n    <Toolbar>\n      {/*<IconButton edge=\"start\" style={{marginRight: 7}} color=\"inherit\" aria-label=\"Menu\" onClick={()=>{console.log('TODO Menu Pressed')}}>\n        <ListIcon />\n      </IconButton>*/}\n      <OperationDropdown style={{flex: 1}} />\n      {/*<Button color=\"inherit\">2019</Button>*/}\n      <MoreDropdown />\n    </Toolbar>\n  );\n}\n","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport {View} from 'react-native'\n\nimport DrawingToolbar from './DrawingToolbar';\nimport NormalToolbar from './NormalToolbar';\n\nimport overmind from '../../overmind'\n\nexport default function TopBar() {\n  const {state} = overmind();\n  const drawing = state.view.Map.BoundaryDrawing.drawing;\n  return (\n    <View style={{zIndex: 1201}}>\n      <AppBar position=\"static\">\n        {\n          drawing ? <DrawingToolbar /> : <NormalToolbar />\n        }\n      </AppBar>\n    </View>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Text, View } from 'react-native';\n\nexport default function TemporaryDrawer() {\n  return (\n    <Drawer open={false} variant=\"persistent\">\n      <View style={{height: 64}} />\n      <div\n        style={{width: 250}}\n        role=\"presentation\">\n        <List>\n          {['Inbox', 'Starred', 'Send email'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {View, Text} from 'react-native';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport _ from 'lodash';\n\nimport overmind from '../../overmind'\n\nexport default function FieldDetails() {\n  const {state, actions} = overmind();\n  const myState = state.view.FieldDetails;\n  const myActions = actions.view.FieldDetails;\n\n  let { open, field, farm } = myState;\n  const { onStatusChange, onEditFieldClick } = myActions;\n\n  if (!Boolean(field)) {\n    open = false;\n    field = {};\n  }\n  return (\n    <Drawer anchor=\"bottom\" open={open} variant=\"persistent\">\n      <View style={{paddingBottom: 20}}>\n        <View style={{flexDirection: 'column', alignItems: 'center'}}>\n          <View style={{justifyContent: 'left', flexDirection: 'row', alignItems: 'center', marginTop: 10}}>\n              <Text style={{fontWeight: 'bold', fontSize: 20}}>\n                {field.name}\n              </Text>\n              <Text style={{marginLeft: 7, fontSize: 18}}>\n                {`- ${Math.round(field.acres)} ac`}\n              </Text>\n          </View>\n          {\n            farm == null ? null :\n            <Text style={{fontSize: 15, color: '#999', marginTop: 2, marginBottom: 7}}>\n              {farm.name}\n            </Text>\n          }\n        </View>\n        <View style={{justifyContent: 'center', flexDirection: 'row'}}>\n          <FormControl component=\"fieldset\">\n            <FormGroup aria-label=\"position\" name=\"position\" row>\n              <FormControlLabel\n                value=\"bottom\"\n                control={<Checkbox color=\"primary\" checked={(field.status == \"planned\") || false} onChange={()=>{onStatusChange({status: 'planned'})}} />}\n                label=\"Planned\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"bottom\"\n                control={<Checkbox color=\"primary\" checked={(field.status == \"started\") || false} onChange={()=>{onStatusChange({status: 'started'})}} />}\n                label=\"Started\"\n                labelPlacement=\"bottom\"\n              />\n              <FormControlLabel\n                value=\"bottom\"\n                control={<Checkbox color=\"primary\" checked={(field.status == \"done\") || false} onChange={()=>{onStatusChange({status: 'done'})}} />}\n                label=\"Done\"\n                labelPlacement=\"bottom\"\n              />\n            </FormGroup>\n          </FormControl>\n        </View>\n      </View>\n    </Drawer>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresPlanned({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#c50003', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.planned} ac (${acresStatus.plannedPercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresStarted({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#eeb705', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5, marginRight: 7, marginLeft: 7}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.started} ac (${acresStatus.startedPercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresDone({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#5bb25f', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.done} ac (${acresStatus.donePercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React, { Component } from 'react';\nimport { Text, View } from 'react-native';\n\nimport AcresPlanned from './AcresPlanned'\nimport AcresStarted from './AcresStarted'\nimport AcresDone from './AcresDone'\n\nimport overmind from '../../overmind'\n\nexport default function AcresStatus() {\n  const {state} = overmind();\n  const acresStatus = state.app.acresStatus;\n  const selectedOperationId = state.view.TopBar.OperationDropdown.selectedOperationId;\n  if (!selectedOperationId) return null;\n  return (\n    //z-index of leaflet map is 400\n    <View style={{position: \"absolute\", display: \"flex\", flexDirection: 'row', justifyContent: \"center\", alignItems: \"center\", top: 68, zIndex: 401, width: '100vw'}}>\n      <AcresPlanned acresStatus={acresStatus} />\n      <AcresStarted acresStatus={acresStatus} />\n      <AcresDone acresStatus={acresStatus} />\n    </View>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Form, Button, Modal, Input, Dropdown, Icon } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function SaveField() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.SaveField;\n  const myActions = actions.view.Modals.SaveField;\n\n  const open = myState.open;\n  const name = myState.name;\n  const onNameChange = myActions.onNameChange;\n  const onCancel = myActions.onCancel;\n  const onSave = myActions.onSave;\n  const [farmOpen, setFarmOpen] = React.useState(false);\n\n  const farm = myState.farm || {};\n  const farmOptions = myState.farms;\n\n  return (\n    <Modal open={myState.open} size='tiny'>\n      <Modal.Header>\n        {(state.view.Map.editingField) ? 'Edit Field' : 'New Field'}\n      </Modal.Header>\n      <Modal.Content>\n        <View style={{flexDirection: 'column', zIndex: 1}}>\n          <Text style={{marginBottom: 7}}>Field Name:</Text>\n          <Form onSubmit={() => onSave()}>\n            <Input autoFocus placeholder='Back 40' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n          </Form>\n          <Text style={{marginBottom: 7, marginTop: 15}}>Farm:</Text>\n          <Dropdown\n            trigger={\n              <View style={{paddingLeft: 13, paddingRight: 7, border: '1px solid rgba(34,36,38,.15)', borderRadius: '.28571429rem', height: 38, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                <Text style={{color: (farm.name ? 'rgba(0,0,0,.87)' : 'rgba(0,0,0,.25)')}}>\n                  {farm.name || 'Select a farm'}\n                </Text>\n                <Icon name='caret down' style={{paddingBottom: 17}}/>\n              </View>\n            }\n            icon={null}\n            onOpen={() => {setFarmOpen(true)}}\n            onBlur={() => {setFarmOpen(false)}}\n            open={farmOpen}>\n            <Dropdown.Menu style={{overflow: 'hidden', maxHeight: '50vh'}}>\n              <Dropdown.Item style={{textAlign: 'center'}} text='Add New Farm' value='Add New Farm' onClick={(evt, data)=>{myActions.onFarmAdd(); setFarmOpen(false);}} />\n              <Input icon='search' iconPosition='left' className='search' value={myState.farmSearch} onChange={(evt)=>{myActions.onFarmSearchChange(evt.target.value)}} />\n              <Dropdown.Menu scrolling>\n                {farmOptions.map((option) => (\n                  <Dropdown.Item key={option.value} {...option} onClick={() => {myActions.onFarmChange({id: option.value}); setFarmOpen(false);}} />\n                ))}\n              </Dropdown.Menu>\n            </Dropdown.Menu>\n          </Dropdown>\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function OADADomain() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.OADADomain;\n  const myActions = actions.view.Modals.OADADomain;\n\n  const { open, domain } = myState;\n  const { onDomainChange, onCancel, onConnect } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>Connect to OADA Server</Modal.Header>\n      <Modal.Content>\n        <Text>Domain:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Input style={{flex: 1, marginTop: 7}} placeholder='https://oada.openatk.com' value={domain} onChange={(evt) => {onDomainChange({domain: evt.target.value})}} />\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Connect' onClick={() => onConnect({})} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input, Form } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function NewOperation() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.NewOperation;\n  const myActions = actions.view.Modals.NewOperation;\n\n  const { open, name } = myState;\n  const { onNameChange, onCancel, onSave } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>New Operation</Modal.Header>\n      <Modal.Content>\n        <Text>Name:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Form style={{flex: 1}} onSubmit={onSave}>\n            <Input autoFocus style={{width: '100%', marginTop: 7}} placeholder='Corn Planting' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n          </Form>\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function NewFarm() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.NewFarm;\n  const myActions = actions.view.Modals.NewFarm;\n\n  const { open, name } = myState;\n  const { onNameChange, onCancel, onSave } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>New Farm</Modal.Header>\n      <Modal.Content>\n        <Text>Name:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Input style={{flex: 1, marginTop: 7}} placeholder='Bowman Farms' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Login from './Login'\nimport Map from './Map'\nimport TopBar from './TopBar'\nimport FieldList from './FieldList'\nimport FieldDetails from './FieldDetails'\nimport AcresStatus from './AcresStatus'\n\nimport ModalSaveField from './Modals/SaveField';\nimport ModalOADADomain from './Modals/OADADomain';\nimport ModalNewOperation from './Modals/NewOperation';\nimport ModalNewFarm from './Modals/NewFarm';\n\nimport overmind from '../overmind'\n\nfunction App() {\n  const { state } = overmind();\n\n  if (!state.view.Login.loggedIn) {\n    return <Login />\n  }\n\n  return (\n    <div className=\"App\">\n\n      <TopBar />\n      <AcresStatus />\n      <Map />\n      <FieldList />\n      <FieldDetails />\n      <ModalSaveField />\n      <ModalOADADomain />\n      <ModalNewOperation />\n      <ModalNewFarm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nimport App from './view/App'\n\nimport { createOvermind } from \"overmind\";\nimport { Provider } from \"overmind-react\";\nimport { config } from './overmind'\n\nconst app = createOvermind(config,\n{\n  devtools: true,\n});\n\nReactDOM.render(\n  <Provider value={app}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}