{"version":3,"sources":["serviceWorker.js","config/index.js","overmind/view/Login/index.js","overmind/view/Login/state.js","overmind/view/Login/actions.js","overmind/view/FieldDetails/state.js","overmind/app/OADAManager/tree.js","overmind/view/FieldDetails/index.js","overmind/view/FieldDetails/actions.js","overmind/view/FieldList/index.js","overmind/view/FieldList/state.js","overmind/view/FieldList/actions.js","overmind/view/Map/state.js","overmind/view/Map/actions.js","overmind/view/Map/BoundaryDrawing/index.js","overmind/view/Map/BoundaryDrawing/state.js","overmind/view/Map/BoundaryDrawing/actions.js","overmind/view/Map/index.js","overmind/view/Modals/state.js","overmind/view/Modals/actions.js","overmind/view/Modals/SaveField/actions.js","overmind/view/Modals/SaveField/index.js","overmind/view/Modals/SaveField/state.js","overmind/view/Modals/NewOperation/actions.js","overmind/view/Modals/NewOperation/index.js","overmind/view/Modals/NewOperation/state.js","overmind/view/Modals/NewFarm/actions.js","overmind/view/Modals/NewFarm/index.js","overmind/view/Modals/NewFarm/state.js","overmind/view/Modals/index.js","overmind/view/TopBar/actions.js","overmind/view/TopBar/OperationDropdown/index.js","overmind/view/TopBar/OperationDropdown/state.js","overmind/view/TopBar/OperationDropdown/actions.js","overmind/view/TopBar/index.js","overmind/view/TopBar/state.js","overmind/view/index.js","overmind/view/state.js","overmind/view/actions.js","overmind/app/test/testFields.js","overmind/app/test/testFarms.js","overmind/app/state.js","overmind/app/actions.js","overmind/app/OADAManager/state.js","overmind/app/OADAManager/actions.js","overmind/app/OADAManager/index.js","overmind/app/index.js","overmind/index.js","view/Login/index.js","view/Map/BoundaryDrawing/index.js","view/Map/Fields/index.js","view/Map/index.js","view/TopBar/DrawingToolbar/index.js","view/TopBar/NormalToolbar/OperationDropdown/index.js","view/TopBar/NormalToolbar/MoreDropdown/index.js","view/TopBar/NormalToolbar/MyLocation/index.js","view/TopBar/NormalToolbar/MyLocation/Button.js","view/TopBar/NormalToolbar/index.js","view/TopBar/index.js","view/FieldList/index.js","view/FieldDetails/index.js","view/AcresStatus/AcresPlanned/index.js","view/AcresStatus/AcresStarted/index.js","view/AcresStatus/AcresDone/index.js","view/AcresStatus/index.js","view/Modals/SaveField.js","view/Modals/OADADomain.js","view/Modals/NewOperation.js","view/Modals/NewFarm.js","view/App.js","index.js","view/logo.svg"],"names":["Boolean","window","location","hostname","match","METADATA","REDIRECT","OPTIONS","redirect","metadata","scope","SCOPE","oadaDomain","state","domain","config","actions","onInitialize","console","log","localStorage","token","view","Login","login","myState","loading","app","OADAManager","connected","loggedIn","logout","domainChange","data","value","viewDemo","open","fieldId","_","get","field","selectedFieldId","operation","status","currentConnection","acres","geojsonArea","geometry","boundary","merge","farm","farmId","id","showAddOperationButton","isEmpty","bookmarks","_type","_rev","fields","farms","seasons","operations","_state","FieldDetails","close","changeOADAFieldStatus","operationId","clone","newStatus","unset","requests","type","path","oada","delete","connection_id","set","tree","_id","put","changeLocalFieldStatus","onStatusChange","myActions","onAddNewOperationClick","TopBar","OperationDropdown","onAdd","selectedField","fieldStyles","editingField","center","zoom","bounds","fieldsToRender","chain","mapValues","styledField","style","color","fillColor","omitBy","v","k","zoomTo","latitude","longitude","Promise","delay","styleField","highlight","weight","unhighlight","unselectField","onFieldClick","onMapClick","props","BoundaryDrawing","zoomBounds","compact","map","f","geo","featureCollection","GeoJSON","parse","BBox","isFinite","drawing","addPointToBoundary","Map","uuid","lat","lng","updateBoundaryPoint","pipe","debounce","mutate","latlng","onMarkerMove","onStartDrawing","onStopDrawing","_actions","OADADomain","Modals","onConnectClick","onDomainChange","onConnect","onDomainChanged","onCancel","convertToGEOJSON","points","coordinates","p","length","push","getChanges","newBoundary","farm_id","seasonFarm_id","SaveField","seasonField","getSeasonField","newName","name","seasonFieldChanges","fieldChanges","isEqual","cloneDeep","saveChangesToLocalData","editingFieldId","fieldPath","seasonFieldPath","saveChangesToOADA","context","a","createField","addFieldToLocalData","year","addFieldToOADA","farmSearch","search","seasonFarms","toLowerCase","key","text","saveField","onSave","onNameChange","onFarmSearchChange","onFarmChange","onFarmAdd","NewFarm","callbackAction","onFarmAddComplete","addOperationToLocalData","addOperationToOADA","ret","substr","NewOperation","saveOperation","addFarmToLocalData","addFarmToOADA","saveFarm","action","onMyLocationClick","coords","onLocationChange","onAddField","onSaveField","onCancelField","onEditField","currentField","coors","pop","forEach","onResetCache","resetCache","onLogout","selected","list","label","empty","circular","o","startsWith","selectedOperationId","selectedId","keys","selectedOperation","onChange","onOpenChange","onSearch","FieldList","acresStatus","operationFields","seasonFields","planned","started","done","fieldOperation","area","total","Math","round","plannedPercentage","startedPercentage","donePercentage","currentOADA","oadaOrgData","oadaSeasonFarmsIdBy_id","isNull","mapKeys","oadaSeasonFarms_idByFarm_id","localOrgData","localData","abc123","organizations","testFields","testFarms","getSeasonFarm","user","getAccessToken","promisify","oadaIdClient","getToken","replace","res","access_token","connect","effects","options","cache","then","response","error","connectionId","disconnect","getUserInfo","fetchAndWatch","watchRequests","watch","onFieldChanged","rewatchRequests","responses","initSeasonFields","fieldsChanged","obj","changeSeasonFields","initSeasonFarms","changed","changeSeasonFarms","theSeasonFields","fieldChange","seasonFarmId","change","seasonFarm","deleteSeasonFields","deleted","deleteSeasonFarms","changes","isArray","warn","watchPath","fieldsDeleted","farmsChanged","farmsDeleted","changePathArr","split","changePath","join","pickBy","isUndefined","onSeasonsChanged","oadaCacheOvermind","namespaced","createHook","overmind","css","height","src","alt","Form","onSubmit","Input","placeholder","evt","Button","marginTop","primary","disabled","onClick","LayerGroup","Polygon","positions","Marker","position","draggable","onMove","oldLatLng","Fields","bubblingMouseEvents","zoomControl","TileLayer","url","attribution","minZoom","maxZoom","DrawingToolbar","Toolbar","View","flex","OperationsDropdown","flexDirection","Dropdown","onOpen","onBlur","icon","floating","labeled","button","className","Menu","top","Item","textAlign","iconPosition","target","scrolling","option","MoreDropdown","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","aria-label","event","currentTarget","right","keepMounted","onClose","MenuItem","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","isGeolocationAvailable","isGeolocationEnabled","useEffect","NormalToolbar","toggleTitle","zIndex","AppBar","TemporaryDrawer","Drawer","variant","width","role","List","index","ListItem","ListItemIcon","ListItemText","Divider","onEditFieldClick","anchor","paddingBottom","alignItems","justifyContent","Text","fontWeight","fontSize","marginLeft","marginBottom","FormControl","component","FormGroup","row","FormControlLabel","control","Checkbox","checked","labelPlacement","AcresPlanned","backgroundColor","paddingLeft","paddingRight","paddingTop","borderRadius","textShadowColor","textShadowOffset","textShadowRadius","AcresStarted","marginRight","AcresDone","AcresStatus","display","farmOpen","setFarmOpen","farmOptions","Modal","size","Header","Content","autoFocus","trigger","border","Icon","overflow","maxHeight","Actions","negative","positive","labelPosition","content","App","createOvermind","devtools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"obAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,yBCVFC,EACAC,E,mFAkBW,GACbC,QAPY,CACVC,SAJFF,EAduB,uDAmBrBG,SANFJ,EAhBuB,4kDAuBrBK,MAxBU,kBA6BZJ,WACAD,WACAM,MA/BY,iBAgCZC,WAtBe,ICPJC,ECFE,CACbC,OAAQC,EAAOH,YDEJI,EEJE,CACbC,aADa,YACqB,IAAnBJ,EAAkB,EAAlBA,MAAOG,EAAW,EAAXA,QACpBE,QAAQC,IAAI,wBACZ,IAAML,EAASb,OAAOmB,aAAa,eAC7BC,EAAQpB,OAAOmB,aAAa,cAC9BN,IACFD,EAAMS,KAAKC,MAAMT,OAASA,GAExBA,GAAUO,GAEZL,EAAQM,KAAKC,MAAMC,MAAM,CAACH,WAGxBG,MAbO,cAa6B,OAAD,yHAA3BX,EAA2B,EAA3BA,MAAOG,EAAoB,EAApBA,QAAYK,EAAQ,EAARA,MACzBI,EAAUZ,EAAMS,KAAKC,MACvBT,EAASW,EAAQX,OACrBW,EAAQC,SAAU,EAClBZ,EAASA,EAAOV,MAAM,SAAWU,EAAS,WAAWW,EAAQX,OAJtB,SAKjCE,EAAQW,IAAIC,YAAYJ,MAAM,CAACV,SAAQO,UALN,OAMvCI,EAAQC,SAAU,EACdb,EAAMc,IAAIC,YAAYC,YACxBJ,EAAQK,UAAW,EAEnB7B,OAAOmB,aAAa,eAAiBK,EAAQX,OAC7Cb,OAAOmB,aAAa,cAAgBP,EAAMc,IAAIC,YAAYP,OAXrB,+CAcnCU,OA3BO,YA2BqB,OAAD,iHAAlBlB,EAAkB,EAAlBA,MAAOG,EAAW,EAAXA,QACdS,EAAUZ,EAAMS,KAAKC,OACvBV,EAAMc,IAAIC,YAAYC,UAFK,gCAGvBb,EAAQW,IAAIC,YAAYG,SAHD,cAItB9B,OAAOmB,aAAa,sBACpBnB,OAAOmB,aAAa,cALE,OAO/BK,EAAQK,UAAW,EAPY,8CASjCE,aApCa,WAoCWC,GAAM,EAAfpB,MACSS,KAAKC,MACnBT,OAASmB,EAAKC,OAExBC,SAxCa,WAwCOF,GAAM,EAAfpB,MACaS,KAAKC,MACnBO,UAAW,I,0BCvCR,GACbM,MAAM,EACNC,QAAS,WAAKxB,GACZ,OADuB,eAChByB,IAAEC,IAAI1B,EAAN,2BAET2B,MAAO,WAA6B3B,GAAW,IAA7B4B,EAA4B,EAArCJ,QACDK,EAAYJ,IAAEC,IAAI1B,EAAN,mDAClB,GAAuB,MAAnB4B,EAAyB,OAAO,KACpC,IAAME,EAASL,IAAEC,IAAIG,EAAN,iBAA2BD,EAA3B,WAAqD,MAChED,EAAQ,KACZ,GAAiD,GAA7CF,IAAEC,IAAI1B,EAAN,6BAAmD,CACrD,IAAI+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACxB2B,EAAQF,IAAEC,IAAI1B,EAAN,mBAAyB+B,EAAzB,0CAA4EH,SAEpFD,EAAQF,IAAEC,IAAI1B,EAAN,mDAAyD4B,IAEnE,GAAa,MAATD,EAAe,OAAO,KAC1B,IAAMK,EAA+C,UAAvCC,IAAYC,SAASP,EAAMQ,UACzC,OAAOV,IAAEW,MAAM,GAAIT,EAAO,CAACG,SAAQE,WAErCK,KAAM,WAAUrC,GAAW,IAAnB2B,EAAkB,EAAlBA,MAEFU,EAAO,KACX,GAAiD,GAA7CZ,IAAEC,IAAI1B,EAAN,6BAAmD,CACrD,IAAI+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACxB,GAAIyB,IAAEC,IAAIC,EAAO,YAAa,CAC5B,IAAMW,EAASb,IAAEC,IAAI1B,EAAN,qCAA2CyB,IAAEC,IAAIC,EAAO,YAAxD,QACfU,EAAOZ,IAAEC,IAAI1B,EAAN,mBAAyB+B,EAAzB,yCAA2EO,UAGhFb,IAAEC,IAAIC,EAAO,aACfU,EAAOZ,IAAEC,IAAI1B,EAAN,kDAAwD2B,EAAMU,KAAKE,MAG9E,OAAOF,GAETG,uBAAwB,WAAKxC,GAC3B,GADsC,eACW,GAA7CyB,IAAEC,IAAI1B,EAAN,6BAAmD,CACrD,IAAI+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACxB,OAAOyB,IAAEgB,QAAQhB,IAAEC,IAAI1B,EAAN,mBAAyB+B,EAAzB,wCAEjB,OAAON,IAAEgB,QAAQhB,IAAEC,IAAI1B,EAAN,mD,iBC5CR,GACb0C,UAAW,CACTC,MAAO,wCACPC,KAAM,EACNC,OAAQ,CACNF,MAAO,qCACPC,KAAM,EACNC,OAAQ,CACN,IAAK,CACHF,MAAO,oCACPC,KAAM,EACNP,KAAM,CACJM,MAAO,sCAIbG,MAAO,CACL,IAAK,CACHH,MAAO,mCACPC,KAAM,KAIZG,QAAS,CACPJ,MAAO,sCACPC,KAAM,EACN,IAAK,CACHD,MAAO,qCACPC,KAAM,EACNC,OAAQ,CACN,IAAK,CACHF,MAAO,oCACPC,KAAM,EACNI,WAAY,CACV,IAAK,CACHL,MAAO,4CAKfG,MAAO,CACL,IAAK,CACHH,MAAO,mCACPC,KAAM,IAGVI,WAAY,CACV,IAAK,CACHL,MAAO,wCACPC,KAAM,QC9CL5C,EAAQiD,EACR9C,ECAE,CACboB,KADa,YACC,EAARvB,MACkBS,KAAKyC,aACnB3B,MAAO,GAEjB4B,MALa,YAKE,EAARnD,MACiBS,KAAKyC,aACnB3B,MAAO,GAEjB6B,sBATa,WAS2BtB,GAAS,IAA1B9B,EAAyB,EAAzBA,MAAOG,EAAkB,EAAlBA,QACtByB,EAAkBH,IAAEC,IAAI1B,EAAN,0BAClBqD,EAAc5B,IAAEC,IAAI1B,EAAN,qDAEhB+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACpB2B,EAAQF,IAAE6B,MAAM7B,IAAEC,IAAI1B,EAAN,mBAAyB+B,EAAzB,8CAAgFsB,EAAhF,mBAAsGzB,MAAuB,GAC7I2B,EAAYzB,EAGhB,GAFIH,EAAMG,QAAUA,IAAQyB,EAAY,MACxC5B,EAAMG,OAASyB,EACK,MAAhB5B,EAAMG,OAAgB,CAGxBL,IAAE+B,MAAMxD,EAAR,mBAA2B+B,EAA3B,8CAAkFsB,EAAlF,mBAAwGzB,IAExGH,IAAE+B,MAAMxD,EAAR,mBAA2B+B,EAA3B,0CAA8EH,EAA9E,uBAA4GyB,IAG5G,IAAII,EAAW,CACb,CACEC,KAAM,wCACNC,KAAK,sCAAD,OAAwCN,EAAxC,mBAA8DzB,IAEpE,CACE8B,KAAM,oCACNC,KAAK,kCAAD,OAAoC/B,EAApC,uBAAkEyB,KAG1ElD,EAAQW,IAAI8C,KAAKC,OAAO,CAACJ,WAAUK,cAAe/B,QAC7C,CAGLN,IAAEsC,IAAI/D,EAAN,mBAAyB+B,EAAzB,8CAAgFsB,EAAhF,mBAAsGzB,GAAmBD,GAER,MAA7GF,IAAEC,IAAI1B,EAAN,mBAAyB+B,EAAzB,0CAA4EH,EAA5E,iBAAmHH,IAAEsC,IAAI/D,EAAN,mDAAyD4B,EAAzD,eAAuF,IAE9MH,IAAEsC,IAAI/D,EAAN,mBAAyB+B,EAAzB,0CAA4EH,EAA5E,uBAA0GyB,GAAe,IAGzH,IAAMxB,EAAYJ,IAAEC,IAAI1B,EAAN,mDACdyD,EAAW,CACb,CACEO,OACA5C,KAAMO,EACN+B,KAAM,wCACNC,KAAK,sCAAD,OAAwCN,EAAxC,mBAA8DzB,IAEpE,CACEoC,OACA5C,KAAM,CAAC6C,IAAKpC,EAAUoC,KACtBP,KAAM,oCACNC,KAAK,kCAAD,OAAoC/B,EAApC,uBAAkEyB,KAG1ElD,EAAQW,IAAI8C,KAAKM,IAAI,CAACT,WAAUK,cAAe/B,MAGnDoC,uBAjEa,WAiEmBrC,GAAS,IAAjB9B,EAAgB,EAAhBA,MAEhB4B,GADU5B,EAAMS,KAAKyC,aACHzB,IAAEC,IAAI1B,EAAN,2BAClBqD,EAAc5B,IAAEC,IAAI1B,EAAN,qDAChB2B,EAAQF,IAAE6B,MAAM7B,IAAEC,IAAI1B,EAAN,uDAA6DqD,EAA7D,mBAAmFzB,MAAuB,GAC1H2B,EAAYzB,EACZH,EAAMG,QAAUA,IAAQyB,EAAY,MACxC5B,EAAMG,OAASyB,EACK,MAAhB5B,EAAMG,QAERL,IAAE+B,MAAMxD,EAAR,uDAA+DqD,EAA/D,mBAAqFzB,IAErFH,IAAE+B,MAAMxD,EAAR,mDAA2D4B,EAA3D,uBAAyFyB,MAGzF5B,IAAEsC,IAAI/D,EAAN,uDAA6DqD,EAA7D,mBAAmFzB,GAAmBD,GAER,MAA1FF,IAAEC,IAAI1B,EAAN,mDAAyD4B,EAAzD,iBAAgGH,IAAEsC,IAAI/D,EAAN,mDAAyD4B,EAAzD,eAAuF,IAE3LH,IAAEsC,IAAI/D,EAAN,mDAAyD4B,EAAzD,uBAAuFyB,GAAe,MAG1Ge,eAvFa,cAuF+B,IAA5BpE,EAA2B,EAA3BA,MAAOG,EAAoB,EAApBA,QAAW2B,EAAS,EAATA,OAC1BuC,EAAYlE,EAAQM,KAAKyC,aAC3BlD,EAAMc,IAAIC,YAAYC,UACxBqD,EAAUjB,sBAAsBtB,GAEhCuC,EAAUF,uBAAuBrC,IAGrCwC,uBA/Fa,YA+FqB,EAAVnE,QACdM,KAAK8D,OAAOC,kBAAkBC,UCjG7BzE,ECHE,CACbuB,MAAM,EACNmD,cAAe,MDEJvE,EEJE,GCEA,GACbwE,YAAa,GACbD,cAAe,KACfE,aAAc,KACdC,OAAQ,CAAC,WAAY,WACrBC,KAAM,GACNC,OAAQ,CACN,CACE,mBACC,mBAEH,CACE,mBACC,oBAGLlC,OAAQ,WAAK7C,GAAW,eACtB,IAAM2E,EAAclD,IAAEC,IAAI1B,EAAN,wBACd4E,EAAenD,IAAEC,IAAI1B,EAAN,yBAEf6B,GADkBJ,IAAEC,IAAI1B,EAAN,oCACNyB,IAAEC,IAAI1B,EAAN,oDACZgF,EAAiBvD,IAAEC,IAAI1B,EAAN,oBACvB,OAAOyB,IAAEwD,MAAMD,GAAgBE,WAAU,SAACvD,EAAOY,GAC/C,GAAa,MAATZ,EAAe,OAAO,KAC1B,GAAsB,MAAlBA,EAAMQ,SAAkB,OAAO,KACnC,GAAIyC,GAAgBrC,EAAI,OAAO,KAC/B,IAAI4C,EAAc1D,IAAE6B,MAAM3B,GAI1B,GAFuB,MAAnBgD,EAAYpC,KAAa4C,EAAYC,MAAQT,EAAYpC,IAEzDV,EAAW,CACb,IAAIwD,EAAQ,QACRxD,EAAUgB,QAAUhB,EAAUgB,OAAON,KACJ,WAA/BV,EAAUgB,OAAON,GAAIT,SAAqBuD,EAAQ,OACnB,WAA/BxD,EAAUgB,OAAON,GAAIT,SAAqBuD,EAAQ,UACnB,QAA/BxD,EAAUgB,OAAON,GAAIT,SAAkBuD,EAAQ,YAErDF,EAAYC,MAAQ3D,IAAEW,MAAM,GAAI+C,EAAYC,MAAO,CAACE,UAAWD,EAAOA,UAExE,OAAOF,KACNI,QAAO,SAACC,EAAGC,GACZ,GAAS,MAALD,EAAW,OAAO,KACrBnE,U,qDCvCQ,GACPqE,OADO,cACuC,OAAD,yHAArC1F,EAAqC,EAArCA,MAAS2F,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,UAAWd,EAAO,EAAPA,MACpClE,EAAUa,IAAEC,IAAI1B,EAAO,aACrB6E,OAAS,CAACc,EAAUC,GAC5BhF,EAAQkE,KAAOA,EAHkC,SAI3Ce,IAAQC,MAAM,KAJ6B,OAKjDlF,EAAQiE,OAAS,KACjBjE,EAAQkE,KAAO,KANkC,8CAQnDiB,WAAY,CACVC,UADU,WACSxE,GAAU,IAAlBxB,EAAiB,EAAjBA,MACT,GAAIwB,EAAS,CACX,IAAMZ,EAAUa,IAAEC,IAAI1B,EAAO,YAC7ByB,IAAEsC,IAAInD,EAAN,sBAA8BY,GAAW,CAACyE,OAAQ,MAGtDC,YAPU,WAOW1E,GAAU,IAAlBxB,EAAiB,EAAjBA,MACX,GAAIwB,EAAS,CACX,IAAMZ,EAAUa,IAAEC,IAAI1B,EAAO,YAC7ByB,IAAEsC,IAAInD,EAAN,sBAA8BY,GAAW,CAACyE,OAAQ,OAIlDE,cAvBO,YAuB0B,OAAD,mHAAjBnG,EAAiB,EAAjBA,MAAOG,EAAU,EAAVA,QACpBkE,EAAY5C,IAAEC,IAAIvB,EAAS,cAC3BS,EAAUa,IAAEC,IAAI1B,EAAO,aACjB0E,cAHwB,uBAIlCvE,EAAQM,KAAKyC,aAAaC,QAC1BkB,EAAU0B,WAAWG,YAAYtF,EAAQ8D,eALP,SAM5BmB,IAAQC,MAAM,KANc,OAOlClF,EAAQ8D,cAAgB,KAPU,8CAUtC0B,aAjCa,cAiCyB,IAAxBpG,EAAuB,EAAvBA,MAAOG,EAAgB,EAAhBA,QAAWoC,EAAK,EAALA,GACxB8B,EAAY5C,IAAEC,IAAIvB,EAAS,YAC3BS,EAAUa,IAAEC,IAAI1B,EAAO,YACbyB,IAAEC,IAAId,EAAN,6BAEdyD,EAAU0B,WAAWG,YAAYtF,EAAQ8D,eACzC9D,EAAQ8D,cAAgBnC,EACxB8B,EAAU0B,WAAWC,UAAUzD,GAC/BpC,EAAQM,KAAKyC,aAAa3B,SAG9B8E,WA5Ca,WA4CSC,GAAQ,IAAlBnG,EAAiB,EAAjBA,QACJkE,EAAY5C,IAAEC,IAAIvB,EAAS,YACjCkE,EAAU8B,gBAEV9B,EAAUkC,gBAAgBF,WAAWC,IAEjCE,WAlDO,WAkDaF,GAAQ,OAAD,kHAAftG,EAAe,EAAfA,MACVY,EAAUa,IAAEC,IAAI1B,EAAO,YACvB6C,EAASpB,IAAEgF,QAAQhF,IAAEiF,IAAI9F,EAAQiC,QAAQ,SAAC8D,GAC9C,OAAKA,EAAExE,SACA,CAACyE,IAAKD,EAAExE,UADS,SAGpB0E,EAAoBC,IAAQC,MAAMlE,EAAQ,CAACiE,QAAS,QACpD/B,EAASiC,IAAKH,GAChBI,SAASlC,EAAO,KAAOkC,SAASlC,EAAO,KAAOkC,SAASlC,EAAO,KAAOkC,SAASlC,EAAO,MACvFnE,EAAQmE,OAAS,CAAC,CAACA,EAAO,GAAIA,EAAO,IAAK,CAACA,EAAO,GAAIA,EAAO,MAThC,+C,QCpDtB/E,ECHE,CACbmC,SAAU,GACV+E,SAAS,GDEE/G,EEAE,CACbgH,mBADa,WACeb,GAAQ,IAC5B1F,EAD2B,EAAfZ,MACIS,KAAK2G,IAAIb,gBAC/B9E,IAAEsC,IAAInD,EAAN,mBAA2ByG,OAAU,CAACf,EAAMgB,IAAKhB,EAAMiB,OAEzDC,oBAAqBC,YAAKC,YAAS,IAAKC,aAAO,WAAUrB,GAAW,IAC5D1F,EAD2D,EAAlBZ,MACzBS,KAAK2G,IAAIb,gBAC/B9E,IAAEsC,IAAInD,EAAN,mBAA2B0F,EAAM/D,IAAM,CAAC+D,EAAMsB,OAAON,IAAKhB,EAAMsB,OAAOL,UAEzElB,WATa,cAS6B,IAA9BrG,EAA6B,EAA7BA,MAAOG,EAAsB,EAAtBA,QAAWmH,EAAW,EAAXA,IAAKC,EAAM,EAANA,IAC3B3G,EAAUZ,EAAMS,KAAK2G,IAAIb,gBACzBlC,EAAYlE,EAAQM,KAAK2G,IAAIb,gBAC/B3F,EAAQsG,SACV7C,EAAU8C,mBAAmB,CAACG,MAAKC,SAGvCM,aAhBa,WAgBWvB,GAAO,EAAjBnG,QACcM,KAAK2G,IAAIb,gBACzBiB,oBAAoBlB,IAEhCwB,eApBa,WAoBWxB,GAAQ,IACxB1F,EADuB,EAAfZ,MACQS,KAAK2G,IAAIb,gBAC/B3F,EAAQuB,UAAYmE,GAAS,IAAInE,UAAY,GAC7CvB,EAAQsG,SAAU,GAEpBa,cAzBa,WAyBUzB,GAAQ,IACvB1F,EADsB,EAAfZ,MACSS,KAAK2G,IAAIb,gBAC/B3F,EAAQsG,SAAU,EAClBtG,EAAQuB,SAAW,KC5BVnC,EAAK,aAChBuG,gBAAiBA,GACdtD,GAEQ9C,EAAO,aAClBoG,gBAAiBA,GACdyB,GCTU,GACbC,WAAY,CACV1G,MAAM,EACNtB,OAAQC,EAAOH,aCAJ,GACbkI,WAAY,CACV1G,KADU,YACI,EAARvB,MACkBS,KAAKyH,OAAOD,WAC1B1G,MAAO,GAEjB4B,MALU,YAKK,EAARnD,MACiBS,KAAKyH,OAAOD,WAC1B1G,MAAO,GAEjB4G,eATU,YASgB,EAAVhI,QACYM,KAAKyH,OAAOD,WAC5B1G,QAEZ6G,eAbU,cAayB,IAAnBpI,EAAkB,EAAlBA,MAASC,EAAS,EAATA,OACPD,EAAMS,KAAKyH,OAAOD,WAC1BhI,OAASA,GAEboI,UAjBI,YAiByB,OAAD,yHAAjBlI,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MAClBY,EAAUZ,EAAMS,KAAKyH,OAAOD,WAC5B5D,EAAYlE,EAAQM,KAAKyH,OAAOD,WAC/BhI,EAAUW,EAAVX,OACPW,EAAQC,SAAU,EAJc,SAK1BV,EAAQW,IAAIC,YAAYuH,gBAAgB,CAACrI,WALf,OAMhCW,EAAQC,SAAU,EAClBwD,EAAUlB,QAPsB,8CASlCoF,SA1BU,YA0BU,EAAVpI,QACkBM,KAAKyH,OAAOD,WAC5B9E,WC5BhB,SAASqF,EAAiBC,GACxB,IAAItG,EAAW,CACbuB,KAAM,UACNgF,YAAa,CAACjH,IAAEiF,IAAI+B,GAAQ,SAACE,GAAO,MAAO,CAACA,EAAE,GAAIA,EAAE,SAMtD,OAHIxG,EAASuG,aAAevG,EAASuG,YAAY,IAAMvG,EAASuG,YAAY,GAAGE,OAAS,GACtFzG,EAASuG,YAAY,GAAGG,KAAK1G,EAASuG,YAAY,GAAG,IAEhDvG,EAET,SAAS2G,EAAT,KAA+F,IAA1E9I,EAAyE,EAAzEA,MAAOG,EAAkE,EAAlEA,QAAWqB,EAAuD,EAAvDA,QAASuH,EAA8C,EAA9CA,YAAazG,EAAiC,EAAjCA,OAAQ0G,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,cACtErI,EAAUZ,EAAMS,KAAKyH,OAAOgB,UAE9BC,EAAchJ,EAAQW,IAAIsI,eAAe5H,GACzC6H,EAAUzI,EAAQ0I,KAClBC,EAAqB,GACrBC,EAAe,GAsBnB,OApBIH,GAAWF,EAAYG,OAAMC,EAAmBD,KAAOD,GACP,GAAhD5H,IAAEgI,QAAQV,EAAaI,EAAYhH,YAAoBoH,EAAmBpH,SAAW4G,GAEzFS,EAAe/H,IAAEiI,UAAUH,GAEvBN,EAEGE,EAAY9G,MAAQ8G,EAAY9G,KAAK4B,KAAOgF,IAC/CM,EAAmBlH,KAAO,CAAC4B,IAAKgF,GAEhCO,EAAanH,KAAO,CAAC4B,IAAK+E,IAIvBG,EAAY9G,MAAQ8G,EAAY9G,KAAKE,IAAMD,IAC9CiH,EAAmBlH,KAAO,CAACE,GAAID,GAC/BkH,EAAanH,KAAO,CAACE,GAAID,IAItB,CAACkH,eAAcD,sBAExB,SAASI,EAAT,EAAyCC,EAAgBJ,EAAcD,GAAqB,IAA3DvJ,EAA0D,EAA1DA,MAC/B,IAAIyB,IAAEgB,QAAQ+G,KAAiB/H,IAAEgB,QAAQ8G,GAAzC,CACA,IAAMM,EAAS,6CAAyCD,GACxDnI,IAAEsC,IAAI/D,EAAO6J,EAAWpI,IAAEW,MAAM,GAAIX,IAAEC,IAAI1B,EAAO6J,GAAYL,IAC7D,IAAMM,EAAe,mDAA+CF,GACpEnI,IAAEsC,IAAI/D,EAAO8J,EAAiBrI,IAAEW,MAAM,GAAIX,IAAEC,IAAI1B,EAAO8J,GAAkBP,K,SAE5DQ,E,uFAAf,WAAiCC,EAASJ,EAAgBJ,EAAcD,GAAxE,qBAAAU,EAAA,yDACUjK,EAAmBgK,EAAnBhK,MAAOG,EAAY6J,EAAZ7J,SACXsB,IAAEgB,QAAQ+G,KAAiB/H,IAAEgB,QAAQ8G,GAF3C,wDAIM9F,EAAW,GACgB,GAA3BhC,IAAEgB,QAAQ+G,IACZ/F,EAASoF,KAAK,CACZ7E,OACA5C,KAAMoI,EACN7F,KAAK,4BAAD,OAA8BiG,KAGD,GAAjCnI,IAAEgB,QAAQ8G,IACZ9F,EAASoF,KAAK,CACZ7E,OACA5C,KAAMmI,EACN5F,KAAK,kCAAD,OAAoCiG,KAG5CvJ,QAAQC,IAAI,eAAgBkJ,GAC5BnJ,QAAQC,IAAI,qBAAsBiJ,GAC5BzF,EAAgBrC,IAAEC,IAAI1B,EAAN,qCArBxB,UAsBQG,EAAQW,IAAI8C,KAAKM,IAAI,CAACT,WAAUK,kBAtBxC,6C,sBAyBA,SAASoG,GAAYF,EAArB,GAA4D,IAA7B7H,EAA4B,EAA5BA,SAAUG,EAAkB,EAAlBA,OAAQ0G,EAAU,EAAVA,QAe/C,MAZY,CACVM,KAHgBU,EAAVhK,MACcS,KAAKyH,OAAOgB,UAElBI,KACdnH,SAAUA,EACVE,KAAO2G,EACL,CACE/E,IAAK+E,GAGP,CACEzG,GAAID,IAKZ,SAAS6H,GAAoBH,EAA7B,GAAgD,IAATrI,EAAQ,EAARA,MAC7B3B,EAAUgK,EAAVhK,MACFuC,EAAK8E,MAGX,OAFA5F,IAAEsC,IAAI/D,EAAN,6CAAmDuC,GAAMZ,GACzDF,IAAEsC,IAAI/D,EAAN,mDAAyDuC,GAAzD,eAAmEZ,EAAnE,CAA0EqB,WAAY,GAAIoH,KAAM,UACzF7H,E,SAEM8H,G,mFAAf,WAA8BL,EAA9B,8BAAAC,EAAA,6DAAwCtI,EAAxC,EAAwCA,MAAOwH,EAA/C,EAA+CA,YACrCnJ,EAAmBgK,EAAnBhK,MAAOG,EAAY6J,EAAZ7J,QACToC,EAAK8E,MAEP5D,EAAW,GACX9B,GACF8B,EAASoF,KAAK,CACZ7E,OACA5C,KAAMO,EACNgC,KAAK,4BAAD,OAA8BpB,KAGlC4G,GACF1F,EAASoF,KAAK,CACZ7E,OACA5C,KAAK,eAAK+H,EAAN,CAAmBnG,WAAY,GAAIoH,KAAM,SAC7CzG,KAAK,kCAAD,OAAoCpB,KAGxCuB,EAAgBrC,IAAEC,IAAI1B,EAAN,qCAnBtB,SAoBQG,EAAQW,IAAI8C,KAAKM,IAAI,CAACT,WAAUK,kBApBxC,4C,sBAuBe,IC1HF9D,GCFE,CACbuB,MAAM,EACN+H,KAAM,GACNgB,WAAY,GACZxH,MAAO,WAAuB9C,GAAW,IAApBuK,EAAmB,EAA/BD,WACP,OAAO7I,IAAEgF,QAAQhF,IAAEiF,IAAI1G,EAAMc,IAAI0J,aAAa,SAAC7D,EAAGpE,GAChD,OAAKoE,GAAe,IAAV4D,GAAgB5D,EAAE2C,OAA8D,GAAtD3C,EAAE2C,KAAKmB,cAAcF,OAAOA,EAAOE,eAA6B,KAC7F,CAACC,IAAKnI,EAAIoI,KAAMhE,EAAE2C,KAAMjI,MAAOkB,QAG1CD,OAAQ,KACRD,KAAM,WAAkBrC,GAAW,IAA3BsC,EAA0B,EAA1BA,OAA0B,EAAlBQ,MACd,GAAIR,EACF,OAAOb,IAAEC,IAAI1B,EAAN,0BAAgCsC,MDVhCnC,GDyHE,CACboB,KADa,YACW,IAAlBvB,EAAiB,EAAjBA,MAAOG,EAAU,EAAVA,QACLS,EAAUZ,EAAMS,KAAKyH,OAAOgB,UAC5BtE,EAAenD,IAAEC,IAAI1B,EAAN,yBACrB,GAAoB,MAAhB4E,EACFhE,EAAQ0I,KAAO,OACV,CACL,IAAI3H,EAAQxB,EAAQW,IAAIsI,eAAexE,GAGvC,GADAhE,EAAQ0I,KAAO3H,EAAM2H,KACjBtJ,EAAMc,IAAIC,YAAYC,UAAW,CAEnC,IAAMsB,EAASb,IAAEC,IAAI1B,EAAN,qCAA2CyB,IAAEC,IAAIC,EAAO,YAAxD,QACff,EAAQ0B,OAASA,OAEjB1B,EAAQ0B,OAASb,IAAEC,IAAIC,EAAO,WAGlCf,EAAQW,MAAO,GAEjB4B,MApBa,YAoBE,EAARnD,MACiBS,KAAKyH,OAAOgB,UAC1B3H,MAAO,GAEXqJ,UAxBO,SAwBGZ,GAAU,OAAD,yIAChBhK,EAASgK,EAAThK,MACDY,EAAUZ,EAAMS,KAAKyH,OAAOgB,UAE5BT,EAAShH,IAAEC,IAAI1B,EAAN,qCACTmC,EAAWqG,EAAiBC,GAG9BnG,EAAS1B,EAAQ0B,OACjB0G,EAAU,KACVC,EAAgB,MAChB5G,EAAOzB,EAAQyB,OAEbrC,EAAMc,IAAIC,YAAYC,YAExBgI,EAAUvH,IAAEC,IAAI1B,EAAN,uCAA6CsC,EAA7C,SAEV2G,EAAgBxH,IAAEC,IAAI1B,EAAN,0BAAgCsC,EAAhC,YAIhBsH,EAAiBnI,IAAEC,IAAI1B,EAAN,0BArBE,mBAwBsB8I,EAAWkB,EAAS,CAACxI,QAASoI,EAAgBb,YAAa5G,EAAUG,SAAQ0G,UAASC,kBAA1HO,EAxBc,EAwBdA,aAAcD,EAxBA,EAwBAA,mBACjBvJ,EAAMc,IAAIC,YAAYC,UACxB+I,EAAkBC,EAASJ,EAAgBJ,EAAcD,GAEzDI,EAAuBK,EAASJ,EAAgBJ,EAAcD,GA5B3C,4BAgCjBvJ,EAAMc,IAAIC,YAAYC,UAhCL,kCAiCCkJ,GAAYF,EAAS,CAAC7H,WAAU6G,YAjCjC,eAiCbrH,EAjCa,iBAkCOuI,GAAYF,EAAS,CAAC7H,WAAU6G,QAASC,IAlChD,eAkCbE,EAlCa,iBAmCbkB,GAAeL,EAAS,CAACrI,QAAOwH,gBAnCnB,iDAqCCe,GAAYF,EAAS,CAAC7H,WAAUE,OAAMC,OAAQA,IArC/C,eAqCbX,EArCa,iBAsCbwI,GAAoBH,EAAS,CAACrI,UAtCjB,+CA0CzBkJ,OAlEa,YAkEa,IAAlB1K,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MACTqE,EAAYlE,EAAQM,KAAKyH,OAAOgB,UACtC7E,EAAUuG,YACVzK,EAAQM,KAAK2G,IAAIb,gBAAgBwB,gBACjC/H,EAAMS,KAAK2G,IAAIxC,aAAe,KAC9BP,EAAUlB,SAEZoF,SAzEa,YAyEe,IAAlBpI,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MACXqE,EAAYlE,EAAQM,KAAKyH,OAAOgB,UACtC/I,EAAQM,KAAK2G,IAAIb,gBAAgBwB,gBACjC/H,EAAMS,KAAK2G,IAAIxC,aAAe,KAC9BP,EAAUlB,SAEZ2H,aA/Ea,cA+EkB,IAAjB9K,EAAgB,EAAhBA,MAASsJ,EAAO,EAAPA,KACLtJ,EAAMS,KAAKyH,OAAOgB,UAC1BI,KAAOA,GAEjByB,mBAnFa,WAmFe1J,GAAO,EAAfrB,MACIS,KAAKyH,OAAOgB,UAC1BoB,WAAajJ,GAEvB2J,aAvFa,cAuFgB,IAAfhL,EAAc,EAAdA,MAASuC,EAAK,EAALA,GACLvC,EAAMS,KAAKyH,OAAOgB,UAC1B5G,OAASC,GAEnB0I,UA3Fa,YA2FQ,EAAV9K,QACDM,KAAKyH,OAAOgD,QAAQ3J,KAAK,CAAC4J,eAAgB,6CAEpDC,kBA9Fa,cA8FqB,IAAfpL,EAAc,EAAdA,MAASuC,EAAK,EAALA,GACVvC,EAAMS,KAAKyH,OAAOgB,UAE1B5G,OAASC,IGlNrB,SAAS8I,GAAT,KAAwD,IAAtBrL,EAAqB,EAArBA,MAAS6B,EAAY,EAAZA,UACnCU,EAAK8E,MAEX,OADA5F,IAAEsC,IAAI/D,EAAN,uDAA6DuC,GAAMV,GAC5DU,E,SAEM+I,G,mFAAf,6CAAArB,EAAA,6DAAmCjK,EAAnC,EAAmCA,MAAOG,EAA1C,EAA0CA,QAAW0B,EAArD,EAAqDA,UAE7CU,EAAK8E,MACP5D,EAAW,CACb,CACEO,OACA5C,KAAMS,EACN8B,KAAK,sCAAD,OAAwCpB,KAG1CuB,EAAgBrC,IAAEC,IAAI1B,EAAN,qCAVxB,SAWoBG,EAAQW,IAAI8C,KAAKM,IAAI,CAACT,WAAUK,kBAXpD,cAWQyH,EAXR,OAYQtH,EAAMxC,IAAEC,IAAI6J,EAAK,wCAAwCC,OAAO,GAZxE,kBAaS,CAACjJ,KAAI0B,QAbd,6C,sBAgBe,IC9BFjE,GCHE,CACbuB,MAAM,EACN+H,KAAM,IDEKnJ,GD6BE,CACboB,KADa,YACE,IACPX,EADM,EAARZ,MACkBS,KAAKyH,OAAOuD,aAClC7K,EAAQ0I,KAAO,GACf1I,EAAQW,MAAO,GAEjB4B,MANa,YAME,EAARnD,MACiBS,KAAKyH,OAAOuD,aAC1BlK,MAAO,GAEXmK,cAVO,SAUO1B,GAAU,OAAD,uHACpBhK,EAASgK,EAAThK,MACDY,EAAUZ,EAAMS,KAAKyH,OAAOuD,aAzCtC,EA0C+C,CAACnC,KAAM1I,EAAQ0I,MAApDzH,EAzCQ,CACdyH,KAFsC,EAAPA,KAG/BzG,OAAQ,KAwCJ7C,EAAMc,IAAIC,YAAYC,UAJC,iCAKDsK,GAAmBtB,EAAS,CAACnI,cAL5B,gBAKlBU,EALkB,EAKlBA,GALkB,EAKd0B,IACXxC,IAAEsC,IAAI/D,EAAN,yCAAuDuC,GAN9B,yCAQR8I,GAAwBrB,EAAS,CAACnI,cAR1B,QAQnBU,EARmB,OASzBd,IAAEsC,IAAI/D,EAAN,yCAAuDuC,GAT9B,kCAvC/B,QAuC+B,UAY7BuI,aAtBa,cAsBkB,IAAjB9K,EAAgB,EAAhBA,MAASsJ,EAAO,EAAPA,KACLtJ,EAAMS,KAAKyH,OAAOuD,aAC1BnC,KAAOA,GAEjBf,SA1Ba,YA0BO,EAAVpI,QACkBM,KAAKyH,OAAOuD,aAC5BtI,SAEN0H,OA9BO,YA8BY,OAAD,mHAAV1K,EAAU,EAAVA,QACNkE,EAAYlE,EAAQM,KAAKyH,OAAOuD,aADhB,SAEhBpH,EAAUqH,gBAFM,OAGtBrH,EAAUlB,QAHY,+CGrD1B,SAASwI,GAAmB3B,EAA5B,GAA8C,IAAR3H,EAAO,EAAPA,KAC5BrC,EAAUgK,EAAVhK,MACFuC,EAAK8E,MAGX,OAFA5F,IAAEsC,IAAI/D,EAAN,qCAA2CuC,GAAMF,GACjDZ,IAAEsC,IAAI/D,EAAN,kDAAwDuC,GAAMF,GACvDE,E,SAEMqJ,G,mFAAf,WAA6B5B,EAA7B,kCAAAC,EAAA,6DAAuC5H,EAAvC,EAAuCA,KAC7BrC,EAAmBgK,EAAnBhK,MAAOG,EAAY6J,EAAZ7J,QACToC,EAAK8E,MAGP5D,EAAW,CACb,CACEO,OACA5C,KAAMiB,EACNsB,KAAK,2BAAD,OAA6BpB,IAEnC,CACEyB,OACA5C,KAAMiB,EACNsB,KAAK,iCAAD,OAAmCpB,KAGvCuB,EAAgBrC,IAAEC,IAAI1B,EAAN,qCAjBtB,SAkBoBG,EAAQW,IAAI8C,KAAKM,IAAI,CAACT,WAAUK,kBAlBpD,UAkBQyH,EAlBR,OAoBiB,OADTvC,EAAUvH,IAAEC,IAAI6J,EAAK,wCAAwCC,OAAO,IAnB5E,sBAoB6B,mDApB7B,WAsBuB,OADfvC,EAAgBxH,IAAEC,IAAI6J,EAAK,wCAAwCC,OAAO,IArBlF,sBAsBmC,0DAtBnC,iCAuBS,CAACxC,UAASC,gBAAe1G,OAvBlC,6C,sBAyBe,ICvCFvC,GCHE,CACbuB,MAAM,EACN+H,KAAM,IDEKnJ,GDsCE,CACboB,KADa,cACoB,IAA3BvB,EAA0B,EAA1BA,MAASmL,EAAiB,EAAjBA,eACPvK,EAAUZ,EAAMS,KAAKyH,OAAOgD,QAClCtK,EAAQ0I,KAAO,GACf1I,EAAQW,MAAO,EACfX,EAAQuK,eAAiBA,GAAkB,MAE7ChI,MAPa,YAOE,EAARnD,MACiBS,KAAKyH,OAAOgD,QAC1B3J,MAAO,GAEXsK,SAXO,SAWE7B,GAAU,OAAD,iIACfhK,EAAkBgK,EAAlBhK,MAAOG,EAAW6J,EAAX7J,QACRS,EAAUZ,EAAMS,KAAKyH,OAAOgD,QAnDtC,EAoDqC,CAAC5B,KAAM1I,EAAQ0I,MAA1CjH,EAnDG,CACTiH,KAFiC,EAAPA,OAqDtBtJ,EAAMc,IAAIC,YAAYC,UAJJ,iCAKuB4K,GAAc5B,EAAS,CAAC3H,SAL/C,mBAKb2G,EALa,EAKbA,QAASC,EALI,EAKJA,cAAe1G,EALX,EAKWA,IAC3B3B,EAAQuK,eANQ,oBAOZW,EAASrK,IAAEC,IAAIvB,EAASS,EAAQuK,gBAPpB,gDAQoBvK,EAAQuK,eAR5B,4BASlBW,EAAO,CAAC9C,UAASC,gBAAe1G,OATd,iDAYHoJ,GAAmB3B,EAAS,CAAC3H,SAZ1B,WAYdE,EAZc,QAahB3B,EAAQuK,eAbQ,oBAcZW,EAASrK,IAAEC,IAAIvB,EAASS,EAAQuK,gBAdpB,gDAeoBvK,EAAQuK,eAf5B,4BAgBlBW,EAAO,CAACvJ,OAhBU,kCAjD1B,QAiD0B,UAoBxBuI,aA/Ba,cA+BkB,IAAjB9K,EAAgB,EAAhBA,MAASsJ,EAAO,EAAPA,KACLtJ,EAAMS,KAAKyH,OAAOgD,QAC1B5B,KAAOA,GAEjBf,SAnCa,YAmCO,EAAVpI,QACkBM,KAAKyH,OAAOgD,QAC5B/H,SAEN0H,OAvCO,YAuCY,OAAD,mHAAV1K,EAAU,EAAVA,QACNkE,EAAYlE,EAAQM,KAAKyH,OAAOgD,QADhB,SAEhB7G,EAAUwH,WAFM,OAGtBxH,EAAUlB,QAHY,+CG3EbnD,GAAK,aAChBkJ,UAAWA,GACXuC,aAAcA,GACdP,QAASA,IACNjI,GAEQ9C,GAAO,aAClB+I,UAAWA,GACXuC,aAAcA,GACdP,QAASA,IACNlD,GCbU,IACb+D,kBADa,WACgBC,GAAS,IAAnB7L,EAAkB,EAAlBA,QACjB,GAAK6L,EAAL,CADmC,IAE5BrG,EAAuBqG,EAAvBrG,SAAUC,EAAaoG,EAAbpG,UACjBzF,EAAQM,KAAK2G,IAAI1B,OAAO,CAACC,WAAUC,YAAWd,KAAM,OAEtDmH,iBANa,WAMaD,GAAS,IAAjBhM,EAAgB,EAAhBA,MAChB,GAAKgM,EAAL,CADgC,IAEzBrG,EAAuBqG,EAAvBrG,SAAUC,EAAaoG,EAAbpG,UACjBvF,QAAQC,IAAI,mBAAoB0L,GAChB,MAAZrG,GAAiC,MAAbC,IACxB5F,EAAMS,KAAK2G,IAAI/H,SAAW,CAACsG,WAAUC,gBAEvCsG,WAba,YAaS,EAAV/L,QACFM,KAAK2G,IAAIb,gBAAgBuB,kBAEnCqE,YAhBa,YAgBU,EAAVhM,QACHM,KAAKyH,OAAOgB,UAAU3H,QAEhC6K,cAnBa,YAmBoB,IAAlBpM,EAAiB,EAAjBA,MAAOG,EAAU,EAAVA,QACpBH,EAAMS,KAAK2G,IAAIxC,aAAe,KAC9BzE,EAAQM,KAAK2G,IAAIb,gBAAgBwB,iBAEnCsE,YAvBa,YAuBkB,IAAlBlM,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MACdsM,EAAetM,EAAMS,KAAKyC,aAAavB,MAE7C3B,EAAMS,KAAK2G,IAAIxC,aAAe5E,EAAMS,KAAKyC,aAAa1B,QAEtD,IAAIW,EAAW,GACXoK,EAAQ9K,IAAEC,IAAI4K,EAAc,0BAC5BC,EAAM3D,OAAS,GAAG2D,EAAMC,MAC5B/K,IAAEgL,QAAQF,GAAS,IAAI,SAACA,GACtBpK,EAASkF,OAAU,CAACkF,EAAM,GAAIA,EAAM,OAGtCpM,EAAQM,KAAK2G,IAAIb,gBAAgBuB,eAAe,CAAC3F,aAEjDhC,EAAQM,KAAK2G,IAAIjB,iBAEbuG,aAvCO,YAuCkB,OAAD,iHAAVvM,EAAU,EAAVA,QAAU,SACtBA,EAAQW,IAAI8C,KAAK+I,aADK,8CAKxBC,SA5CO,YA4Cc,OAAD,iHAAVzM,EAAU,EAAVA,QAAU,SAClBA,EAAQM,KAAKC,MAAMQ,SADD,+CC5CflB,GCDE,CACbuB,MAAM,EACNsL,SAAU,KACVtC,OAAQ,GACRuC,KAAM,WAAyB9M,GAAW,IAAlC6M,EAAiC,EAAjCA,SAAU7J,EAAuB,EAAvBA,WAEVuH,EAAS9I,IAAEC,IAAI1B,EAAN,wCACf,OAAOyB,IAAE8D,OAAO9D,IAAEyD,UAAUlC,GAAY,WAAST,GAAQ,IAAf+G,EAAc,EAAdA,KACxC,OAAU,MAAN/G,GACQ,MAAR+G,GACU,IAAViB,IAAwC,GAAxBjB,EAAKiB,OAAOA,GAFT,KAGhB,CACLI,KAAMrB,EACNjI,MAAOkB,EACPsK,SAAWA,GAAYtK,EACvBwK,MAAO,CAAE1H,MAAO,QAAS2H,OAAO,EAAMC,UAAU,OAEhDxL,IAAEgB,UAERO,WAAY,WAAKhD,GAAW,eAC1B,IAAIgD,EAAa,KACjB,GAAiD,GAA7CvB,IAAEC,IAAI1B,EAAN,6BAAmD,CACrD,IAAI+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACxBgD,EAAavB,IAAE8D,OAAO9D,IAAEC,IAAI1B,EAAN,mBAAyB+B,EAAzB,wCAAmF,IAAI,SAACmL,EAAGzH,GAAO,OAAOhE,IAAE0L,WAAW1H,EAAG,aAE/IzC,EAAavB,IAAEC,IAAI1B,EAAN,gDAEf,OAAOgD,GAEToK,oBAAqB,WAAyBpN,GAAW,IAAlC6M,EAAiC,EAAjCA,SAAU7J,EAAuB,EAAvBA,WAC3BqK,EAAaR,EAEjB,OADkB,MAAdQ,GAAsB5L,IAAE6L,KAAKtK,GAAY4F,OAAS,IAAGyE,EAAa5L,IAAE6L,KAAKtK,GAAY,IAClFqK,GAETE,kBAAmB,WAAoCvN,GAAW,IAA7CoN,EAA4C,EAA5CA,oBACnB,OAD+D,EAAvBpK,WACtBoK,KDjCTjN,GEJE,CACbsE,MADa,YACY,IAAlBzE,EAAiB,EAAjBA,MAAOG,EAAU,EAAVA,QAGZ,OAFgBH,EAAMS,KAAK8D,OAAOC,kBAC1BjD,MAAO,EACRpB,EAAQM,KAAKyH,OAAOuD,aAAalK,QAE1CiM,SANa,cAMY,IAAfxN,EAAc,EAAdA,MAASuC,EAAK,EAALA,GACX3B,EAAUZ,EAAMS,KAAK8D,OAAOC,kBAClC5D,EAAQiM,SAAWtK,EACnB3B,EAAQW,MAAO,GAEjBkM,aAXa,cAWkB,IAAjBzN,EAAgB,EAAhBA,MAASuB,EAAO,EAAPA,KACLvB,EAAMS,KAAK8D,OAAOC,kBAC1BjD,KAAOA,GAEjBmM,SAfa,cAegB,IAAnB1N,EAAkB,EAAlBA,MAASuK,EAAS,EAATA,OACDvK,EAAMS,KAAK8D,OAAOC,kBAC1B+F,OAASA,ICbRvK,GAAK,aAChBwE,kBAAmBA,ICLN,IDQFrE,GAAO,aAClBqE,kBAAmBA,IAChBwD,IEAQhI,GAAK,aAChBU,MAAOA,EACPwC,aAAcA,EACdyK,UAAWA,EACXvG,IAAKA,EACLc,OAAQA,GACR3D,OAAQA,ICdK,IDiBFpE,GAAO,aAClBO,MAAOA,EACPwC,aAAcA,EACdyK,UAAWA,EACXvG,IAAKA,EACLc,OAAQA,GACR3D,OAAQA,IExBK,IF2BFnE,GAAY,uCAAG,6BAAA6J,EAAA,6DAAQ9J,EAAR,EAAQA,QAAR,SACpBA,EAAQW,IAAIV,eADQ,uBAEpBD,EAAQM,KAAKC,MAAMN,eAFC,2CAAH,sDG5BV,IACb,uCAAwC,CACtC,KAAQ,WACR,SAAY,CACV,KAAQ,UACR,YAAe,CACb,CACE,EACG,kBACD,kBAEF,EACG,kBACD,oBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,iBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,iBACD,oBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,iBACD,sBAKR,KAAQ,CACN,GAAM,yCAGV,uCAAwC,CACtC,KAAQ,YACR,SAAY,CACV,KAAQ,UACR,YAAe,CACb,CACE,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,gBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,oBAEF,EACG,kBACD,mBAEF,EACG,kBACD,oBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,sBAKR,KAAQ,CACN,GAAM,yCAGV,uCAAwC,CACtC,KAAQ,YACR,SAAY,CACV,KAAQ,UACR,YAAe,CACb,CACE,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,oBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,mBAEF,EACG,kBACD,sBAKR,KAAQ,CACN,GAAM,0CCrMG,IACb,uCAAwC,CACtCkJ,KAAM,qBAER,uCAAwC,CACtCA,KAAM,gBCAK,IACbsE,YAAa,WAAK5N,GAAW,eAE3B,IAAM6N,EAAkB7N,EAAMc,IAAI+M,gBAC5BC,EAAe9N,EAAMc,IAAIgN,aAE3BC,EAAU,EACVC,EAAU,EACVC,EAAO,EACXxM,IAAEgL,QAAQoB,GAAiB,SAACK,EAAgBxD,GAC1C,GAAsB,MAAlBwD,EAAJ,CAEA,IAAIvM,EAAQmM,EAAapD,GACzB,GAAa,MAAT/I,EAAJ,CAEA,IAAIwM,EAA8C,UAAvClM,IAAYC,SAASP,EAAMQ,UACT,WAAzB+L,EAAepM,OACjBiM,GAAWI,EACuB,WAAzBD,EAAepM,OACxBkM,GAAWG,EACuB,QAAzBD,EAAepM,SACxBmM,GAAQE,QAGZ,IAAIC,EAAQL,EAAUC,EAAUC,EAChC,MAAO,CACLF,QAASM,KAAKC,MAAMP,GACpBQ,kBAAmBF,KAAKC,MAAOP,GAAWK,GAAS,GAAM,KACzDJ,QAASK,KAAKC,MAAMN,GACpBQ,kBAAmBH,KAAKC,MAAON,GAAWI,GAAS,GAAM,KACzDH,KAAMI,KAAKC,MAAML,GACjBQ,eAAgBJ,KAAKC,MAAOL,GAAQG,GAAS,GAAM,OAGvD5D,YAAa,WAAKxK,GAChB,IAAI8C,EACJ,GAF2B,eAEsB,GAA7CrB,IAAEC,IAAI1B,EAAN,6BAAmD,CACrD,IAAI+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACxB8C,EAAQrB,IAAEwD,MAAMjF,GAAO0B,IAAf,mBAA+BK,EAA/B,kCAAiFwD,QAAO,SAACC,EAAGC,GAClG,QAAIhE,IAAE0L,WAAW1H,EAAG,OACX,MAALD,QAAJ,MACCnE,aAEHyB,EAAQrB,IAAEC,IAAI1B,EAAN,2CAEV,OAAO8C,GAAS,IAElBgL,aAAc,WAAK9N,GACjB,IAAI6C,EACJ,GAF4B,eAEqB,GAA7CpB,IAAEC,IAAI1B,EAAN,6BAAmD,CACrD,IAAI+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACxB6C,EAASpB,IAAEwD,MAAMjF,GAAO0B,IAAf,mBAA+BK,EAA/B,mCAAkFwD,QAAO,SAACC,EAAGC,GACpG,QAAIhE,IAAE0L,WAAW1H,EAAG,OACX,MAALD,QAAJ,MACCnE,aAEHwB,EAASpB,IAAEC,IAAI1B,EAAN,4CAEX,OAAO6C,GAAU,IAEnBgL,gBAAiB,WAAK7N,GAAW,eAC/B,IAAIqD,EAAc5B,IAAEC,IAAI1B,EAAO,qDAC3B6N,EAAkB,GACtB,GAAmB,MAAfxK,EACF,GAAiD,GAA7C5B,IAAEC,IAAI1B,EAAN,6BAAmD,CACrD,IAAI+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACxB6N,EAAkBpM,IAAEC,IAAI1B,EAAN,mBAAyB+B,EAAzB,8CAAgFsB,EAAhF,aAAyG,QAE3HwK,EAAkBpM,IAAEC,IAAI1B,EAAN,uDAA6DqD,EAA7D,aAAsF,GAG5G,OAAOwK,GAETa,YAAa,WAAK1O,GAChB,GAD2B,eACvBA,EAAMc,IAAIC,YAAYC,UAAW,CACnC,IAAMe,EAAoB/B,EAAMc,IAAIC,YAAYgB,kBAChD,IAAKA,EAAmB,OACxB,OAAO/B,EAAMc,IAAI8C,KAAK7B,KAG1B4M,YAAa,YAAoB,IAAlBD,EAAiB,EAAjBA,YACb,GAAIA,EACF,OAAOA,EAAYhM,WAGvBkM,uBAAwB,WAAgB5O,GAAW,IAAzB2O,EAAwB,EAAxBA,YACxB,OAAOlN,IAAEwD,MAAM0J,GAAajN,IAArB,sBAA+CwD,WAAU,SAACM,EAAGC,GAClE,OAAKD,EACE,CAACvB,IAAKuB,EAAEvB,IAAK1B,GAAIkD,GADT,QAEdF,OAAO9D,IAAEoN,QAAQC,SAAQ,SAACtJ,EAAGC,GAC9B,OAAOD,EAAEvB,OACR5C,SAEL0N,4BAA6B,WAAgB/O,GAAW,IAAzB2O,EAAwB,EAAxBA,YAC7B,OAAOlN,IAAEwD,MAAM0J,GAAajN,IAArB,gBAAyCwD,WAAU,SAACM,EAAGC,GAC5D,OAAKD,EAGE,CAACyD,cADcxH,IAAEC,IAAIiN,EAAN,6BAAyClJ,EAAzC,SACgBuD,QAASxD,EAAEvB,KAHlC,QAIdsB,OAAO9D,IAAEoN,QAAQC,SAAQ,SAACtJ,EAAGC,GAC9B,OAAOD,EAAEwD,WACR3H,SAEL2N,aAAc,YACZ,OAD6B,EAAfC,UACGC,QAEnBD,UAAW,CACTE,cAAe,CACb,OAAU,CACR7F,KAAM,YAGV,OAAU,CACRzG,OAAQ,CACNA,OAAO,eAMFuM,IAELtM,MAAM,eACDuM,KAGPtM,QAAS,CAwBP,KAAQ,CACNF,OAAO,eACFuM,IAELtM,MAAM,eACDuM,IAELrM,WAAY,QCjKP,IACboG,eADa,WACW7G,GAAK,IAAbvC,EAAY,EAAZA,MACV6C,EAAS,GACb,GAAiD,GAA7CpB,IAAEC,IAAI1B,EAAN,6BAAmD,CACrD,IAAI+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACxB6C,EAASpB,IAAEC,IAAI1B,EAAN,mBAAyB+B,EAAzB,wCAETc,EAASpB,IAAEC,IAAI1B,EAAN,4CAEX,OAAO6C,EAAON,IAEhB+M,cAXa,WAWU/M,GAAK,IAAbvC,EAAY,EAAZA,MACT8C,EAAQ,GACZ,GAAiD,GAA7CrB,IAAEC,IAAI1B,EAAN,6BAAmD,CACrD,IAAI+B,EAAoBN,IAAEC,IAAI1B,EAAN,qCACxB8C,EAAQrB,IAAEC,IAAI1B,EAAN,mBAAyB+B,EAAzB,uCAERe,EAAQrB,IAAEC,IAAI1B,EAAN,2CAEV,OAAO8C,EAAMP,IAEfnC,aArBa,YAqBkB,EAAjBJ,MAAiB,EAAVG,QACXM,KAAK2G,IAAIZ,eCtBN,IACbxF,WAAW,EACXe,kBAAmB,KACnB9B,OAAQ,KACRO,MAAO,KACP+O,KAAM,WAAsBvP,GAC1B,OADoC,EAA9B+B,kBAECN,IAAEC,IAAI1B,EAAO,+BADW,O,UCF7BwP,GAAiB3J,IAAQ4J,UAAUC,WAAaF,gBCFzCxP,GAAQiD,GACR9C,GDGE,CACPwP,SADO,WACW1P,GAAS,OAAD,iHAAhBD,EAAgB,EAAhBA,QAIRY,EAAUZ,EAAMc,IAAIC,aACdP,MALkB,yCAKJI,EAAQJ,OALJ,uBAMdgP,GAAevP,EAAO2P,QAAQ,eAAgB,IAAK,CACjEhQ,SAAUM,EAAOV,SACjBK,MAAOK,EAAOJ,MACdH,SAAUO,EAAOT,WATW,cAM1BoQ,EAN0B,yBAWvBA,EAAIC,cAXmB,8CAa1BC,QAdO,cAc8C,OAAD,2HAA3C5P,EAA2C,EAA3CA,QAASH,EAAkC,EAAlCA,MAAkC,EAA3BgQ,QAAW/P,EAAgB,EAAhBA,OAAQO,EAAQ,EAARA,MAC1CI,EAAUZ,EAAMc,IAAIC,YACpBsD,EAAYlE,EAAQW,IAAIC,YAC1BP,IAAOI,EAAQJ,MAAQA,GAH6B,SAI1C6D,EAAUsL,SAAS1P,GAJuB,cAIxDO,EAJwD,yBAKjDL,EAAQW,IAAI8C,KAAKmM,QAAQ,CAC9BvP,QACAP,OAAQA,EACRgQ,QAAS/P,EAAOR,QAChBwQ,OAAO,IACNC,MAAK,SAACC,GAQP,OAPKA,EAASC,QACZzP,EAAQmB,kBAAoBqO,EAASE,aACrC1P,EAAQJ,MAAQ4P,EAAS5P,MACzBI,EAAQI,WAAY,EAEpBhB,EAAMS,KAAK8D,OAAOC,kBAAkBqI,SAAW,MAE1CuD,MAlB+C,8CAqBpDlP,OAnCO,YAmCmB,OAAD,uHAAjBf,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MACfY,EAAUZ,EAAMc,IAAIC,YACA+C,EAAiBlD,EAApCmB,kBACPnB,EAAQJ,MAAQ,KAHa,SAIvBL,EAAQW,IAAI8C,KAAK2M,WAAW,CAACzM,kBAJN,8CAMzB0M,YAzCO,YAyCwB,OAAD,yHAAjBrQ,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MACpBY,EAAUZ,EAAMc,IAAIC,YACA+C,EAAiBlD,EAApCmB,kBACH0B,EAAW,CAAC,CACdE,KAAM,cAJ0B,SAM5BxD,EAAQW,IAAI8C,KAAKlC,IAAI,CAAC+B,WAAUK,kBANJ,8CAQ9B2M,cAjDO,YAiD0B,OAAD,iIAAjBtQ,EAAiB,EAAjBA,QAASH,EAAQ,EAARA,MAC5BK,QAAQC,IAAI,yBACNM,EAAUZ,EAAMc,IAAIC,YACA+C,EAAiBlD,EAApCmB,kBAEH2O,EAAgB,CAClB,CACE/M,KAAM,oBACNK,OACA2M,MAAO,CACLxQ,QAAS,CAACA,EAAQW,IAAIC,YAAY6P,kBAGtC,CACEjN,KAAM,qBACNK,OACA2M,MAAO,CACLxQ,QAAS,MAIfE,QAAQC,IAAI,qBArBwB,SAsBlBH,EAAQW,IAAI8C,KAAKlC,IAAI,CAAC+B,SAAUiN,EAAe5M,kBAtB7B,UAsB9ByH,EAtB8B,OAuBpClL,QAAQC,IAAI,qBACRuQ,EAAkB,GACtBxQ,QAAQC,IAAI,oBAAqBiL,IAC7BA,EAAIuF,UAAU,GAAGT,MA1Be,oBA4BH,KAA3B9E,EAAIuF,UAAU,GAAGhP,OA5Ba,uBA4BQyJ,EAAIuF,UAAU,GAAGT,MA5BzB,eA8B9B5M,EAAW,CAAC,CACdO,OACA5C,KAAM,CACJyB,OAAQ,GACRC,MAAO,IAETa,KAAM,sBApC0B,UAuC5BxD,EAAQW,IAAI8C,KAAKM,IAAI,CAACT,WAAUK,kBAvCJ,QAyClC+M,EAAgBhI,KAAK6H,EAAc,IAzCD,YA2ChCnF,EAAIuF,UAAU,GAAGT,MA3Ce,oBA6CH,KAA3B9E,EAAIuF,UAAU,GAAGhP,OA7Ca,uBA6CQyJ,EAAIuF,UAAU,GAAGT,MA7CzB,eA+C9B5M,EAAW,CAAC,CACdO,OACA5C,KAAM,GACNuC,KAAM,uBAlD0B,UAqD5BxD,EAAQW,IAAI8C,KAAKM,IAAI,CAACT,WAAUK,kBArDJ,QAuDlC+M,EAAgBhI,KAAK6H,EAAc,IAvDD,aAyDhCG,EAAgBjI,OAAS,GAzDO,kCAyDEzI,EAAQW,IAAI8C,KAAKlC,IAAI,CAAC+B,SAAUoN,EAAiB/M,kBAzDnD,QA0DpCzD,QAAQC,IAAI,wBA1DwB,+CA4DtCyQ,iBA7Ga,YA6GuB,IAAlB/Q,EAAiB,EAAjBA,MAIVqE,EAJ2B,EAAVlE,QAIGW,IAAIC,YAE1BiQ,EAAgB,GAKpB,OAJAvP,IAAEgL,QAAQhL,IAAEC,IAAI1B,EAAO,kCAAkC,SAACiR,EAAKvG,GACzDjJ,IAAE0L,WAAWzC,EAAK,MACtBsG,EAAcnI,KAAK,CAACrH,QAASkJ,EAAKpB,KAAM2H,EAAI3H,KAAMnH,SAAU8O,EAAI9O,SAAUE,KAAM4O,EAAI5O,UAE/EgC,EAAU6M,mBAAmBF,IAEtCG,gBA1Ha,YA0HsB,IAAlBnR,EAAiB,EAAjBA,MAITqE,EAJ0B,EAAVlE,QAIIW,IAAIC,YAE1BqQ,EAAU,GAKd,OAJA3P,IAAEgL,QAAQhL,IAAEC,IAAI1B,EAAO,iCAAiC,SAACiR,EAAKvG,GACxDjJ,IAAE0L,WAAWzC,EAAK,MACtB0G,EAAQvI,KAAK,CAACvG,OAAQoI,EAAKpB,KAAM2H,EAAI3H,UAEhCjF,EAAUgN,kBAAkBD,IAE/BF,mBAvIO,WAuI8BF,GAAgB,OAAD,uHAAhChR,EAAgC,EAAhCA,MAAOG,EAAyB,EAAzBA,QAIzBS,EAAUZ,EAAMc,IAAIC,YACA+C,EAAiBlD,EAApCmB,kBAEH0B,EAAW,GACX6N,EAAkBtR,EAAMc,IAAIgN,aAChCrM,IAAEgL,QAAQuE,GAAe,SAACO,GACxB,GAA2B,MAAvBA,EAAY/P,QAAhB,CACA,IAAIJ,EAAO,GACP+H,EAAcmI,EAAgBC,EAAY/P,SAW9C,GAVI+P,EAAYjI,OACK,MAAfH,GAAuBA,EAAYG,MAAQiI,EAAYjI,OACzDlI,EAAKkI,KAAOiI,EAAYjI,OAGxBiI,EAAYpP,WACK,MAAfgH,GAAgF,GAAzD1H,IAAEgI,QAAQN,EAAYhH,SAAUoP,EAAYpP,YACrEf,EAAKe,SAAWoP,EAAYpP,WAG5BoP,EAAYlP,KAAM,CAEpB,IAAMC,EAASb,IAAEC,IAAI6P,EAAa,YAClC,GAAIjP,EAAQ,CACV,IAAMkP,EAAe/P,IAAEC,IAAI1B,EAAN,0CAAgDsC,EAAhD,mBAChBkP,GAEqB,MAAfrI,GAA2C,MAApBA,EAAY9G,MAAwC,MAAxB8G,EAAY9G,KAAK4B,KAAgC,MAAhBuN,GAAwBrI,EAAY9G,KAAK4B,KAAOuN,KAC7IpQ,EAAKiB,KAAOZ,IAAEW,MAAM,GAAIhB,EAAKiB,KAAM,CAAC4B,IAAKuN,KAFzCnR,QAAQC,IAAI,4CAA6CgC,EAAQ,wDAAyDiP,IAM5H9P,IAAEgB,QAAQrB,IACdqC,EAASoF,KACP,CACE7E,OACA5C,OACAsC,KAAM,oCACNC,KAAK,kCAAD,OAAoC4N,EAAY/P,eAInC,GAAnBiC,EAASmF,OA7C2C,kEA8ClDzI,EAAQW,IAAI8C,KAAKM,IAAI,CAACT,WAAUK,kBA9CkB,+CAgDpDuN,kBAvLO,WAuL6BD,GAAU,OAAD,uHAA1BpR,EAA0B,EAA1BA,MAAOG,EAAmB,EAAnBA,QAIxBS,EAAUZ,EAAMc,IAAIC,YACA+C,EAAiBlD,EAApCmB,kBAEH0B,EAAW,GACX+G,EAAcxK,EAAMc,IAAI0J,YAC5B/I,IAAEgL,QAAQ2E,GAAS,SAACK,GAClB,GAAqB,MAAjBA,EAAOnP,OAAX,CACA,IAAIlB,EAAO,GACPsQ,EAAalH,EAAYiH,EAAOnP,QAEhCmP,EAAOnI,OACS,MAAdoI,GAAsBA,EAAWpI,MAAQmI,EAAOnI,OAClDlI,EAAKkI,KAAOmI,EAAOnI,OAGnB7H,IAAEgB,QAAQrB,IACdqC,EAASoF,KACP,CACE7E,OACA5C,OACAsC,KAAM,mCACNC,KAAK,iCAAD,OAAmC8N,EAAOnP,cAI7B,GAAnBmB,EAASmF,OA7BoC,kEA8B3CzI,EAAQW,IAAI8C,KAAKM,IAAI,CAACT,WAAUK,kBA9BW,+CAgC7C6N,mBAvNO,WAuN8BC,GAAU,OAAD,uHAA1B5R,EAA0B,EAA1BA,MAAOG,EAAmB,EAAnBA,QAC/BE,QAAQC,IAAI,uBAAwBsR,GAC9BhR,EAAUZ,EAAMc,IAAIC,YACA+C,EAAiBlD,EAApCmB,kBAEH0B,EAAW,GACXqK,EAAe9N,EAAMc,IAAIgN,aAC7BrM,IAAEgL,QAAQmF,GAAS,SAACpQ,GACAsM,EAAatM,IAE/BiC,EAASoF,KACP,CACE7E,OACAN,KAAM,oCACNC,KAAK,kCAAD,OAAoCnC,QAIvB,GAAnBiC,EAASmF,OAlBqC,kEAmB5CzI,EAAQW,IAAI8C,KAAKC,OAAO,CAACJ,WAAUK,kBAnBS,+CAqB9C+N,kBA5OO,WA4O6BD,GAAU,OAAD,uHAA1B5R,EAA0B,EAA1BA,MAAOG,EAAmB,EAAnBA,QAC9BE,QAAQC,IAAI,sBAAuBsR,GAC7BhR,EAAUZ,EAAMc,IAAIC,YACA+C,EAAiBlD,EAApCmB,kBAEH0B,EAAW,GACX+G,EAAcxK,EAAMc,IAAI0J,YAC5B/I,IAAEgL,QAAQmF,GAAS,SAACtP,GACDkI,EAAYlI,IAE7BmB,EAASoF,KACP,CACE7E,OACAN,KAAM,mCACNC,KAAK,iCAAD,OAAmCrB,QAItB,GAAnBmB,EAASmF,OAlBoC,kEAmB3CzI,EAAQW,IAAI8C,KAAKC,OAAO,CAACJ,WAAUK,kBAnBQ,+CAqB7CnD,MAjQO,cAiQmC,OAAD,6HAAlCR,EAAkC,EAAlCA,QAASH,EAAyB,EAAzBA,MAASC,EAAgB,EAAhBA,OAAQO,EAAQ,EAARA,MAC/BI,EAAUZ,EAAMc,IAAIC,YACpBsD,EAAYlE,EAAQW,IAAIC,YAC9BH,EAAQX,OAASA,EAH4B,SAIvBoE,EAAU0L,QAAQ,CAAC9P,SAAQO,UAJJ,qBAItC6P,MAJsC,kCAMrChM,EAAUmM,cAN2B,yBAOrCnM,EAAUoM,gBAP2B,yBAQrCpM,EAAU8M,kBAR2B,yBASrC9M,EAAU0M,mBAT2B,yBAUrC5Q,EAAQM,KAAK2G,IAAIZ,aAVoB,+CAazCoK,eA9QO,WA8Q0BtK,GAAQ,OAAD,6HAAxBtG,EAAwB,EAAxBA,MAAOG,EAAiB,EAAjBA,QAI3BE,QAAQC,IAAI,iBAAkBgG,GACxBjC,EAAYlE,EAAQW,IAAIC,YACxB+Q,EAAUrQ,IAAEC,IAAI4E,EAAO,oBAAsB,GAC9C7E,IAAEsQ,QAAQD,GAP6B,uBAQ1CzR,QAAQ2R,KAAK,yCAR6B,0BAWtCC,EAAa3L,EAAM3C,MAAQ2C,EAAM3C,KAAKiF,OAAS,EAAnC,UAA2CtC,EAAMxC,cAAjD,YAAkEwC,EAAM3C,MAAS2C,EAAMxC,cACrGkN,EAAgB,GAChBkB,EAAgB,GAChBC,EAAe,GACfC,EAAe,GACnB3Q,IAAEgL,QAAQqF,GAAS,SAACL,GAClB,GAAmB,SAAfA,EAAO/N,KAAiB,CAE1B,IAAM2O,EAAgBZ,EAAO9N,KAAK2O,MAAM,KAClCC,EAAaF,EAAcG,KAAK,KACjB/Q,IAAEC,IAAI1B,EAAN,UAAgBiS,GAAhB,OAA4BM,IACjD,GAA+B,UAA3B9Q,IAAEC,IAAI2Q,EAAe,GAAgB,CAEvC,IAAM7Q,EAAUC,IAAEC,IAAI2Q,EAAe,GACrC,GAAe,MAAX7Q,GAA4C,MAAzBC,IAAEC,IAAI+P,EAAQ,QAEnC,YADApR,QAAQC,IAAI,iDAAkDgG,GAJzB,MAOd7E,IAAEC,IAAI+P,EAAQ,QAAhCnI,EAPgC,EAOhCA,KAAMnH,EAP0B,EAO1BA,SAEb6O,EAAcnI,KAAKpH,IAAEgR,OAAO,CAACjR,UAAS8H,OAAMnH,aAAW,SAAC8H,GAAD,OAAMxI,IAAEiR,YAAYzI,YACtE,GAA+B,SAA3BxI,IAAEC,IAAI2Q,EAAe,GAAe,CAE7C,IAAM/P,EAASb,IAAEC,IAAI2Q,EAAe,GACpC,GAAc,MAAV/P,GAA2C,MAAzBb,IAAEC,IAAI+P,EAAQ,QAElC,YADApR,QAAQC,IAAI,gDAAiDgG,GAJlB,IAOtCgD,EAAQ7H,IAAEC,IAAI+P,EAAQ,QAAtBnI,KAEP6I,EAAatJ,KAAKpH,IAAEgR,OAAO,CAACnQ,SAAQgH,SAAO,SAACW,GAAD,OAAMxI,IAAEiR,YAAYzI,aAE5D,GAAmB,UAAfwH,EAAO/N,KAAkB,CAElC,IAAM6O,EAAad,EAAO9N,KAAK2O,MAAM,KAAKE,KAAK,KAC1B/Q,IAAEC,IAAI1B,EAAN,UAAgBiS,GAAhB,OAA4BM,IAEjD9Q,IAAEgL,QAAQhL,IAAEC,IAAI+P,EAAQ,gBAAgB,SAACpQ,EAAOG,GACjC,MAATH,GAAe6Q,EAAcrJ,KAAKrH,MAGxCC,IAAEgL,QAAQhL,IAAEC,IAAI+P,EAAQ,eAAe,SAACpQ,EAAOiB,GAChC,MAATjB,GAAe+Q,EAAavJ,KAAKvG,WAGvCjC,QAAQ2R,KAAK,2BAA4BP,EAAO/N,SAGhDwO,EAActJ,OAAS,GAAGvE,EAAUsN,mBAAmBO,GACvDlB,EAAcpI,OAAS,GAAGvE,EAAU6M,mBAAmBF,GACvDoB,EAAaxJ,OAAS,GAAGvE,EAAUwN,kBAAkBO,GACrDD,EAAavJ,OAAS,GAAGvE,EAAUgN,kBAAkBc,GA9Db,+CAgE9CQ,iBA9Ua,WA8UsBrM,GAAO,EAAxBtG,MAAwB,EAAjBG,U,UE/UrByD,G,OAAQgP,GAAkB,YAEnB5S,GAAK,aAChB4D,KAAMA,GAAK5D,MACXe,YAAaA,IACVkC,IAEQ9C,GAAO,aAClByD,KAAMA,GAAKzD,QACXY,YAAaA,IACViH,IAEQgI,GAAU,CACrBpM,KAAMA,GAAKoM,SCZA9P,GAAS2S,YAAW,CAC/BpS,OACAK,QAGagS,iB,s/BCwDApS,OA5Df,WAAkB,IAAD,EACYqS,KAAnB/S,EADO,EACPA,MAAOG,EADA,EACAA,QACTS,EAAUZ,EAAMS,KAAKC,MACrB2D,EAAYlE,EAAQM,KAAKC,MAE/B,OACE,mBAAKsS,IAAKA,YAAF,OAUN,mBAAKA,IAAKA,YAAF,OASN,mBAAKA,IAAK,CACRC,OAAQ,KACPC,IAAG,iBAAoBC,IAAK,SAC/B,YAACC,GAAA,EAAD,CAAMJ,IAAKA,YAAF,MAGNK,SAAUhP,EAAU1D,OACrB,YAAC2S,GAAA,EAAD,CAAOC,YAAY,iBAAiBlS,MAAOT,EAAQX,OAAQuN,SAAU,SAACgG,EAAKpS,GAAN,OAAeiD,EAAUlD,aAAaC,MAC3G,YAACqS,GAAA,EAAD,CACErO,MAAO,CAACsO,UAAW,GAAIC,SAAO,EAC9B9S,QAASD,EAAQC,QACjB+S,SAAUhT,EAAQC,SAHpB,8BAMA,YAAC4S,GAAA,EAAD,CACErO,MAAO,CAACsO,UAAW,GACnBG,QAASxP,EAAU/C,SACnBsS,SAAUhT,EAAQC,SAHpB,eAQJ,iBAAGmS,IAAKA,YAAF,MAOHa,QAASxP,EAAUnD,QAPtB,Y,gEC9CS,SAASqF,KAAmB,IAAD,EACfwM,KAAlB/S,EADiC,EACjCA,MAAOG,EAD0B,EAC1BA,QACRS,EAAUZ,EAAMS,KAAK2G,IAAIb,gBACzBlC,EAAYlE,EAAQM,KAAK2G,IAAIb,gBAE3BpE,EAAsBvB,EAAtBuB,SAAU+E,EAAYtG,EAAZsG,QACVW,EAAiBxD,EAAjBwD,aAER,OAAKX,EAEH,kBAAC4M,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAASC,UAAWvS,IAAEiF,IAAIvE,KACzBV,IAAEiF,IAAIvE,GAAU,SAACyF,EAAQrF,GAAT,OAAgB,kBAAC0R,GAAA,EAAD,CAAQC,SAAUtM,EAAQ8C,IAAKnI,EAAI4R,WAAS,EAACC,OAAQ,gBAAExM,EAAF,EAAEA,OAAQyM,EAAV,EAAUA,UAAV,OAAyBxM,EAAa,CAACD,SAAQyM,YAAW9R,cAJ/H,K,eCNR,SAAS+R,KAAU,IAAD,EACNvB,KAAlB/S,EADwB,EACxBA,MAAOG,EADiB,EACjBA,QACRS,EAAUZ,EAAMS,KAAK2G,IACrB/C,EAAYlE,EAAQM,KAAK2G,IAEvBvE,EAAWjC,EAAXiC,OACAuD,EAAiB/B,EAAjB+B,aAER,OAA6B,GAAzB3E,IAAE6L,KAAKzK,GAAQ+F,OAAoB,KAErC,kBAACkL,GAAA,EAAD,KACGrS,IAAEiF,IAAI7D,GAAQ,SAAClB,EAAOY,GAAR,OACb,kBAACuE,GAAA,EAAD,CACEyN,qBAAqB,EACrBnP,MAAOzD,EAAMyD,MACbhE,KAAMO,EAAMQ,SACZuI,IAAKrD,MACLwM,QAAS,SAACL,GAASpN,EAAa,CAAC7D,cCnB5B,SAAS6E,KAAO,IAAD,EACD2L,KAAnB5S,EADoB,EACpBA,QAASH,EADW,EACXA,MACXqE,EAAYlE,EAAQM,KAAK2G,IACzBxG,EAAUZ,EAAMS,KAAK2G,IAE3B,OACI,kBAAC,KAAD,CAAYrC,OAAQnE,EAAQmE,OAAQF,OAAQjE,EAAQiE,OAAQC,KAAMlE,EAAQkE,KAAM+O,QAAS,SAACL,GAAD,OAASnP,EAAUgC,WAAV,eAAyBmN,EAAI5L,UAAU4M,aAAa,GACpJ,kBAACC,GAAA,EAAD,CACEC,IAAI,gGACJC,YAAY,+IAEd,kBAACF,GAAA,EAAD,CACEC,IAAI,4EACJE,QAAS,EACTC,QAAS,GACTF,YAAY,KAEd,kBAACpO,GAAD,MACA,kBAAC+N,GAAD,O,gDCpBO,SAASQ,KAAkB,IAElCzQ,EADc0O,KAAZ5S,QACkBM,KAAK8D,OAC/B,OACE,kBAACwQ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAM5P,MAAO,CAAC6P,KAAM,KACpB,kBAAC,KAAD,CAAQ5P,MAAM,UAAUwO,QAAS,kBAAMxP,EAAU+H,kBAAjD,UACA,kBAAC,KAAD,CAAQ/G,MAAM,UAAUwO,QAAS,kBAAMxP,EAAU8H,gBAAjD,S,eCAS,SAAS+I,GAAT,GAAsC,IAAT9P,EAAQ,EAARA,MAAQ,EACvB2N,KAAnB5S,EAD0C,EAC1CA,QAASH,EADiC,EACjCA,MACXqE,EAAYlE,EAAQM,KAAK8D,OAAOC,kBAChC5D,EAAUZ,EAAMS,KAAK8D,OAAOC,kBAE5B+I,EAAoB3M,EAAQ2M,kBAC5BvK,EAAapC,EAAQkM,KACrBvL,EAAOX,EAAQW,KACfgJ,EAAS3J,EAAQ2J,OACjB9F,EAAQJ,EAAUI,MAClB+I,EAAWnJ,EAAUmJ,SACrBC,EAAepJ,EAAUoJ,aACzBC,EAAWrJ,EAAUqJ,SAE3B,OACE,kBAACsH,GAAA,EAAD,CAAM5P,MAAOA,GACX,kBAAC4P,GAAA,EAAD,CAAM5P,MAAO,CAAC+P,cAAe,QAExB5H,EACC,kBAAC6H,GAAA,EAAD,CACE7T,KAAMA,EACN8T,OAAQ,WAAO5H,EAAa,CAAClM,MAAM,KACnC+T,OAAQ,WAAO7H,EAAa,CAAClM,MAAM,KACnCoJ,KAAM4C,EAAkBjE,KACxBiM,KAAK,MACLC,UAAQ,EACRC,SAAO,EACPC,QAAM,EACNC,UAAU,QAEV,kBAACP,GAAA,EAASQ,KAAV,CAAexQ,MAAO,CAACyQ,IAAK,KAC1B,kBAACT,GAAA,EAASU,KAAV,CAAe1Q,MAAO,CAAC2Q,UAAW,UAAWpL,KAAK,oBAAoBtJ,MAAM,oBAAoBwS,QAAS,SAACL,EAAKpS,GAAQqD,OACvH,kBAAC6O,GAAA,EAAD,CAAOiC,KAAK,SAASS,aAAa,OAAOL,UAAU,SAASvQ,MAAO,CAACsO,UAAW,GAAIrS,MAAOkJ,EAAQiD,SAAU,SAACgG,GAAO9F,EAAS,CAACnD,OAAQiJ,EAAIyC,OAAO5U,WACjJ,kBAAC+T,GAAA,EAASQ,KAAV,CAAeM,WAAS,GACrBzU,IAAEiF,IAAI1D,GAAY,SAAAmT,GAAM,OACvB,kBAACf,GAAA,EAASU,KAAV,eAAepL,IAAKyL,EAAO9U,OAAW8U,EAAtC,CAA8CtC,QAAS,SAACL,EAAKpS,GAAQoM,EAAS,CAACjL,GAAInB,EAAKC,kBAMhG,kBAAC+T,GAAA,EAAD,CACEvB,QAAS,WAAOpP,KAChBlD,MAAM,EACNoJ,KAAM,oBACN4K,KAAK,MACLC,UAAQ,EACRC,SAAO,EACPC,QAAM,EACNC,UAAU,SAEhB,kBAACX,GAAA,EAAD,CAAM5P,MAAO,CAAC6P,KAAM,O,oECxDb,SAASmB,GAAT,GAAgC,IAAThR,EAAQ,EAARA,MAAQ,EACjB2N,KAAnB5S,EADoC,EACpCA,QAASH,EAD2B,EAC3BA,MACXqE,EAAYlE,EAAQM,KAAK8D,OAFa,EAIZ8R,IAAMC,SAAS,MAJH,oBAIrCC,EAJqC,KAI3BC,EAJ2B,KAQ5C,SAASC,IACPD,EAAY,MAEd,OACE,kBAACxB,GAAA,EAAD,CAAM5P,MAAOA,GACX,kBAACsR,GAAA,EAAD,CAAYC,KAAK,MAAMtR,MAAM,UAAUuR,aAAW,OAAO/C,QAR7D,SAAqBgD,GACnBL,EAAYK,EAAMC,iBAQd,kBAAC,KAAD,OAEF,kBAAClB,GAAA,EAAD,CACExQ,MAAO,CAACyQ,IAAK,GAAIkB,MAAO,GACxBxV,KAAMpC,QAAQoX,GACdS,aAAW,EACXT,SAAUA,EACVU,QAASR,GACP,kBAACS,GAAA,EAAD,CAAUrD,QAAS,WAAK4C,IAAepS,EAAU6H,eAAjD,aAEGlM,EAAMS,KAAKyC,aAAa3B,KACzB,kBAAC2V,GAAA,EAAD,CAAUrD,QAAS,WAAK4C,IAAepS,EAAUgI,gBAAjD,cADgC,KAGlC,kBAAC6K,GAAA,EAAD,CAAUrD,QAAS,WAAK4C,IAAepS,EAAUuI,aAAjD,Y,mCChCKuK,6BAAW,CACtBC,gBAAiB,CACbC,oBAAoB,GAExBC,oBAAqB,KAJVH,ECKA,YAAyE,IAAxDnL,EAAuD,EAAvDA,OAExB3H,GAF+E,EAA/CkT,uBAA+C,EAAvBC,qBAC1CzE,KAAZ5S,QACkBM,KAAK8D,QAM/B,OAJAkT,qBAAU,WACRpT,EAAU4H,iBAAiBD,MAI3B,kBAACgJ,GAAA,EAAD,KACE,kBAAC0B,GAAA,EAAD,CAAYC,KAAK,MAAMtR,MAAM,UAAUuR,aAAW,OAAO/C,QAAS,WAAKxP,EAAU0H,kBAAkBC,KACjG,kBAAC,KAAD,WCTO,SAAS0L,GAAT,GAAsC,EAAdC,YACrC,OACE,kBAAC5C,GAAA,EAAD,KAIE,kBAAC,GAAD,CAAmB3P,MAAO,CAAC6P,KAAM,KAEjC,kBAAC,GAAD,MACA,kBAACmB,GAAD,OCXS,SAAS7R,KAAU,IAE1B2C,EADU6L,KAAT/S,MACeS,KAAK2G,IAAIb,gBAAgBW,QAC/C,OACE,kBAAC8N,GAAA,EAAD,CAAM5P,MAAO,CAACwS,OAAQ,OACpB,kBAACC,GAAA,EAAD,CAAQ3D,SAAS,UAEbhN,EAAU,kBAAC4N,GAAD,MAAqB,kBAAC4C,GAAD,Q,gHCH1B,SAASI,KACtB,OACE,kBAACC,GAAA,EAAD,CAAQxW,MAAM,EAAOyW,QAAQ,cAC3B,kBAAChD,GAAA,EAAD,CAAM5P,MAAO,CAAC6N,OAAQ,MACtB,yBACE7N,MAAO,CAAC6S,MAAO,KACfC,KAAK,gBACL,kBAACC,GAAA,EAAD,KACG,CAAC,QAAS,UAAW,cAAczR,KAAI,SAACiE,EAAMyN,GAAP,OACtC,kBAACC,GAAA,EAAD,CAAU3C,QAAM,EAAChL,IAAKC,GACpB,kBAAC2N,GAAA,EAAD,KAAeF,EAAQ,IAAM,EAAI,kBAAC,KAAD,MAAgB,kBAAC,KAAD,OACjD,kBAACG,GAAA,EAAD,CAAc5E,QAAShJ,SAI7B,kBAAC6N,GAAA,EAAD,MACA,kBAACL,GAAA,EAAD,KACG,CAAC,WAAY,QAAS,QAAQzR,KAAI,SAACiE,EAAMyN,GAAP,OACjC,kBAACC,GAAA,EAAD,CAAU3C,QAAM,EAAChL,IAAKC,GACpB,kBAAC2N,GAAA,EAAD,KAAeF,EAAQ,IAAM,EAAI,kBAAC,KAAD,MAAgB,kBAAC,KAAD,OACjD,kBAACG,GAAA,EAAD,CAAc5E,QAAShJ,W,2DCjBtB,SAASzH,KAAgB,IAAD,EACZ6P,KAAlB/S,EAD8B,EAC9BA,MAAOG,EADuB,EACvBA,QACRS,EAAUZ,EAAMS,KAAKyC,aACrBmB,EAAYlE,EAAQM,KAAKyC,aAEzB3B,EAA8CX,EAA9CW,KAAMI,EAAwCf,EAAxCe,MAAOU,EAAiCzB,EAAjCyB,KAAMG,EAA2B5B,EAA3B4B,uBACjB4B,EAA6DC,EAA7DD,eAA6DC,EAA7CoU,iBAA6CpU,EAA3BC,uBAM1C,OAJKnF,QAAQwC,KACXJ,GAAO,EACPI,EAAQ,IAGR,kBAACoW,GAAA,EAAD,CAAQW,OAAO,SAASnX,KAAMA,EAAMyW,QAAQ,cAC1C,kBAAChD,GAAA,EAAD,CAAM5P,MAAO,CAACuT,cAAe,KAC3B,kBAAC3D,GAAA,EAAD,CAAM5P,MAAO,CAAC+P,cAAe,SAAUyD,WAAY,WACjD,kBAAC5D,GAAA,EAAD,CAAM5P,MAAO,CAACyT,eAAgB,OAAQ1D,cAAe,MAAOyD,WAAY,SAAUlF,UAAW,KACzF,kBAACoF,GAAA,EAAD,CAAM1T,MAAO,CAAC2T,WAAY,OAAQC,SAAU,KACzCrX,EAAM2H,MAET,kBAACwP,GAAA,EAAD,CAAM1T,MAAO,CAAC6T,WAAY,EAAGD,SAAU,KAAvC,YACQ3K,KAAKC,MAAM3M,EAAMK,OADzB,SAKM,MAARK,EAAe,KACf,kBAACyW,GAAA,EAAD,CAAM1T,MAAO,CAAC4T,SAAU,GAAI3T,MAAO,OAAQqO,UAAW,EAAGwF,aAAc,IACpE7W,EAAKiH,OAIZ,kBAAC0L,GAAA,EAAD,CAAM5P,MAAO,CAACyT,eAAgB,SAAU1D,cAAe,QAEnD3S,EACE,kBAACiR,GAAA,EAAD,CAAQrO,MAAO,CAACsO,UAAW,IAAKG,QAAS,kBAAMxP,EAAUC,2BAAzD,qBAEF,kBAAC6U,GAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,GAAA,EAAD,CAAWzC,aAAW,WAAWtN,KAAK,WAAWgQ,KAAG,GAClD,kBAACC,GAAA,EAAD,CACElY,MAAM,SACNmY,QAAS,kBAACC,GAAA,EAAD,CAAUpU,MAAM,UAAUqU,QAA0B,WAAhB/X,EAAMG,SAAwB,EAAO0L,SAAU,WAAKpJ,EAAe,CAACtC,OAAQ,eACzHiL,MAAM,UACN4M,eAAe,WAEjB,kBAACJ,GAAA,EAAD,CACElY,MAAM,SACNmY,QAAS,kBAACC,GAAA,EAAD,CAAUpU,MAAM,UAAUqU,QAA0B,WAAhB/X,EAAMG,SAAwB,EAAO0L,SAAU,WAAKpJ,EAAe,CAACtC,OAAQ,eACzHiL,MAAM,UACN4M,eAAe,WAEjB,kBAACJ,GAAA,EAAD,CACElY,MAAM,SACNmY,QAAS,kBAACC,GAAA,EAAD,CAAUpU,MAAM,UAAUqU,QAA0B,QAAhB/X,EAAMG,SAAqB,EAAO0L,SAAU,WAAKpJ,EAAe,CAACtC,OAAQ,YACtHiL,MAAM,OACN4M,eAAe,gBCnElB,SAASC,GAAT,GAAsC,IAAfhM,EAAc,EAAdA,YACpC,OACE,kBAACoH,GAAA,EAAD,CAAM5P,MAAO,CAACyU,gBAAiB,UAAWC,YAAa,EAAGC,aAAc,EAAGC,WAAY,EAAGrB,cAAe,EAAGsB,aAAc,IACxH,kBAACnB,GAAA,EAAD,CAAM1T,MAAO,CAACC,MAAO,QAAS6U,gBAAiB,OAAQC,iBAAkB,CAAClC,MAAO,EAAGhF,OAAQ,GAAImH,iBAAkB,IAAlH,UACMxM,EAAYG,QADlB,gBACiCH,EAAYW,kBAD7C,QCHS,SAAS8L,GAAT,GAAsC,IAAfzM,EAAc,EAAdA,YACpC,OACE,kBAACoH,GAAA,EAAD,CAAM5P,MAAO,CAACyU,gBAAiB,UAAWC,YAAa,EAAGC,aAAc,EAAGC,WAAY,EAAGrB,cAAe,EAAGsB,aAAc,EAAGK,YAAa,EAAGrB,WAAY,IACvJ,kBAACH,GAAA,EAAD,CAAM1T,MAAO,CAACC,MAAO,QAAS6U,gBAAiB,OAAQC,iBAAkB,CAAClC,MAAO,EAAGhF,OAAQ,GAAImH,iBAAkB,IAAlH,UACMxM,EAAYI,QADlB,gBACiCJ,EAAYY,kBAD7C,QCHS,SAAS+L,GAAT,GAAmC,IAAf3M,EAAc,EAAdA,YACjC,OACE,kBAACoH,GAAA,EAAD,CAAM5P,MAAO,CAACyU,gBAAiB,UAAWC,YAAa,EAAGC,aAAc,EAAGC,WAAY,EAAGrB,cAAe,EAAGsB,aAAc,IACxH,kBAACnB,GAAA,EAAD,CAAM1T,MAAO,CAACC,MAAO,QAAS6U,gBAAiB,OAAQC,iBAAkB,CAAClC,MAAO,EAAGhF,OAAQ,GAAImH,iBAAkB,IAAlH,UACMxM,EAAYK,KADlB,gBAC8BL,EAAYa,eAD1C,QCGS,SAAS+L,KAAe,IAC9Bxa,EAAS+S,KAAT/S,MACD4N,EAAc5N,EAAMc,IAAI8M,YAE9B,OAD4B5N,EAAMS,KAAK8D,OAAOC,kBAAkB4I,oBAI9D,kBAAC4H,GAAA,EAAD,CAAM5P,MAAO,CAAC8O,SAAU,WAAYuG,QAAS,OAAQtF,cAAe,MAAO0D,eAAgB,SAAUD,WAAY,SAAU/C,IAAK,GAAI+B,OAAQ,IAAKK,MAAO,UACtJ,kBAAC2B,GAAD,CAAchM,YAAaA,IAC3B,kBAACyM,GAAD,CAAczM,YAAaA,IAC3B,kBAAC2M,GAAD,CAAW3M,YAAaA,KANK,K,yBCPpB,SAAS1E,KAAa,IAAD,EACT6J,KAAlB/S,EAD2B,EAC3BA,MAAOG,EADoB,EACpBA,QACRS,EAAUZ,EAAMS,KAAKyH,OAAOgB,UAC5B7E,EAAYlE,EAAQM,KAAKyH,OAAOgB,UAGhCI,GADO1I,EAAQW,KACRX,EAAQ0I,MACfwB,EAAezG,EAAUyG,aACzBvC,EAAWlE,EAAUkE,SACrBsC,EAASxG,EAAUwG,OATS,EAUFwL,IAAMC,UAAS,GAVb,oBAU3BoE,EAV2B,KAUjBC,EAViB,KAY5BtY,EAAOzB,EAAQyB,MAAQ,GACvBuY,EAAcha,EAAQkC,MAE5B,OACE,kBAAC+X,GAAA,EAAD,CAAOtZ,KAAMX,EAAQW,KAAMuZ,KAAK,QAC9B,kBAACD,GAAA,EAAME,OAAP,KACI/a,EAAMS,KAAK2G,IAAIxC,aAAgB,aAAe,aAElD,kBAACiW,GAAA,EAAMG,QAAP,KACE,kBAAChG,GAAA,EAAD,CAAM5P,MAAO,CAAC+P,cAAe,SAAUyC,OAAQ,IAC7C,kBAACkB,GAAA,EAAD,CAAM1T,MAAO,CAAC8T,aAAc,IAA5B,eACA,kBAAC9F,GAAA,EAAD,CAAMC,SAAU,kBAAMxI,MACpB,kBAACyI,GAAA,EAAD,CAAO2H,WAAS,EAAC1H,YAAY,UAAUlS,MAAOiI,EAAMkE,SAAU,SAACgG,GAAS1I,EAAa,CAACxB,KAAMkK,EAAIyC,OAAO5U,YAEzG,kBAACyX,GAAA,EAAD,CAAM1T,MAAO,CAAC8T,aAAc,EAAGxF,UAAW,KAA1C,SACA,kBAAC0B,GAAA,EAAD,CACE8F,QACE,kBAAClG,GAAA,EAAD,CAAM5P,MAAO,CAAC0U,YAAa,GAAIC,aAAc,EAAGoB,OAAQ,+BAAgClB,aAAc,eAAgBhH,OAAQ,GAAIkC,cAAe,MAAOyD,WAAY,SAAUC,eAAgB,kBAC5L,kBAACC,GAAA,EAAD,CAAM1T,MAAO,CAACC,MAAQhD,EAAKiH,KAAO,kBAAoB,oBACnDjH,EAAKiH,MAAQ,iBAEhB,kBAAC8R,GAAA,EAAD,CAAM9R,KAAK,aAAalE,MAAO,CAACuT,cAAe,OAGnDpD,KAAM,KACNF,OAAQ,WAAOsF,GAAY,IAC3BrF,OAAQ,WAAOqF,GAAY,IAC3BpZ,KAAMmZ,GACN,kBAACtF,GAAA,EAASQ,KAAV,CAAexQ,MAAO,CAACiW,SAAU,SAAUC,UAAW,SACpD,kBAAClG,GAAA,EAASU,KAAV,CAAe1Q,MAAO,CAAC2Q,UAAW,UAAWpL,KAAK,eAAetJ,MAAM,eAAewS,QAAS,SAACL,EAAKpS,GAAQiD,EAAU4G,YAAa0P,GAAY,MAChJ,kBAACrH,GAAA,EAAD,CAAOiC,KAAK,SAASS,aAAa,OAAOL,UAAU,SAAStU,MAAOT,EAAQ0J,WAAYkD,SAAU,SAACgG,GAAOnP,EAAU0G,mBAAmByI,EAAIyC,OAAO5U,UACjJ,kBAAC+T,GAAA,EAASQ,KAAV,CAAeM,WAAS,GACrB0E,EAAYlU,KAAI,SAACyP,GAAD,OACf,kBAACf,GAAA,EAASU,KAAV,eAAepL,IAAKyL,EAAO9U,OAAW8U,EAAtC,CAA8CtC,QAAS,WAAOxP,EAAU2G,aAAa,CAACzI,GAAI4T,EAAO9U,QAASsZ,GAAY,eAOlI,kBAACE,GAAA,EAAMU,QAAP,KACE,kBAAC9H,GAAA,EAAD,CAAQ+H,UAAQ,EAAC3H,QAAS,kBAAMtL,MAAhC,UACA,kBAACkL,GAAA,EAAD,CAAQgI,UAAQ,EAAClG,KAAK,YAAYmG,cAAc,QAAQC,QAAQ,OAAO9H,QAAS,kBAAMhJ,SCtD/E,SAAS5C,KAAc,IAAD,EACV8K,KAAlB/S,EAD4B,EAC5BA,MAAOG,EADqB,EACrBA,QACRS,EAAUZ,EAAMS,KAAKyH,OAAOD,WAC5B5D,EAAYlE,EAAQM,KAAKyH,OAAOD,WAE9B1G,EAAiBX,EAAjBW,KAAMtB,EAAWW,EAAXX,OACNmI,EAAwC/D,EAAxC+D,eAAgBG,EAAwBlE,EAAxBkE,SAAUF,EAAchE,EAAdgE,UAElC,OACE,kBAACwS,GAAA,EAAD,CAAOtZ,KAAMA,EAAMuZ,KAAK,QACtB,kBAACD,GAAA,EAAME,OAAP,+BACA,kBAACF,GAAA,EAAMG,QAAP,KACE,kBAAClC,GAAA,EAAD,gBACA,kBAAC9D,GAAA,EAAD,CAAM5P,MAAO,CAAC+P,cAAe,QAC3B,kBAAC7B,GAAA,EAAD,CAAOlO,MAAO,CAAC6P,KAAM,EAAGvB,UAAW,GAAIH,YAAY,2BAA2BlS,MAAOpB,EAAQuN,SAAU,SAACgG,GAASpL,EAAe,CAACnI,OAAQuT,EAAIyC,OAAO5U,aAGxJ,kBAACwZ,GAAA,EAAMU,QAAP,KACE,kBAAC9H,GAAA,EAAD,CAAQ+H,UAAQ,EAAC3H,QAAS,kBAAMtL,MAAhC,UACA,kBAACkL,GAAA,EAAD,CAAQgI,UAAQ,EAAClG,KAAK,YAAYmG,cAAc,QAAQC,QAAQ,UAAU9H,QAAS,kBAAMxL,EAAU,SCnB5F,SAASoD,KAAgB,IAAD,EACZsH,KAAlB/S,EAD8B,EAC9BA,MAAOG,EADuB,EACvBA,QACRS,EAAUZ,EAAMS,KAAKyH,OAAOuD,aAC5BpH,EAAYlE,EAAQM,KAAKyH,OAAOuD,aAE9BlK,EAAeX,EAAfW,KAAM+H,EAAS1I,EAAT0I,KACNwB,EAAmCzG,EAAnCyG,aAAcvC,EAAqBlE,EAArBkE,SAAUsC,EAAWxG,EAAXwG,OAEhC,OACE,kBAACgQ,GAAA,EAAD,CAAOtZ,KAAMA,EAAMuZ,KAAK,QACtB,kBAACD,GAAA,EAAME,OAAP,sBACA,kBAACF,GAAA,EAAMG,QAAP,KACE,kBAAClC,GAAA,EAAD,cACA,kBAAC9D,GAAA,EAAD,CAAM5P,MAAO,CAAC+P,cAAe,QAC3B,kBAAC/B,GAAA,EAAD,CAAMhO,MAAO,CAAC6P,KAAM,GAAI5B,SAAUxI,GAChC,kBAACyI,GAAA,EAAD,CAAO2H,WAAS,EAAC7V,MAAO,CAAC6S,MAAO,OAAQvE,UAAW,GAAIH,YAAY,gBAAgBlS,MAAOiI,EAAMkE,SAAU,SAACgG,GAAS1I,EAAa,CAACxB,KAAMkK,EAAIyC,OAAO5U,cAIzJ,kBAACwZ,GAAA,EAAMU,QAAP,KACE,kBAAC9H,GAAA,EAAD,CAAQ+H,UAAQ,EAAC3H,QAAS,kBAAMtL,MAAhC,UACA,kBAACkL,GAAA,EAAD,CAAQgI,UAAQ,EAAClG,KAAK,YAAYmG,cAAc,QAAQC,QAAQ,OAAO9H,QAAS,kBAAMhJ,SCrB/E,SAASK,KAAW,IAAD,EACP6H,KAAlB/S,EADyB,EACzBA,MAAOG,EADkB,EAClBA,QACRS,EAAUZ,EAAMS,KAAKyH,OAAOgD,QAC5B7G,EAAYlE,EAAQM,KAAKyH,OAAOgD,QAE9B3J,EAAeX,EAAfW,KAAM+H,EAAS1I,EAAT0I,KACNwB,EAAmCzG,EAAnCyG,aAAcvC,EAAqBlE,EAArBkE,SAAUsC,EAAWxG,EAAXwG,OAEhC,OACE,kBAACgQ,GAAA,EAAD,CAAOtZ,KAAMA,EAAMuZ,KAAK,QACtB,kBAACD,GAAA,EAAME,OAAP,iBACA,kBAACF,GAAA,EAAMG,QAAP,KACE,kBAAClC,GAAA,EAAD,cACA,kBAAC9D,GAAA,EAAD,CAAM5P,MAAO,CAAC+P,cAAe,QAC3B,kBAAC7B,GAAA,EAAD,CAAOlO,MAAO,CAAC6P,KAAM,EAAGvB,UAAW,GAAIH,YAAY,eAAelS,MAAOiI,EAAMkE,SAAU,SAACgG,GAAS1I,EAAa,CAACxB,KAAMkK,EAAIyC,OAAO5U,aAGtI,kBAACwZ,GAAA,EAAMU,QAAP,KACE,kBAAC9H,GAAA,EAAD,CAAQ+H,UAAQ,EAAC3H,QAAS,kBAAMtL,MAAhC,UACA,kBAACkL,GAAA,EAAD,CAAQgI,UAAQ,EAAClG,KAAK,YAAYmG,cAAc,QAAQC,QAAQ,OAAO9H,QAAS,kBAAMhJ,SCgB/E+Q,OAvBf,WAGE,OAFkB7I,KAAV/S,MAEGS,KAAKC,MAAMO,SAKpB,yBAAK0U,UAAU,OAEb,kBAACpR,GAAD,MACA,kBAACiW,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACtX,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,OAdK,kBAAC,GAAD,OCVLpC,GAAM+a,YAAe3b,GAC3B,CACE4b,UAAU,IAGZC,IAASC,OACP,kBAAC,IAAD,CAAU3a,MAAOP,IACf,kBAAC,GAAD,OAEFmb,SAASC,eAAe,StE4GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlM,MAAK,SAAAmM,GACjCA,EAAaC,iB,qGuEnInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.c698baec.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const SCOPE = 'oada.yield:all';\nconst METADATA_OPENATK = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY';\nconst METADATA_LOCALHOST_VIP = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\nconst METADATA_IOS = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6InluMjJ1akJVQ0VlbE5VUnJhOW9na2hlRDJLRVhvbGprc21BVnFGcTBMUGciLCJqd2siOnsia3R5IjoiUlNBIiwia2lkIjoieW4yMnVqQlVDRWVsTlVScmE5b2draGVEMktFWG9samtzbUFWcUZxMExQZyIsIm4iOiJycjM4aUs4RmkwXy1DUkxUdlZLNElJQ2xhcmlpNndWSHBFN3paUFhvRVJsX09vaDY0WW1iUWNSYTVlRncwVVFoVXZFQ2hLdTlObzNqbTdMVzlaY0wxSEtyaGtVVy1PUW9iT1hVbnJDZ29DcGE4VlloX3dSSWRRWWJzdlBRVmo1Tkd1dU5YYVpCX19weEZ5LW5fTzJJTVM4T0dyZXptM2JRSERBZi1qbmdJaFpHWmdMYXZMSnlTSFV5RFFMNEZiUTZEM1F6M0FNT3J4RnZhNEtCSVBDUUtGT21ZWFZuNHp0Z1Q2OGhneU1vYzFLeXR4b1JnelZIbkNkVHBQV1dWcm5NRmNKZWRZRC1MbWswWG81cmpZT3htcThBMWVqZnhQTWVSXzNWNzhBSmsyTERJNHZHYUozZm5hUFpTN0N2VzhGM3BXV2lqX0J5VkdDSS01QnJrcUhfblEiLCJlIjoiQVFBQiJ9fQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vMTkyLjE2OC41MC4xMTI6ODAwMC9vYXV0aDIvcmVkaXJlY3QuaHRtbCJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InVybjppZXRmOnBhcmFtczpvYXV0aDpjbGllbnQtYXNzZXJ0aW9uLXR5cGU6and0LWJlYXJlciIsImdyYW50X3R5cGVzIjpbImltcGxpY2l0Il0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiaWRfdG9rZW4iLCJpZF90b2tlbiB0b2tlbiJdLCJjbGllbnRfbmFtZSI6Ik9wZW5BVEsiLCJjbGllbnRfdXJpIjoiaHR0cHM6Ly92aXAzLmVjbi5wdXJkdWUuZWR1IiwiY29udGFjdHMiOlsiU2FtIE5vZWwgPHNhbm9lbEBwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJzcHp4ZnlSdE5sWlQ1OU85WF8yWUdBLWxEbVVZblhnSGhhdjd5MzdyTXRWVEcxYWJFTDVhLUZNcTQtSzZpUDNXTkx4UjQ2clZpbWJWWFVjYjUyRlNFbEVMdXQ2SUNZYkQ0SUJMNVJFSm1qOW52d3ZwZk9oNnBVb2lXUEVPT0F0RV9mbzFjSlhCRjM0YnVaV2ZsWHBfNi1zYWJaeXBqVFhWUVFuOHUwZHZzcWNXTEQtS0tBNEFIVTgwQWhCMFM3dEVFa0JNdEpfeDVCd08tSHFlQU9lVEpIM1paTlJtS3AxMG1meV9OVlZPM3FiNWlfRk5RdGpOc0szWlFRNk0xR1FZdURKSW5TYnF1YXJhbkU0X0VVcGR4TWdTenRrbVpubUh6bnV6aDcxbzdkUjZEV013SzI1RlpSeG9VenhNaVB0eWR4WEtVenIxVHJ6UnlLTmtzRVVzT3ciLCJlIjoiQVFBQiIsImtpZCI6IjAwMjkwZjRlYzg4NDRjNmY5NjNkNzQzZTc1N2VmNDNiIn1dfX0.f0co8RSXn3IaiHSfJM4U7DLFOE0kThz3HbwNVcOOEs_LcmdwYsNBiYx7FljsqH5MLnjtCyw7l7bo1eWWxwOan8UZPkIgowE4cDxHJwUbdn1fN0NbOsk7CPwysYQJXYWS8BnXjNGykkUu8k-QhObLkmkmfy1a3uHIVXEMUcbT7tLumeMt8mVM6g7ZCNuSOhR3JQ2On6MfwjFVmFXePFM7o_o14HrRdf5TczdZyWHZzXwa2vTQP-rylMvmiWsdFLMViGLsJODFAtDuxL19uhsO2U4BeyrWO-14-V9gD6C4h_DWWfUnxH8ISdux6wqCewHcfUyOMwqdLVrk7M65sBhuMw';\nconst REDIRECT_OPENATK = 'http://openatk.com/FieldWorkApp/oauth2/redirect.html';\nconst REDIRECT_LOCALHOST = 'http://localhost:8000/oauth2/redirect.html';\nconst REDIRECT_IOS = 'http://192.168.50.112:8000/oauth2/redirect.html';\n\nlet METADATA;\nlet REDIRECT;\nlet oadaDomain = '';\nif (process.env.NODE_ENV !== 'production') {\n  console.log('NODE_ENV = ', process.env.NODE_ENV);\n  METADATA = METADATA_LOCALHOST_VIP;\n  REDIRECT = REDIRECT_LOCALHOST;\n  oadaDomain = 'https://localhost';\n} else {\n  METADATA = METADATA_OPENATK;\n  REDIRECT = REDIRECT_OPENATK;\n}\n\nlet OPTIONS = {\n    redirect: REDIRECT,\n    metadata: METADATA,\n    scope: SCOPE\n};\n\nexport default {\n  OPTIONS,\n  REDIRECT,\n  METADATA,\n  SCOPE,\n  oadaDomain\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import config from '../../../config'\nexport default {\n  domain: config.oadaDomain\n}\n","export default {\n  onInitialize({ state, actions }) {\n    console.log('Login - onInitialize')\n    const domain = window.localStorage['oada:domain'];\n    const token = window.localStorage['oada:token'];\n    if (domain) {\n      state.view.Login.domain = domain\n    }\n    if (domain && token) {\n      //Auto login\n      actions.view.Login.login({token});\n    }\n  },\n  async login({ state, actions }, {token}) {\n    const myState = state.view.Login;\n    let domain = myState.domain;\n    myState.loading = true;\n    domain = domain.match(/^http/) ? domain : 'https://'+myState.domain;\n    await actions.app.OADAManager.login({domain, token});\n    myState.loading = false;\n    if (state.app.OADAManager.connected) {\n      myState.loggedIn = true;\n      //Save domain and token\n      window.localStorage['oada:domain'] = myState.domain;\n      window.localStorage['oada:token'] = state.app.OADAManager.token;\n    }\n  },\n  async logout({ state, actions }) {\n    const myState = state.view.Login;\n    if (state.app.OADAManager.connected) {\n      await actions.app.OADAManager.logout();\n      delete window.localStorage['oada:domain']\n      delete window.localStorage['oada:token']\n    }\n    myState.loggedIn = false;\n  },\n  domainChange({ state }, data) {\n    const myState = state.view.Login;\n    myState.domain = data.value;\n  },\n  viewDemo({ state }, data) {\n    const myState = state.view.Login;\n    myState.loggedIn = true;\n  }\n}\n","import _ from 'lodash';\nimport geojsonArea from '@mapbox/geojson-area';\n\nexport default {\n  open: false,\n  fieldId: ({}, state) => {\n    return _.get(state, `view.Map.selectedField`);\n  },\n  field: ({fieldId: selectedFieldId}, state) => {\n    const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`);\n    if (selectedFieldId == null) return null;\n    const status = _.get(operation, `fields.${selectedFieldId}.status`, null);\n    let field = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      field = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.fields.${selectedFieldId}`); //TODO year\n    } else {\n      field = _.get(state, `app.localData.abc123.seasons.2020.fields.${selectedFieldId}`); //TODO year, organization\n    }\n    if (field == null) return null;\n    const acres = geojsonArea.geometry(field.boundary) * 0.000247105 //Meters to acres;\n    return _.merge({}, field, {status, acres});\n  },\n  farm: ({field}, state) => {\n    //Get farm for selected field\n    let farm = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      if (_.get(field, 'farm._id')) {\n        const farmId = _.get(state, `app.oadaSeasonFarmsIdBy_id.${_.get(field, 'farm._id')}.id`)\n        farm = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.farms.${farmId}`); //TODO year\n      }\n    } else {\n      if (_.get(field, 'farm.id')) {\n        farm = _.get(state, `app.localData.abc123.seasons.2020.farms.${field.farm.id}`); //TODO year, organization\n      }\n    }\n    return farm;\n  },\n  showAddOperationButton: ({}, state) => {\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      return _.isEmpty(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.operations`)); //TODO year\n    } else {\n      return _.isEmpty(_.get(state, `app.localData.abc123.seasons.2020.operations`)); //TODO year\n    }\n  }\n}\n","export default {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: 0,\n    fields: {\n      _type: \"application/vnd.oada.fields.1+json\",\n      _rev: 0,\n      fields: {\n        \"*\": {\n          _type: \"application/vnd.oada.field.1+json\",\n          _rev: 0,\n          farm: {\n            _type: \"application/vnd.oada.farm.1+json\",\n          }\n        }\n      },\n      farms: {\n        \"*\": {\n          _type: \"application/vnd.oada.farm.1+json\",\n          _rev: 0\n        }\n      }\n    },\n    seasons: {\n      _type: \"application/vnd.oada.seasons.1+json\",\n      _rev: 0,\n      \"*\": {\n        _type: \"application/vnd.oada.season.1+json\",\n        _rev: 0,\n        fields: {\n          \"*\": {\n            _type: \"application/vnd.oada.field.1+json\",\n            _rev: 0,\n            operations: {\n              \"*\": {\n                _type: \"application/vnd.oada.operation.1+json\"\n              }\n            }\n          }\n        },\n        farms: {\n          \"*\": {\n            _type: \"application/vnd.oada.farm.1+json\",\n            _rev: 0\n          }\n        },\n        operations: {\n          \"*\": {\n            _type: \"application/vnd.oada.operation.1+json\",\n            _rev: 0\n          }\n        }\n      }\n    }\n  }\n};\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\nimport uuid from 'uuid/v1';\nimport tree from '../../app/OADAManager/tree.js';\n\nexport default {\n  open({state}) {\n    const myState = state.view.FieldDetails;\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.FieldDetails;\n    myState.open = false;\n  },\n  changeOADAFieldStatus({state, actions}, status) {\n    const selectedFieldId = _.get(state, `view.Map.selectedField`);\n    const operationId = _.get(state, `view.TopBar.OperationDropdown.selectedOperationId`)\n\n    let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n    let field = _.clone(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.operations.${operationId}.fields.${selectedFieldId}`)) || {}; //TODO year, organization\n    let newStatus = status;\n    if (field.status == status) newStatus = null; //Unchecking\n    field.status = newStatus;\n    if (field.status == null) {\n      //Optimistic Update\n      //Remove field from operation\n      _.unset(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.operations.${operationId}.fields.${selectedFieldId}`) //TODO year, organization\n      //Remove operation from season's field's operation list\n      _.unset(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.fields.${selectedFieldId}.operations.${operationId}`) //TODO year, organization\n\n      //Change on server\n      let requests = [\n        {  //Remove field to operation\n          type: 'application/vnd.oada.operation.1+json', //TODO oada.put should handle this\n          path: `/bookmarks/seasons/2020/operations/${operationId}/fields/${selectedFieldId}` //TODO year\n        },\n        { //Remove operation to field in season's field's operation list\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2020/fields/${selectedFieldId}/operations/${operationId}` //TODO year\n        }\n      ];\n      actions.app.oada.delete({requests, connection_id: currentConnection});\n    } else {\n      //Optimistic Update\n      //Add field to operation\n      _.set(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.operations.${operationId}.fields.${selectedFieldId}`, field) //TODO year, organization\n      //Create operations key on season's field list if doesn't exist\n      if (_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.fields.${selectedFieldId}.operations`) == null) _.set(state, `app.localData.abc123.seasons.2020.fields.${selectedFieldId}.operations`, {}) //TODO year, organization\n      //Add operation to field in season's field's operation list\n      _.set(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.fields.${selectedFieldId}.operations.${operationId}`, {}) //TODO year, organization\n\n      //Change on server\n      const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`)\n      let requests = [\n        {  //Add field to operation\n          tree,\n          data: field,\n          type: 'application/vnd.oada.operation.1+json', //TODO oada.put should handle this\n          path: `/bookmarks/seasons/2020/operations/${operationId}/fields/${selectedFieldId}` //TODO year\n        },\n        { //Add operation to field in season's field's operation list\n          tree,\n          data: {_id: operation._id}, //OADA _id\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2020/fields/${selectedFieldId}/operations/${operationId}` //TODO year\n        }\n      ];\n      actions.app.oada.put({requests, connection_id: currentConnection});\n    }\n  },\n  changeLocalFieldStatus({state}, status) {\n    const myState = state.view.FieldDetails;\n    const selectedFieldId = _.get(state, `view.Map.selectedField`);\n    const operationId = _.get(state, `view.TopBar.OperationDropdown.selectedOperationId`)\n    var field = _.clone(_.get(state, `app.localData.abc123.seasons.2020.operations.${operationId}.fields.${selectedFieldId}`)) || {}; //TODO year, organization\n    var newStatus = status;\n    if (field.status == status) newStatus = null; //Unchecking\n    field.status = newStatus;\n    if (field.status == null) {\n      //Remove field from operation\n      _.unset(state, `app.localData.abc123.seasons.2020.operations.${operationId}.fields.${selectedFieldId}`) //TODO year, organization\n      //Remove operation from season's field's operation list\n      _.unset(state, `app.localData.abc123.seasons.2020.fields.${selectedFieldId}.operations.${operationId}`) //TODO year, organization\n    } else {\n      //Add field to operation\n      _.set(state, `app.localData.abc123.seasons.2020.operations.${operationId}.fields.${selectedFieldId}`, field) //TODO year, organization\n      //Create operations key on season's field list if doesn't exist\n      if (_.get(state, `app.localData.abc123.seasons.2020.fields.${selectedFieldId}.operations`) == null) _.set(state, `app.localData.abc123.seasons.2020.fields.${selectedFieldId}.operations`, {}) //TODO year, organization\n      //Add operation to field in season's field's operation list\n      _.set(state, `app.localData.abc123.seasons.2020.fields.${selectedFieldId}.operations.${operationId}`, {}) //TODO year, organization\n    }\n  },\n  onStatusChange({state, actions}, {status}) {\n    const myActions = actions.view.FieldDetails;\n    if (state.app.OADAManager.connected) {\n      myActions.changeOADAFieldStatus(status)\n    } else {\n      myActions.changeLocalFieldStatus(status)\n    }\n  },\n  onAddNewOperationClick({actions}) {\n    actions.view.TopBar.OperationDropdown.onAdd();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  selectedField: null\n}\n","export default {\n  \n}\n","import _ from 'lodash';\n\nexport default {\n  fieldStyles: {},\n  selectedField: null,\n  editingField: null,\n  center: [41.448068, -84.972648],\n  zoom: 13,\n  bounds: [\n    [\n      41.44053877385792,\n      -84.97886180877687\n    ],\n    [\n      41.46330393671208,\n      -84.96770381927492\n    ]\n  ],\n  fields: ({}, state) => {\n    const fieldStyles = _.get(state, `view.Map.fieldStyles`)\n    const editingField = _.get(state, `view.Map.editingField`)\n    const drawingBoundary = _.get(state, `view.Map.BoundaryDrawing.drawing`)\n    const operation = _.get(state, `view.TopBar.OperationDropdown.selectedOperation`)\n    const fieldsToRender = _.get(state, `app.seasonFields`);\n    return _.chain(fieldsToRender).mapValues((field, id) => {\n      if (field == null) return null;\n      if (field.boundary == null) return null;\n      if (editingField == id) return null; //Don't show this field.\n      var styledField = _.clone(field);\n      //Add any styles\n      if (fieldStyles[id] != null) styledField.style = fieldStyles[id];\n      //Fill based on status of current operation\n      if (operation) {\n        var color = \"white\"\n        if (operation.fields && operation.fields[id]) {\n          if (operation.fields[id].status == 'planned') color = 'red'\n          if (operation.fields[id].status == 'started') color = 'orange'\n          if (operation.fields[id].status == 'done') color = '#0acd00' //Green\n        }\n        styledField.style = _.merge({}, styledField.style, {fillColor: color, color})\n      }\n      return styledField;\n    }).omitBy((v, k) => {\n      if (v == null) return true;\n    }).value();\n  }\n}\n","import _ from 'lodash';\nimport Promise from 'bluebird';\nimport BBox from '@turf/bbox';\nimport GeoJSON from 'geojson';\n\nexport default {\n  async zoomTo({state}, {latitude, longitude, zoom}) {\n    const myState = _.get(state, 'view.Map');\n    myState.center = [latitude, longitude];\n    myState.zoom = zoom;\n    await Promise.delay(500);\n    myState.center = null;\n    myState.zoom = null;\n  },\n  styleField: {\n    highlight({state}, fieldId) {\n      if (fieldId) {\n        const myState = _.get(state, 'view.Map');\n        _.set(myState, `fieldStyles.${fieldId}`, {weight: 5})\n      }\n    },\n    unhighlight({state}, fieldId) {\n      if (fieldId) {\n        const myState = _.get(state, 'view.Map');\n        _.set(myState, `fieldStyles.${fieldId}`, {weight: 3})\n      }\n    }\n  },\n  async unselectField({state, actions}) {\n    const myActions = _.get(actions, 'view.Map');\n    const myState = _.get(state, 'view.Map');\n    if (myState.selectedField) {\n      actions.view.FieldDetails.close();\n      myActions.styleField.unhighlight(myState.selectedField);\n      await Promise.delay(200)\n      myState.selectedField = null;\n    }\n  },\n  onFieldClick({state, actions}, {id}) {\n    const myActions = _.get(actions, 'view.Map');\n    const myState = _.get(state, 'view.Map');\n    const drawing = _.get(myState, `BoundaryDrawing.drawing`);\n    if (!drawing) {\n      myActions.styleField.unhighlight(myState.selectedField);\n      myState.selectedField = id;\n      myActions.styleField.highlight(id);\n      actions.view.FieldDetails.open();\n    }\n  },\n  onMapClick({actions}, props) {\n    const myActions = _.get(actions, 'view.Map');\n    myActions.unselectField()\n    //Pass click to boundary drawing\n    myActions.BoundaryDrawing.onMapClick(props)\n  },\n  async zoomBounds({state}, props) {\n    const myState = _.get(state, 'view.Map');\n    const fields = _.compact(_.map(myState.fields, (f) => {\n      if (!f.boundary) return null; //Don't include fields without boundaries\n      return {geo: f.boundary}\n    }));\n    const featureCollection = GeoJSON.parse(fields, {GeoJSON: 'geo'})\n    const bounds = BBox(featureCollection)\n    if (isFinite(bounds[0]) && isFinite(bounds[1]) && isFinite(bounds[2]) && isFinite(bounds[3])) {\n      myState.bounds = [[bounds[1], bounds[0]], [bounds[3], bounds[2]]];\n    }\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  boundary: {},\n  drawing: false\n}\n","import _ from 'lodash';\nimport {pipe, debounce, mutate} from 'overmind';\nimport uuid from 'uuid/v1';\n\nexport default {\n  addPointToBoundary({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    _.set(myState, `boundary.${uuid()}`, [props.lat, props.lng]);\n  },\n  updateBoundaryPoint: pipe(debounce(10), mutate(({state}, props) => {\n    const myState = state.view.Map.BoundaryDrawing;\n    _.set(myState, `boundary.${props.id}`, [props.latlng.lat, props.latlng.lng]);\n  })),\n  onMapClick({state, actions}, {lat, lng}) {\n    const myState = state.view.Map.BoundaryDrawing;\n    const myActions = actions.view.Map.BoundaryDrawing;\n    if (myState.drawing) {\n      myActions.addPointToBoundary({lat, lng});\n    }\n  },\n  onMarkerMove({actions}, props) {\n    const myActions = actions.view.Map.BoundaryDrawing;\n    myActions.updateBoundaryPoint(props);\n  },\n  onStartDrawing({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    myState.boundary = (props || {}).boundary || {};\n    myState.drawing = true;\n  },\n  onStopDrawing({state}, props) {\n    const myState = state.view.Map.BoundaryDrawing;\n    myState.drawing = false;\n    myState.boundary = {};\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as BoundaryDrawing from './BoundaryDrawing'\n\nexport const state = {\n  BoundaryDrawing: BoundaryDrawing.state,\n  ..._state\n};\nexport const actions = {\n  BoundaryDrawing: BoundaryDrawing.actions,\n  ..._actions\n}\n","import config from '../../../config'\nexport default {\n  OADADomain: {\n    open: false,\n    domain: config.oadaDomain\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../app/OADAManager/tree\";\n\nexport default {\n  OADADomain: {\n    open({state}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.open = true;\n    },\n    close({state}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.open = false;\n    },\n    onConnectClick({actions}) {\n      const myActions = actions.view.Modals.OADADomain;\n      myActions.open();\n    },\n    onDomainChange({state}, {domain}) {\n      const myState = state.view.Modals.OADADomain;\n      myState.domain = domain;\n    },\n    async onConnect({actions, state}) {\n      const myState = state.view.Modals.OADADomain;\n      const myActions = actions.view.Modals.OADADomain;\n      const {domain} = myState;\n      myState.loading = true;\n      await actions.app.OADAManager.onDomainChanged({domain});\n      myState.loading = false;\n      myActions.close()\n    },\n    onCancel({actions}) {\n      const myActions = actions.view.Modals.OADADomain;\n      myActions.close();\n    }\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\n\nfunction convertToGEOJSON(points) {\n  var boundary = {\n    type: \"Polygon\",\n    coordinates: [_.map(points, (p) => {return [p[1], p[0]]})] //Flip lat/lng and add array around\n  }\n  //Add first point again\n  if (boundary.coordinates && boundary.coordinates[0] && boundary.coordinates[0].length > 0) {\n    boundary.coordinates[0].push(boundary.coordinates[0][0]);\n  }\n  return boundary;\n}\nfunction getChanges({state, actions}, {fieldId, newBoundary, farmId, farm_id, seasonFarm_id}) {\n  const myState = state.view.Modals.SaveField;\n  //See if name or boundary has changed\n  let seasonField = actions.app.getSeasonField(fieldId);\n  let newName = myState.name;\n  var seasonFieldChanges = {};\n  var fieldChanges = {};\n  //Get changes the effect both\n  if (newName != seasonField.name) seasonFieldChanges.name = newName;\n  if (_.isEqual(newBoundary, seasonField.boundary) == false) seasonFieldChanges.boundary = newBoundary;\n\n  fieldChanges = _.cloneDeep(seasonFieldChanges)\n  //See if farm has changed\n  if (seasonFarm_id) {\n    //Connected to oada\n    if (!seasonField.farm || seasonField.farm._id != seasonFarm_id) {\n      seasonFieldChanges.farm = {_id: seasonFarm_id};\n      //TODO this isn't right, we shouldn't be adding a farm in the function that calls this if it isn't our current year\n      fieldChanges.farm = {_id: farm_id};\n    }\n  } else {\n    //Local\n    if (!seasonField.farm || seasonField.farm.id != farmId) {\n      seasonFieldChanges.farm = {id: farmId};\n      fieldChanges.farm = {id: farmId};\n    }\n  }\n  //TODO only change field if is current year\n  return {fieldChanges, seasonFieldChanges};\n}\nfunction saveChangesToLocalData({state}, editingFieldId, fieldChanges, seasonFieldChanges) {\n  if (_.isEmpty(fieldChanges) && _.isEmpty(seasonFieldChanges)) return;\n  const fieldPath = `app.localData.abc123.fields.fields.${editingFieldId}`; //TODO organization\n  _.set(state, fieldPath, _.merge({}, _.get(state, fieldPath), fieldChanges));\n  const seasonFieldPath = `app.localData.abc123.seasons.2020.fields.${editingFieldId}` //TODO year, organization\n  _.set(state, seasonFieldPath, _.merge({}, _.get(state, seasonFieldPath), seasonFieldChanges));\n}\nasync function saveChangesToOADA(context, editingFieldId, fieldChanges, seasonFieldChanges) {\n  const { state, actions } = context;\n  if (_.isEmpty(fieldChanges) && _.isEmpty(seasonFieldChanges)) return;\n  //Add to OADA\n  let requests = [];\n  if (_.isEmpty(fieldChanges) == false) {\n    requests.push({\n      tree,\n      data: fieldChanges,\n      path: `/bookmarks/fields/fields/${editingFieldId}`\n    })\n  }\n  if (_.isEmpty(seasonFieldChanges) == false) {\n    requests.push({\n      tree,\n      data: seasonFieldChanges,\n      path: `/bookmarks/seasons/2020/fields/${editingFieldId}` //TODO year\n    })\n  }\n  console.log('fieldChanges', fieldChanges);\n  console.log('seasonFieldChanges', seasonFieldChanges);\n  const connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  await actions.app.oada.put({requests, connection_id})\n}\n\nfunction createField(context, {boundary, farmId, farm_id}) {\n  const { state } = context;\n  const myState = state.view.Modals.SaveField;\n  var field = {\n    name: myState.name,\n    boundary: boundary,\n    farm: (farm_id) ?\n      {\n        _id: farm_id //OADA farm resource id\n      }\n      :\n      {\n        id: farmId\n      }\n  }\n  return field\n}\nfunction addFieldToLocalData(context, {field}) {\n  const { state } = context;\n  const id = uuid();\n  _.set(state, `app.localData.abc123.fields.fields.${id}`, field); //TODO organization\n  _.set(state, `app.localData.abc123.seasons.2020.fields.${id}`, {...field, operations: {}, year: '2020'}); //TODO year, organization\n  return id;\n}\nasync function addFieldToOADA(context, {field, seasonField}) {\n  const { state, actions } = context;\n  const id = uuid();\n  //Add to OADA\n  let requests = [];\n  if (field) {\n    requests.push({\n      tree,\n      data: field,\n      path: `/bookmarks/fields/fields/${id}`\n    })\n  }\n  if (seasonField) {\n    requests.push({\n      tree,\n      data: {...seasonField, operations: {}, year: '2020'}, //TODO year\n      path: `/bookmarks/seasons/2020/fields/${id}` //TODO year\n    })\n  }\n  let connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  await actions.app.oada.put({requests, connection_id})\n}\n\nexport default {\n  open({state, actions}) {\n    const myState = state.view.Modals.SaveField;\n    const editingField = _.get(state, `view.Map.editingField`);\n    if (editingField == null) {\n      myState.name = \"\";\n    } else {\n      let field = actions.app.getSeasonField(editingField);\n      //Populate the name in the modal popup\n      myState.name = field.name;\n      if (state.app.OADAManager.connected) {\n        //Get season farm id by oada id\n        const farmId = _.get(state, `app.oadaSeasonFarmsIdBy_id.${_.get(field, 'farm._id')}.id`)\n        myState.farmId = farmId;\n      } else {\n        myState.farmId = _.get(field, 'farm.id');\n      }\n    }\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.Modals.SaveField;\n    myState.open = false;\n  },\n  async saveField(context) {\n    const {state} = context;\n    const myState = state.view.Modals.SaveField;\n    //Convert the field to geojson\n    const points = _.get(state, `view.Map.BoundaryDrawing.boundary`)\n    const boundary = convertToGEOJSON(points);\n\n    //Create farm or get existing farms id (cannot update an existing farm here)\n    let farmId = myState.farmId;\n    let farm_id = null;\n    let seasonFarm_id = null;\n    let farm = myState.farm;\n    if (farm) {\n      if (state.app.OADAManager.connected) {\n        //Get farm_id\n        farm_id = _.get(state, `app.oadaOrgData.fields.farms.${farmId}._id`)\n        //Get seasonFarm_id from farmId\n        seasonFarm_id = _.get(state, `app.seasonFarms.${farmId}._id`)\n      }\n    }\n    //Update or create field\n    let editingFieldId = _.get(state, `view.Map.editingField`);\n    if (editingFieldId) {\n      //We are editing a field find the changes, if any\n      const {fieldChanges, seasonFieldChanges} = getChanges(context, {fieldId: editingFieldId, newBoundary: boundary, farmId, farm_id, seasonFarm_id})\n      if (state.app.OADAManager.connected) {\n        saveChangesToOADA(context, editingFieldId, fieldChanges, seasonFieldChanges)\n      } else {\n        saveChangesToLocalData(context, editingFieldId, fieldChanges, seasonFieldChanges)\n      }\n    } else {\n      //TODO only add field if is current year, otherwise just seasonfield\n      if (state.app.OADAManager.connected) {\n        const field = await createField(context, {boundary, farm_id});\n        const seasonField = await createField(context, {boundary, farm_id: seasonFarm_id});\n        await addFieldToOADA(context, {field, seasonField})\n      } else {\n        const field = await createField(context, {boundary, farm, farmId: farmId})\n        await addFieldToLocalData(context, {field})\n      }\n    }\n  },\n  onSave({actions, state}) {\n    const myActions = actions.view.Modals.SaveField;\n    myActions.saveField();\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n    state.view.Map.editingField = null;\n    myActions.close();\n  },\n  onCancel({actions, state}) {\n    const myActions = actions.view.Modals.SaveField;\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n    state.view.Map.editingField = null;\n    myActions.close();\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.SaveField;\n    myState.name = name;\n  },\n  onFarmSearchChange({state}, value) {\n    const myState = state.view.Modals.SaveField;\n    myState.farmSearch = value;\n  },\n  onFarmChange({state}, {id}) {\n    const myState = state.view.Modals.SaveField;\n    myState.farmId = id;\n  },\n  onFarmAdd({actions}) {\n    actions.view.Modals.NewFarm.open({callbackAction: 'view.Modals.SaveField.onFarmAddComplete'});\n  },\n  onFarmAddComplete({state}, {id}) {\n    const myState = state.view.Modals.SaveField;\n    //Update farmId\n    myState.farmId = id;\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\nexport default {\n  open: false,\n  name: '',\n  farmSearch: '',\n  farms: ({farmSearch: search}, state) => {\n    return _.compact(_.map(state.app.seasonFarms, (f, id) => {\n      if (!f || search != '' && f.name && f.name.toLowerCase().search(search.toLowerCase()) == -1) return null;\n      return {key: id, text: f.name, value: id};\n    }))\n  },\n  farmId: null,\n  farm: ({farmId, farms}, state) => {\n    if (farmId) {\n      return _.get(state, `app.seasonFarms.${farmId}`)\n    }\n  }\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\nfunction createOperation(context, {name}) {\n  var operation = {\n    name,\n    fields: {}\n  }\n  return operation;\n}\n\nfunction addOperationToLocalData({state}, {operation}) {\n  const id = uuid();\n  _.set(state, `app.localData.abc123.seasons.2020.operations.${id}`, operation); //TODO year, organization\n  return id;\n}\nasync function addOperationToOADA({state, actions}, {operation}) {\n  //Add to OADA\n  const id = uuid();\n  let requests = [\n    {\n      tree,\n      data: operation,\n      path: `/bookmarks/seasons/2020/operations/${id}` //TODO year\n    }\n  ];\n  const connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  const ret = await actions.app.oada.put({requests, connection_id})\n  const _id = _.get(ret, 'responses.0.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  return {id, _id}\n}\n\nexport default {\n  open({state}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.name = '';\n    myState.open = true;\n  },\n  close({state}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.open = false;\n  },\n  async saveOperation(context) {\n    const {state} = context;\n    const myState = state.view.Modals.NewOperation;\n    const operation = createOperation(context, {name: myState.name})\n    if (state.app.OADAManager.connected) {\n      const {id, _id} = await addOperationToOADA(context, {operation});\n      _.set(state, `view.TopBar.OperationDropdown.selected`, id)\n    } else {\n      const id = await addOperationToLocalData(context, {operation});\n      _.set(state, `view.TopBar.OperationDropdown.selected`, id)\n    }\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.NewOperation;\n    myState.name = name;\n  },\n  onCancel({actions}) {\n    const myActions = actions.view.Modals.NewOperation;\n    myActions.close();\n  },\n  async onSave({actions}) {\n    const myActions = actions.view.Modals.NewOperation;\n    await myActions.saveOperation();\n    myActions.close();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  name: ''\n}\n","import _ from 'lodash';\nimport uuid from 'uuid/v1'\nimport tree from \"../../../app/OADAManager/tree\";\n\nfunction createFarm(context, {name}) {\n  var farm = {\n    name\n  }\n  return farm;\n}\nfunction addFarmToLocalData(context, {farm}) {\n  const { state } = context;\n  const id = uuid();\n  _.set(state, `app.localData.abc123.farms.${id}`, farm); //TODO organization\n  _.set(state, `app.localData.abc123.seasons.2020.farms.${id}`, farm); //TODO year, organization\n  return id;\n}\nasync function addFarmToOADA(context, {farm}) {\n  const { state, actions } = context;\n  const id = uuid();\n  //TODO only add to season farms depending on what year is selected, need to figure out return values for that as well (since may only have one request)\n  //Add to OADA\n  let requests = [\n    {\n      tree,\n      data: farm,\n      path: `/bookmarks/fields/farms/${id}`\n    },\n    {\n      tree,\n      data: farm,\n      path: `/bookmarks/seasons/2020/farms/${id}` //TODO year\n    },\n  ];\n  let connection_id = _.get(state, `app.OADAManager.currentConnection`)\n  const ret = await actions.app.oada.put({requests, connection_id})\n  const farm_id = _.get(ret, 'responses.0.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  if (farm_id == null) throw 'OADA did not return an _id when creating a farm.'\n  const seasonFarm_id = _.get(ret, 'responses.1.headers.content-location').substr(1); //Remove leading `/` from /resources/<uuid>\n  if (seasonFarm_id == null) throw 'OADA did not return an _id when creating a season farm.'\n  return {farm_id, seasonFarm_id, id};\n}\nexport default {\n  open({state}, {callbackAction}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.name = '';\n    myState.open = true;\n    myState.callbackAction = callbackAction || null;\n  },\n  close({state}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.open = false;\n  },\n  async saveFarm(context) {\n    const {state, actions} = context;\n    const myState = state.view.Modals.NewFarm;\n    const farm = createFarm(context, {name: myState.name})\n    if (state.app.OADAManager.connected) {\n      const {farm_id, seasonFarm_id, id} = await addFarmToOADA(context, {farm});\n      if (myState.callbackAction) {\n        const action = _.get(actions, myState.callbackAction);\n        if (!action) throw `callbackAction: ${myState.callbackAction} does not exist.`\n        action({farm_id, seasonFarm_id, id});\n      }\n    } else {\n      const id = await addFarmToLocalData(context, {farm});\n      if (myState.callbackAction) {\n        const action = _.get(actions, myState.callbackAction);\n        if (!action) throw `callbackAction: ${myState.callbackAction} does not exist.`\n        action({id});\n      }\n    }\n  },\n  onNameChange({state}, {name}) {\n    const myState = state.view.Modals.NewFarm;\n    myState.name = name;\n  },\n  onCancel({actions}) {\n    const myActions = actions.view.Modals.NewFarm;\n    myActions.close();\n  },\n  async onSave({actions}) {\n    const myActions = actions.view.Modals.NewFarm;\n    await myActions.saveFarm();\n    myActions.close();\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","export default {\n  open: false,\n  name: ''\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as SaveField from './SaveField'\nimport * as NewOperation from './NewOperation'\nimport * as NewFarm from './NewFarm'\n\nexport const state = {\n  SaveField: SaveField.state,\n  NewOperation: NewOperation.state,\n  NewFarm: NewFarm.state,\n  ..._state\n};\nexport const actions = {\n  SaveField: SaveField.actions,\n  NewOperation: NewOperation.actions,\n  NewFarm: NewFarm.actions,\n  ..._actions\n}\n","import _ from 'lodash'\nimport uuid from 'uuid/v1'\n\nexport default {\n  onMyLocationClick({actions}, coords) {\n    if (!coords) return;\n    const {latitude, longitude} = coords;\n    actions.view.Map.zoomTo({latitude, longitude, zoom: 15})\n  },\n  onLocationChange({state}, coords) {\n    if (!coords) return;\n    const {latitude, longitude} = coords;\n    console.log('onLocationChange', coords)\n    if (latitude == null || longitude == null) return;\n    state.view.Map.location = {latitude, longitude};\n  },\n  onAddField({actions}) {\n    actions.view.Map.BoundaryDrawing.onStartDrawing();\n  },\n  onSaveField({actions}) {\n    actions.view.Modals.SaveField.open();\n  },\n  onCancelField({state, actions}) {\n    state.view.Map.editingField = null; //Stop editing if we were\n    actions.view.Map.BoundaryDrawing.onStopDrawing();\n  },\n  onEditField({actions, state}) {\n    const currentField = state.view.FieldDetails.field;\n    //Hide the current boundary\n    state.view.Map.editingField = state.view.FieldDetails.fieldId;\n    //Convert to drawing boundary: {<rand-id>: [lat, lng], ...}\n    let boundary = {};\n    let coors = _.get(currentField, 'boundary.coordinates.0');\n    if (coors.length > 0) coors.pop();\n    _.forEach(coors || [], (coors) => { //TODO will not work with holes in fields etc\n      boundary[uuid()] = [coors[1], coors[0]];\n    });\n    //Start drawing\n    actions.view.Map.BoundaryDrawing.onStartDrawing({boundary});\n    //Close the details drawer\n    actions.view.Map.unselectField()\n  },\n  async onResetCache({actions}) {\n    await actions.app.oada.resetCache();\n    //Refresh the page\n    //location.reload();\n  },\n  async onLogout({actions}) {\n    await actions.view.Login.logout()\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _ from 'lodash';\n\nexport default {\n  open: false,\n  selected: null,\n  search: '',\n  list: ({selected, operations}, state) => {\n    //Get operations, filtering by search\n    const search = _.get(state, `view.TopBar.OperationDropdown.search`)\n    return _.omitBy(_.mapValues(operations, ({name}, id) => {\n      if (id == null) return null; //Not an operation, a _key for oada\n      if (name == null) return null;\n      if (search != '' && name.search(search) == -1) return null;\n      return {\n        text: name,\n        value: id,\n        selected: (selected == id),\n        label: { color: 'green', empty: true, circular: true }\n      }\n    }), _.isEmpty)\n  },\n  operations: ({}, state) => {\n    let operations = null;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      operations = _.omitBy(_.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.operations`) || {}, (o, k) => {return _.startsWith(k, '_')}); //TODO year\n    } else {\n      operations = _.get(state, `app.localData.abc123.seasons.2020.operations`) //TODO year, organization\n    }\n    return operations\n  },\n  selectedOperationId: ({selected, operations}, state) => {\n    let selectedId = selected;\n    if (selectedId == null && _.keys(operations).length > 0) selectedId = _.keys(operations)[0];\n    return selectedId;\n  },\n  selectedOperation: ({selectedOperationId, operations}, state) => {\n    return operations[selectedOperationId];\n  }\n}\n","export default {\n  onAdd({state, actions}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.open = false;\n    return actions.view.Modals.NewOperation.open()\n  },\n  onChange({state}, {id}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.selected = id;\n    myState.open = false;\n  },\n  onOpenChange({state}, {open}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.open = open;\n  },\n  onSearch({state}, {search}) {\n    const myState = state.view.TopBar.OperationDropdown;\n    myState.search = search;\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\nimport * as OperationDropdown from './OperationDropdown'\n\nexport const state = {\n  OperationDropdown: OperationDropdown.state,\n  ..._state\n};\nexport const actions = {\n  OperationDropdown: OperationDropdown.actions,\n  ..._actions\n}\n","export default {\n\n}\n","import _state from './state'\nimport _actions from './actions'\n\nimport * as Login from './Login'\nimport * as FieldDetails from './FieldDetails'\nimport * as FieldList from './FieldList'\nimport * as Map from './Map'\nimport * as Modals from './Modals'\nimport * as TopBar from './TopBar'\n\nexport const state = {\n  Login: Login.state,\n  FieldDetails: FieldDetails.state,\n  FieldList: FieldList.state,\n  Map: Map.state,\n  Modals: Modals.state,\n  TopBar: TopBar.state,\n  ..._state\n};\nexport const actions = {\n  Login: Login.actions,\n  FieldDetails: FieldDetails.actions,\n  FieldList: FieldList.actions,\n  Map: Map.actions,\n  Modals: Modals.actions,\n  TopBar: TopBar.actions,\n  ..._actions\n}\nexport const onInitialize = async ({actions}) => {\n  await actions.app.onInitialize();\n  await actions.view.Login.onInitialize();\n}\n","import _ from 'lodash';\n\nexport default {\n  \n}\n","import _ from 'lodash'\nexport default {\n\n}\n","export default {\n  \"42f60b10-784c-11ea-8dfd-a3e960f56105\": {\n    \"name\": \"1004 G-N\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97584700584412,\n            41.4628134964027\n          ],\n          [\n            -84.97539639472963,\n            41.462765256171906\n          ],\n          [\n            -84.97495651245119,\n            41.46275721612994\n          ],\n          [\n            -84.97424840927125,\n            41.46250797433487\n          ],\n          [\n            -84.97405529022217,\n            41.46203360827181\n          ],\n          [\n            -84.97410893440247,\n            41.46044164256161\n          ],\n          [\n            -84.97139453887941,\n            41.46130195211675\n          ],\n          [\n            -84.96770381927492,\n            41.46327177680542\n          ],\n          [\n            -84.97010707855226,\n            41.46330393671208\n          ],\n          [\n            -84.9764907360077,\n            41.46306273702346\n          ],\n          [\n            -84.97634053230287,\n            41.45965368547904\n          ],\n          [\n            -84.97462391853334,\n            41.46024867436535\n          ],\n          [\n            -84.9746346473694,\n            41.461004463187685\n          ],\n          [\n            -84.97491359710695,\n            41.46126175098986\n          ],\n          [\n            -84.97492432594301,\n            41.46172004235903\n          ],\n          [\n            -84.97529983520509,\n            41.46208988917259\n          ],\n          [\n            -84.97581481933594,\n            41.46234717266838\n          ],\n          [\n            -84.9761688709259,\n            41.46278133625282\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\"\n    }\n  },\n  \"7c0ce950-784c-11ea-bfa5-97fea4f9bfd9\": {\n    \"name\": \"1001 HO-N\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97347593307495,\n            41.44864540647965\n          ],\n          [\n            -84.97626543045044,\n            41.44856498851091\n          ],\n          [\n            -84.97617959976196,\n            41.44784122230691\n          ],\n          [\n            -84.977445602417,\n            41.44782513852177\n          ],\n          [\n            -84.97759580612183,\n            41.44862932289387\n          ],\n          [\n            -84.97886180877687,\n            41.448532821295515\n          ],\n          [\n            -84.97866868972778,\n            41.44205080201176\n          ],\n          [\n            -84.97654438018799,\n            41.442887227983185\n          ],\n          [\n            -84.97549295425415,\n            41.44425443952937\n          ],\n          [\n            -84.97323989868165,\n            41.44608806625952\n          ],\n          [\n            -84.97272491455078,\n            41.44689227216232\n          ],\n          [\n            -84.97330427169801,\n            41.44726220353039\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\",\n    }\n  },\n  \"8ab27420-784c-11ea-bfa5-97fea4f9bfd9\": {\n    \"name\": \"1002 HO-S\",\n    \"boundary\": {\n      \"type\": \"Polygon\",\n      \"coordinates\": [\n        [\n          [\n            -84.97152328491212,\n            41.44697269220437\n          ],\n          [\n            -84.97148036956789,\n            41.44166475561947\n          ],\n          [\n            -84.97152328491212,\n            41.44111785263252\n          ],\n          [\n            -84.97347593307495,\n            41.441085681725035\n          ],\n          [\n            -84.97373342514038,\n            41.44073180069027\n          ],\n          [\n            -84.97635126113893,\n            41.44053877385792\n          ],\n          [\n            -84.97645854949953,\n            41.44134304853828\n          ],\n          [\n            -84.97607231140138,\n            41.44161649965898\n          ],\n          [\n            -84.97611522674562,\n            41.44240467585386\n          ],\n          [\n            -84.97540712356569,\n            41.44398099952468\n          ]\n        ]\n      ]\n    },\n    \"farm\": {\n      \"id\": \"42f08cd0-784c-11ea-8dfd-a3e960f56105\"\n    }\n  }\n}\n","export default {\n  \"42f08cd0-784c-11ea-8dfd-a3e960f56105\": {\n    name: \"Bowman and Bowman\"\n  },\n  \"52f08cd0-784c-11ea-8dfd-a3e960f56105\": {\n    name: \"Martz Farms\"\n  }\n}\n","import testFields from './test/testFields';\nimport testFarms from './test/testFarms';\nimport _ from 'lodash';\nimport geojsonArea from '@mapbox/geojson-area';\n\nexport default {\n  acresStatus: ({}, state) => {\n    //Get id's of all fields in this operation\n    const operationFields = state.app.operationFields;\n    const seasonFields = state.app.seasonFields;\n    //Loop through each field, totaling acres.\n    let planned = 0;\n    let started = 0;\n    let done = 0;\n    _.forEach(operationFields, (fieldOperation, key) => {\n      if (fieldOperation == null) return;\n      //Get field\n      let field = seasonFields[key];\n      if (field == null) return;\n      //Compute area of field boundary\n      let area = geojsonArea.geometry(field.boundary) * 0.000247105 //Meters to acres;\n      if (fieldOperation.status == 'planned') {\n        planned += area;\n      } else if (fieldOperation.status == 'started') {\n        started += area;\n      } else if (fieldOperation.status == 'done') {\n        done += area;\n      }\n    });\n    let total = planned + started + done;\n    return {\n      planned: Math.round(planned),\n      plannedPercentage: Math.round((planned / (total || 1)) * 100),\n      started: Math.round(started),\n      startedPercentage: Math.round((started / (total || 1)) * 100),\n      done: Math.round(done),\n      donePercentage: Math.round((done / (total || 1)) * 100),\n    };\n  },\n  seasonFarms: ({}, state) => {\n    let farms;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      farms = _.chain(state).get(`app.oada.${currentConnection}.bookmarks.seasons.2020.farms`).omitBy((v, k) => { //TODO year\n        if (_.startsWith(k, '_')) return true;\n        if (v == null) return true;\n      }).value();\n    } else {\n      farms = _.get(state, `app.localData.abc123.seasons.2020.farms`) //TODO year, organization\n    }\n    return farms || {};\n  },\n  seasonFields: ({}, state) => {\n    let fields;\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      fields = _.chain(state).get(`app.oada.${currentConnection}.bookmarks.seasons.2020.fields`).omitBy((v, k) => { //TODO year\n        if (_.startsWith(k, '_')) return true;\n        if (v == null) return true;\n      }).value();\n    } else {\n      fields = _.get(state, `app.localData.abc123.seasons.2020.fields`) //TODO year, organization\n    }\n    return fields || {};\n  },\n  operationFields: ({}, state) => {\n    let operationId = _.get(state, 'view.TopBar.OperationDropdown.selectedOperationId');\n    let operationFields = [];\n    if (operationId != null) {\n      if (_.get(state, `app.OADAManager.connected`) == true) {\n        let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n        operationFields = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.operations.${operationId}.fields`) || []; //TODO year\n      } else {\n        operationFields = _.get(state, `app.localData.abc123.seasons.2020.operations.${operationId}.fields`) || []; //TODO year, organization\n      }\n    }\n    return operationFields; // {<field-id>: {status: 'planned'}, ...}\n  },\n  currentOADA: ({}, state) => {\n    if (state.app.OADAManager.connected) {\n      const currentConnection = state.app.OADAManager.currentConnection;\n      if (!currentConnection) return;\n      return state.app.oada[currentConnection];\n    }\n  },\n  oadaOrgData: ({currentOADA}) => {\n    if (currentOADA) {\n      return currentOADA.bookmarks;\n    }\n  },\n  oadaSeasonFarmsIdBy_id: ({oadaOrgData}, state) => {\n    return _.chain(oadaOrgData).get(`seasons.2020.farms`).mapValues((v, k) => {\n      if (!v) return null\n      return {_id: v._id, id: k};\n    }).omitBy(_.isNull).mapKeys((v, k) => {\n      return v._id; //Key of oada id\n    }).value();  //{_id: <oada-res-id>, id: <path-id>}\n  },\n  oadaSeasonFarms_idByFarm_id: ({oadaOrgData}, state) => {\n    return _.chain(oadaOrgData).get(`fields.farms`).mapValues((v, k) => {\n      if (!v) return null\n      //Lookup season farm id\n      const seasonFarm_id = _.get(oadaOrgData, `seasons.2020.farms.${k}._id`);\n      return {seasonFarm_id: seasonFarm_id, farm_id: v._id};\n    }).omitBy(_.isNull).mapKeys((v, k) => {\n      return v.farm_id; //Key of oada id\n    }).value();  //{_id: <oada-res-id>, id: <path-id>}\n  },\n  localOrgData: ({localData}) => {\n    return localData.abc123; //TODO organization\n  },\n  localData: {\n    organizations: {\n      'abc123': {\n        name: 'Default'\n      }\n    },\n    'abc123': {\n      fields: {\n        fields: {\n          /*'a': {\n            id: 'a',\n            name: 'Back 40',\n            boundary: '' //GEOJSON\n          }*/\n          ...testFields,\n        },\n        farms: {\n          ...testFarms,\n        }\n      },\n      seasons: {\n        /*'2020': {\n          fields: {\n            '<field-uuid>': {\n              season: 2018,\n              boundary: <geo-json>,\n              operations: {\n                '<operation-uuid>': {}\n              }\n            }\n          },\n          operations: {\n            '<operation-uuid>': {\n              id: '<operation-uuid>',\n              year: 2020,\n              name: 'Corn Planting',\n              fields: {\n                '<field-uuid>': {\n                  status: 'Planned',\n                }\n              }\n            }\n          }\n        }*/\n        '2020': {\n          fields: {\n            ...testFields,\n          },\n          farms: {\n            ...testFarms,\n          },\n          operations: {\n            /*'<operation-uuid>': {\n              id: '<operation-uuid>',\n              year: 2020,\n              name: 'Corn Planting',\n              fields: {\n                '<field-uuid>': {\n                  status: 'Planned',\n                }\n              }\n            }*/\n          }\n        }\n      }\n    }\n  }\n}\n","import _ from 'lodash'\nexport default {\n  getSeasonField({state}, id) {\n    let fields = [];\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      fields = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.fields`) //TODO year\n    } else {\n      fields = _.get(state, `app.localData.abc123.seasons.2020.fields`) //TODO year, organization\n    }\n    return fields[id];\n  },\n  getSeasonFarm({state}, id) {\n    let farms = [];\n    if (_.get(state, `app.OADAManager.connected`) == true) {\n      let currentConnection = _.get(state, `app.OADAManager.currentConnection`)\n      farms = _.get(state, `app.oada.${currentConnection}.bookmarks.seasons.2020.farms`) //TODO year\n    } else {\n      farms = _.get(state, `app.localData.abc123.seasons.2020.farms`) //TODO year, organization\n    }\n    return farms[id];\n  },\n  onInitialize({state, actions}) {\n    actions.view.Map.zoomBounds();\n  }\n}\n","import _ from 'lodash';\nexport default {\n  connected: false,\n  currentConnection: null,\n  domain: null,\n  token: null,\n  user: ({currentConnection}, state) => {\n    if (!currentConnection) return null;\n    return _.get(state, 'app.oada.localhost.users.me');\n  }\n}\n","import tree from './tree';\nimport config from '../../../config'\nimport Promise from 'bluebird'\nimport _ from 'lodash'\nimport { browser as oadaIdClient } from '@oada/oada-id-client/index.js'\nconst getAccessToken = Promise.promisify(oadaIdClient.getAccessToken)\n\nexport default {\n  async getToken({state}, domain) {\n    /*\n      Get token from local storage or request one\n    */\n    const myState = state.app.OADAManager;\n    if (myState.token) return myState.token;\n    let res = await getAccessToken(domain.replace(/^https?:\\/\\//, ''), {\n      metadata: config.METADATA,\n      scope: config.SCOPE,\n      redirect: config.REDIRECT\n    })\n    return res.access_token;\n  },\n  async connect({actions, state, effects}, {domain, token}) {\n    const myState = state.app.OADAManager;\n    const myActions = actions.app.OADAManager;\n    if (token) myState.token = token;\n    token = await myActions.getToken(domain);\n    return actions.app.oada.connect({\n      token,\n      domain: domain,\n      options: config.OPTIONS,\n      cache: false\n    }).then((response) => {\n      if (!response.error) {\n        myState.currentConnection = response.connectionId;\n        myState.token = response.token;\n        myState.connected = true;\n        //Unselect local opeation\n        state.view.TopBar.OperationDropdown.selected = null;\n      }\n      return response;\n    })\n  },\n  async logout({actions, state}) {\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    myState.token = null;\n    await actions.app.oada.disconnect({connection_id})\n  },\n  async getUserInfo({actions, state}) {\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    let requests = [{\n      path: '/users/me',\n    }];\n    await actions.app.oada.get({requests, connection_id})\n  },\n  async fetchAndWatch({actions, state}) {\n    console.log('fetchAndWatch - start')\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //Fetch field and seasons\n    let watchRequests = [\n      {\n        path: '/bookmarks/fields',\n        tree,\n        watch: {\n          actions: [actions.app.OADAManager.onFieldChanged]\n        }\n      },\n      {\n        path: '/bookmarks/seasons',\n        tree,\n        watch: {\n          actions: []\n        },\n      }\n    ];\n    console.log('fetchAndWatch - 1')\n    const ret = await actions.app.oada.get({requests: watchRequests, connection_id})\n    console.log('fetchAndWatch - 2')\n    let rewatchRequests = [];\n    console.log('SOMETIMES ERRORS:', ret);\n    if (ret.responses[0].error) {\n      //On 404 create and rewatch\n      if (ret.responses[0].status != 404) throw ret.responses[0].error;\n      //Create fields and try to watch again\n      let requests = [{\n        tree,\n        data: {\n          fields: {},\n          farms: {}\n        },\n        path: '/bookmarks/fields'\n      }];\n      //Create\n      await actions.app.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[0]);\n    }\n    if (ret.responses[1].error) {\n      //On 404 create and rewatch\n      if (ret.responses[1].status != 404) throw ret.responses[0].error;\n      //Create seasons and try to watch again\n      let requests = [{\n        tree,\n        data: {},\n        path: '/bookmarks/seasons'\n      }];\n      //Create\n      await actions.app.oada.put({requests, connection_id})\n      //Rewatch\n      rewatchRequests.push(watchRequests[1]);\n    }\n    if (rewatchRequests.length > 0) await actions.app.oada.get({requests: rewatchRequests, connection_id})\n    console.log('fetchAndWatch - done')\n  },\n  initSeasonFields({state, actions}) {\n    /*\n      Put changes from master field list into season fields\n    */\n    const myActions = actions.app.OADAManager;\n    //Get master field list fields\n    var fieldsChanged = [];\n    _.forEach(_.get(state, 'app.oadaOrgData.fields.fields'), (obj, key) => {\n      if (_.startsWith(key, '_')) return;\n      fieldsChanged.push({fieldId: key, name: obj.name, boundary: obj.boundary, farm: obj.farm});\n    })\n    return myActions.changeSeasonFields(fieldsChanged);\n  },\n  initSeasonFarms({state, actions}) {\n    /*\n      Put changes from master farm list into season farms\n    */\n    const myActions = actions.app.OADAManager;\n    //Get master field list fields\n    var changed = [];\n    _.forEach(_.get(state, 'app.oadaOrgData.fields.farms'), (obj, key) => {\n      if (_.startsWith(key, '_')) return;\n      changed.push({farmId: key, name: obj.name});\n    })\n    return myActions.changeSeasonFarms(changed);\n  },\n  async changeSeasonFields({state, actions}, fieldsChanged) {\n    /*\n      Apply any changes to season fields\n    */\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let theSeasonFields = state.app.seasonFields;\n    _.forEach(fieldsChanged, (fieldChange) => {\n      if (fieldChange.fieldId == null) return;\n      let data = {};\n      let seasonField = theSeasonFields[fieldChange.fieldId]\n      if (fieldChange.name) {\n        if (seasonField == null || seasonField.name != fieldChange.name) {\n          data.name = fieldChange.name;\n        }\n      }\n      if (fieldChange.boundary) {\n        if (seasonField == null || _.isEqual(seasonField.boundary, fieldChange.boundary) == false) {\n          data.boundary = fieldChange.boundary;\n        }\n      }\n      if (fieldChange.farm) {\n        //Find new season farm id from farm id\n        const farmId = _.get(fieldChange, 'farm._id');\n        if (farmId) {\n          const seasonFarmId = _.get(state, `app.oadaSeasonFarms_idByFarm_id.${farmId}.seasonFarm_id`)\n          if (!seasonFarmId) {\n            console.log('No matching season farm found for farmId:', farmId, 'Cannot check if season fields farm has changed. Data:', fieldChange);\n          } else if (seasonField == null || seasonField.farm == null || seasonField.farm._id == null || (seasonFarmId != null && seasonField.farm._id != seasonFarmId)) {\n            data.farm = _.merge({}, data.farm, {_id: seasonFarmId});\n          }\n        }\n      }\n      if (_.isEmpty(data)) return;\n      requests.push(\n        { //Change season's field's name, boundary\n          tree,\n          data,\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2020/fields/${fieldChange.fieldId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.put({requests, connection_id})\n  },\n  async changeSeasonFarms({state, actions}, changed) {\n    /*\n      Apply any changes to season farms\n    */\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFarms = state.app.seasonFarms;\n    _.forEach(changed, (change) => {\n      if (change.farmId == null) return;\n      let data = {};\n      let seasonFarm = seasonFarms[change.farmId]\n      //Check if name changed\n      if (change.name) {\n        if (seasonFarm == null || seasonFarm.name != change.name) {\n          data.name = change.name;\n        }\n      }\n      if (_.isEmpty(data)) return;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          data,\n          type: 'application/vnd.oada.farm.1+json',\n          path: `/bookmarks/seasons/2020/farms/${change.farmId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.put({requests, connection_id})\n  },\n  async deleteSeasonFields({state, actions}, deleted) {\n    console.log('delete season fields', deleted);\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFields = state.app.seasonFields;\n    _.forEach(deleted, (fieldId) => {\n      let seasonField = seasonFields[fieldId]\n      if (!seasonField) return;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          type: 'application/vnd.oada.field.1+json',\n          path: `/bookmarks/seasons/2020/fields/${fieldId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.delete({requests, connection_id})\n  },\n  async deleteSeasonFarms({state, actions}, deleted) {\n    console.log('delete season farms', deleted);\n    const myState = state.app.OADAManager;\n    const {currentConnection: connection_id} = myState;\n    //See if they match season fields.\n    let requests = [];\n    let seasonFarms = state.app.seasonFarms;\n    _.forEach(deleted, (farmId) => {\n      let seasonFarm = seasonFarms[farmId]\n      if (!seasonFarm) return;\n      requests.push(\n        { //Change season's farms's name\n          tree,\n          type: 'application/vnd.oada.farm.1+json',\n          path: `/bookmarks/seasons/2020/farms/${farmId}` //TODO year\n        }\n      )\n    })\n    if (requests.length == 0) return;\n    await actions.app.oada.delete({requests, connection_id})\n  },\n  async login({actions, state}, {domain, token}) {\n    const myState = state.app.OADAManager;\n    const myActions = actions.app.OADAManager;\n    myState.domain = domain;\n    const {error} = await myActions.connect({domain, token});\n    if (!error) {\n      await myActions.getUserInfo();\n      await myActions.fetchAndWatch();\n      await myActions.initSeasonFarms();\n      await myActions.initSeasonFields();\n      await actions.view.Map.zoomBounds();\n    }\n  },\n  async onFieldChanged({state, actions}, props) {\n    /*\n      If a farm/field in the master list changed, apply change to this years season fields\n    */\n    console.log('onFieldChanged', props);\n    const myActions = actions.app.OADAManager;\n    const changes = _.get(props, 'response.change') || [];\n    if (!_.isArray(changes)) {\n      console.warn('WARNING: response.change not an array')\n      return;\n    }\n    const watchPath = (props.path && props.path.length > 0) ? `${props.connection_id}.${props.path}` : props.connection_id;\n    let fieldsChanged = [];\n    let fieldsDeleted = [];\n    let farmsChanged = [];\n    let farmsDeleted = [];\n    _.forEach(changes, (change) => {\n      if (change.type == 'merge') {\n        //Get the currentState at the change path\n        const changePathArr = change.path.split('/')\n        const changePath = changePathArr.join('.')\n        const currentState = _.get(state, `${watchPath}${changePath}`);\n        if (_.get(changePathArr, 1) == 'fields') {\n          //A field was changed\n          const fieldId = _.get(changePathArr, 2)\n          if (fieldId == null && _.get(change, 'body') != null) {\n            console.log('WARNING: Received a bad field change from OADA', props);\n            return;\n          }\n          const {name, boundary} = _.get(change, 'body');\n          //Push all non-undefined values\n          fieldsChanged.push(_.pickBy({fieldId, name, boundary}, (a)=>!_.isUndefined(a)));\n        } else if (_.get(changePathArr, 1) == 'farms') {\n          //A farm was changed\n          const farmId = _.get(changePathArr, 2)\n          if (farmId == null && _.get(change, 'body') != null) {\n            console.log('WARNING: Received a bad farm change from OADA', props);\n            return;\n          }\n          const {name} = _.get(change, 'body');\n          //Push all non-undefined values\n          farmsChanged.push(_.pickBy({farmId, name}, (a)=>!_.isUndefined(a)));\n        }\n      } else if (change.type == 'delete') {\n        //Get the currentState at the change path\n        const changePath = change.path.split('/').join('.')\n        const currentState = _.get(state, `${watchPath}${changePath}`);\n        //If body has a null field in it, delete that season field\n        _.forEach(_.get(change, 'body.fields'), (value, fieldId) => {\n          if (value == null) fieldsDeleted.push(fieldId);\n        })\n        //If body has a null farm in it, delete that season farm\n        _.forEach(_.get(change, 'body.farms'), (value, farmId) => {\n          if (value == null) farmsDeleted.push(farmId);\n        })\n      } else {\n        console.warn('Unrecognized change type', change.type);\n      }\n    })\n    if (fieldsDeleted.length > 0) myActions.deleteSeasonFields(fieldsDeleted);\n    if (fieldsChanged.length > 0) myActions.changeSeasonFields(fieldsChanged);\n    if (farmsDeleted.length > 0) myActions.deleteSeasonFarms(farmsDeleted);\n    if (farmsChanged.length > 0) myActions.changeSeasonFarms(farmsChanged);\n  },\n  onSeasonsChanged({state, actions}, props) {\n\n  }\n}\n","import _state from './state'\nimport _actions from './actions'\n\nexport const state = _state;\nexport const actions = _actions;\n","import _state from './state'\nimport _actions from './actions'\n\nimport * as OADAManager from './OADAManager'\nimport oadaCacheOvermind from '@oada/oada-cache-overmind'\n\nconst oada =  oadaCacheOvermind('app.oada')\n\nexport const state = {\n  oada: oada.state,\n  OADAManager: OADAManager.state,\n  ..._state\n};\nexport const actions = {\n  oada: oada.actions,\n  OADAManager: OADAManager.actions,\n  ..._actions\n}\nexport const effects = {\n  oada: oada.effects\n}\n","import { createHook } from \"overmind-react\"\n\nimport { namespaced } from 'overmind/config'\n\nimport * as view from './view'\nimport * as app from './app'\n\nexport const config = namespaced({\n  view,\n  app,\n})\n\nexport default createHook()\n","import React from 'react';\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport _ from 'lodash'\nimport overmind from '../../overmind'\nimport { Input, Button, Form, Dropdown } from 'semantic-ui-react'\n\nfunction Login() {\n  const { state, actions } = overmind();\n  const myState = state.view.Login;\n  const myActions = actions.view.Login;\n\n  return (\n    <div css={css`\n      height: 100vh;\n      width: 100vw;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      background: url(imgs/login-background.jpg) no-repeat center center fixed;\n      background-size: cover;\n    `}>\n      <div css={css`\n        width: 400px;\n        display: flex;\n        flex-direction: column;\n        background: #fff;\n        padding: 15px;\n        padding-top: 7px;\n        border-radius: 5px;\n      `}>\n        <img css={{\n          height: 300\n        }} src={`imgs/logo2.svg`} alt={'logo'} />\n        <Form css={css`\n          display: flex;\n          flex-direction: column;\n        `} onSubmit={myActions.login}>\n          <Input placeholder='OADA Domain...' value={myState.domain} onChange={(evt, data) => myActions.domainChange(data)} />\n          <Button\n            style={{marginTop: 7}} primary\n            loading={myState.loading}\n            disabled={myState.loading}>\n            Connect to Your OADA Cloud\n          </Button>\n          <Button\n            style={{marginTop: 7}}\n            onClick={myActions.viewDemo}\n            disabled={myState.loading}>\n            View Demo\n          </Button>\n        </Form>\n      </div>\n      <a css={css`\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        font-size: 1.2em;\n        color: #FFFFFF;\n        cursor: pointer;\n      `} onClick={myActions.logout}\n      >Logout</a>\n    </div>\n  );\n}\n\nexport default Login;\n","/*\n  Adds points/polygons to map when drawing a boundary\n*/\nimport React, { Component } from 'react';\nimport { Marker, Polygon, LayerGroup } from 'react-leaflet'\n\nimport overmind from '../../../overmind'\nimport _ from 'lodash';\n\nexport default function BoundaryDrawing() {\n  const {state, actions} = overmind();\n  const myState = state.view.Map.BoundaryDrawing;\n  const myActions = actions.view.Map.BoundaryDrawing;\n\n  const { boundary, drawing } = myState;\n  const { onMarkerMove } = myActions;\n\n  if (!drawing) return null;\n  return (\n    <LayerGroup>\n      <Polygon positions={_.map(boundary)} />\n      {_.map(boundary, (latlng, id) => <Marker position={latlng} key={id} draggable onMove={({latlng, oldLatLng}) => onMarkerMove({latlng, oldLatLng, id})}/>)}\n    </LayerGroup>\n  );\n}\n","/*\n  Adds points/polygons to map when drawing a boundary\n*/\nimport React from 'react';\nimport { Marker, Polygon, LayerGroup, GeoJSON } from 'react-leaflet'\n\nimport overmind from '../../../overmind'\n\nimport _ from 'lodash';\nimport uuid from 'uuid/v1'\n\nexport default function Fields() {\n  const {state, actions} = overmind();\n  const myState = state.view.Map;\n  const myActions = actions.view.Map;\n\n  const { fields } = myState;\n  const { onFieldClick } = myActions;\n\n  if (_.keys(fields).length == 0) return null;\n  return (\n    <LayerGroup>\n      {_.map(fields, (field, id) =>\n        <GeoJSON\n          bubblingMouseEvents={false}\n          style={field.style}\n          data={field.boundary}\n          key={uuid()} //Must be uuid to unmount/mount when field style or boundary changes\n          onClick={(evt) => {onFieldClick({id})}} />\n      )}\n    </LayerGroup>\n  );\n}\n","import React, {useEffect, useRef}  from 'react';\nimport { Map as LeafletMap, Marker, Popup, TileLayer, ZoomControl } from 'react-leaflet'\nimport './index.css'\n\nimport overmind from '../../overmind'\nimport _ from 'lodash'\nimport BoundaryDrawing from './BoundaryDrawing'\nimport Fields from './Fields'\n\nexport default function Map() {\n  const { actions, state } = overmind();\n  const myActions = actions.view.Map;\n  const myState = state.view.Map;\n\n  return (\n      <LeafletMap bounds={myState.bounds} center={myState.center} zoom={myState.zoom} onClick={(evt) => myActions.onMapClick({...evt.latlng})} zoomControl={false}>\n        <TileLayer\n          url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n          attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n        />\n        <TileLayer\n          url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-labels/{z}/{x}/{y}{r}.png\"\n          minZoom={0}\n          maxZoom={20}\n          attribution=\"\"\n        />\n        <BoundaryDrawing />\n        <Fields />\n      </LeafletMap>\n  );\n}\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport {TextInput, View} from 'react-native'\n\nimport overmind from '../../../overmind'\n\nexport default function DrawingToolbar() {\n  const { actions } = overmind();\n  const myActions = actions.view.TopBar;\n  return (\n    <Toolbar>\n      <View style={{flex: 1}} />\n      <Button color=\"inherit\" onClick={() => myActions.onCancelField()}>Cancel</Button>\n      <Button color=\"inherit\" onClick={() => myActions.onSaveField()}>Save</Button>\n    </Toolbar>\n  );\n}\n","import React from 'react'\nimport { Dropdown, Input } from 'semantic-ui-react'\nimport {View, Text} from 'react-native'\nimport _ from 'lodash'\n/*const tagOptions = [\n  {\n    text: 'Important',\n    value: 'Important',\n    label: { color: 'red', empty: true, circular: true },\n  }\n]*/\n\nimport overmind from '../../../../overmind'\n\nexport default function OperationsDropdown({style}) {\n  const { actions, state } = overmind();\n  const myActions = actions.view.TopBar.OperationDropdown;\n  const myState = state.view.TopBar.OperationDropdown;\n\n  const selectedOperation = myState.selectedOperation;\n  const operations = myState.list;\n  const open = myState.open;\n  const search = myState.search;\n  const onAdd = myActions.onAdd;\n  const onChange = myActions.onChange;\n  const onOpenChange = myActions.onOpenChange;\n  const onSearch = myActions.onSearch;\n\n  return (\n    <View style={style}>\n      <View style={{flexDirection: 'row'}}>\n        {\n           selectedOperation ?\n            <Dropdown\n              open={open}\n              onOpen={() => {onOpenChange({open: true})}}\n              onBlur={() => {onOpenChange({open: false})}}\n              text={selectedOperation.name}\n              icon='cog'\n              floating\n              labeled\n              button\n              className='icon'\n            >\n              <Dropdown.Menu style={{top: 42}}>\n                <Dropdown.Item style={{textAlign: 'center'}} text='Add New Operation' value='Add New Operation' onClick={(evt, data)=>{onAdd()}} />\n                <Input icon='search' iconPosition='left' className='search' style={{marginTop: 3}} value={search} onChange={(evt)=>{onSearch({search: evt.target.value})}} />\n                <Dropdown.Menu scrolling>\n                  {_.map(operations, option => (\n                    <Dropdown.Item key={option.value} {...option} onClick={(evt, data)=>{onChange({id: data.value})}} />\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown.Menu>\n            </Dropdown>\n          :\n            <Dropdown\n              onClick={() => {onAdd()}}\n              open={false}\n              text={'Add New Operation'}\n              icon='cog'\n              floating\n              labeled\n              button\n              className='icon' />\n        }\n        <View style={{flex: 1}} />\n      </View>\n    </View>\n  )\n}\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreIcon from '@material-ui/icons/MoreHoriz';\nimport {View} from 'react-native'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport overmind from '../../../../overmind'\n\nexport default function MoreDropdown({style}) {\n  const { actions, state } = overmind();\n  const myActions = actions.view.TopBar;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  function handleClick(event) {\n    setAnchorEl(event.currentTarget);\n  }\n  function handleClose() {\n    setAnchorEl(null);\n  }\n  return (\n    <View style={style}>\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Menu\" onClick={handleClick}>\n        <MoreIcon  />\n      </IconButton>\n      <Menu\n        style={{top: 50, right: 5}}\n        open={Boolean(anchorEl)}\n        keepMounted\n        anchorEl={anchorEl}\n        onClose={handleClose}>\n          <MenuItem onClick={()=>{handleClose(); myActions.onAddField()}}>Add Field</MenuItem>\n          {\n            !state.view.FieldDetails.open ? null :\n            <MenuItem onClick={()=>{handleClose(); myActions.onEditField()}}>Edit Field</MenuItem>\n          }\n          <MenuItem onClick={()=>{handleClose(); myActions.onLogout()}}>Logout</MenuItem>\n          {/*<MenuItem onClick={()=>{handleClose(); myActions.onResetCache()}}>Reset Cache</MenuItem>*/}\n      </Menu>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { geolocated } from \"react-geolocated\";\nimport Button from './Button';\n\nexport default geolocated({\n    positionOptions: {\n        enableHighAccuracy: true,\n    },\n    userDecisionTimeout: 5000,\n})(Button);\n","import React, {useEffect} from 'react'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MyLocation from '@material-ui/icons/MyLocation';\nimport {View} from 'react-native'\n\nimport _ from 'lodash'\nimport overmind from '../../../../overmind'\n\nexport default function Button({coords, isGeolocationAvailable, isGeolocationEnabled}) {\n  const { actions } = overmind();\n  const myActions = actions.view.TopBar;\n\n  useEffect(() => {\n    myActions.onLocationChange(coords);\n  });\n\n  return (\n    <View>\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"Menu\" onClick={()=>{myActions.onMyLocationClick(coords)}}>\n        <MyLocation  />\n      </IconButton>\n    </View>\n  )\n}\n","import React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ListIcon from '@material-ui/icons/Menu';\n\nimport OperationDropdown from './OperationDropdown';\nimport MoreDropdown from './MoreDropdown';\nimport MyLocation from './MyLocation';\n\nexport default function NormalToolbar({toggleTitle}) {\n  return (\n    <Toolbar>\n      {/*<IconButton edge=\"start\" style={{marginRight: 7}} color=\"inherit\" aria-label=\"Menu\" onClick={()=>{console.log('TODO Menu Pressed')}}>\n        <ListIcon />\n      </IconButton>*/}\n      <OperationDropdown style={{flex: 1}} />\n      {/*<Button color=\"inherit\">2020</Button>*/}\n      <MyLocation />\n      <MoreDropdown />\n    </Toolbar>\n  );\n}\n","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport {View} from 'react-native'\n\nimport DrawingToolbar from './DrawingToolbar';\nimport NormalToolbar from './NormalToolbar';\n\nimport overmind from '../../overmind'\n\nexport default function TopBar() {\n  const {state} = overmind();\n  const drawing = state.view.Map.BoundaryDrawing.drawing;\n  return (\n    <View style={{zIndex: 1201}}>\n      <AppBar position=\"static\">\n        {\n          drawing ? <DrawingToolbar /> : <NormalToolbar />\n        }\n      </AppBar>\n    </View>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Text, View } from 'react-native';\n\nexport default function TemporaryDrawer() {\n  return (\n    <Drawer open={false} variant=\"persistent\">\n      <View style={{height: 64}} />\n      <div\n        style={{width: 250}}\n        role=\"presentation\">\n        <List>\n          {['Inbox', 'Starred', 'Send email'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {View, Text} from 'react-native';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport _ from 'lodash';\nimport { Button } from 'semantic-ui-react'\n\n\nimport overmind from '../../overmind'\n\nexport default function FieldDetails() {\n  const {state, actions} = overmind();\n  const myState = state.view.FieldDetails;\n  const myActions = actions.view.FieldDetails;\n\n  let { open, field, farm, showAddOperationButton } = myState;\n  const { onStatusChange, onEditFieldClick, onAddNewOperationClick } = myActions;\n\n  if (!Boolean(field)) {\n    open = false;\n    field = {};\n  }\n  return (\n    <Drawer anchor=\"bottom\" open={open} variant=\"persistent\">\n      <View style={{paddingBottom: 20}}>\n        <View style={{flexDirection: 'column', alignItems: 'center'}}>\n          <View style={{justifyContent: 'left', flexDirection: 'row', alignItems: 'center', marginTop: 10}}>\n              <Text style={{fontWeight: 'bold', fontSize: 20}}>\n                {field.name}\n              </Text>\n              <Text style={{marginLeft: 7, fontSize: 18}}>\n                {`- ${Math.round(field.acres)} ac`}\n              </Text>\n          </View>\n          {\n            farm == null ? null :\n            <Text style={{fontSize: 15, color: '#999', marginTop: 2, marginBottom: 7}}>\n              {farm.name}\n            </Text>\n          }\n        </View>\n        <View style={{justifyContent: 'center', flexDirection: 'row'}}>\n          {\n            showAddOperationButton ?\n              <Button style={{marginTop: 15}} onClick={() => myActions.onAddNewOperationClick()}>Add New Operation</Button>\n            :\n            <FormControl component=\"fieldset\">\n              <FormGroup aria-label=\"position\" name=\"position\" row>\n                <FormControlLabel\n                  value=\"bottom\"\n                  control={<Checkbox color=\"primary\" checked={(field.status == \"planned\") || false} onChange={()=>{onStatusChange({status: 'planned'})}} />}\n                  label=\"Planned\"\n                  labelPlacement=\"bottom\"\n                />\n                <FormControlLabel\n                  value=\"bottom\"\n                  control={<Checkbox color=\"primary\" checked={(field.status == \"started\") || false} onChange={()=>{onStatusChange({status: 'started'})}} />}\n                  label=\"Started\"\n                  labelPlacement=\"bottom\"\n                />\n                <FormControlLabel\n                  value=\"bottom\"\n                  control={<Checkbox color=\"primary\" checked={(field.status == \"done\") || false} onChange={()=>{onStatusChange({status: 'done'})}} />}\n                  label=\"Done\"\n                  labelPlacement=\"bottom\"\n                />\n              </FormGroup>\n            </FormControl>\n          }\n        </View>\n      </View>\n    </Drawer>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresPlanned({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#c50003', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.planned} ac (${acresStatus.plannedPercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresStarted({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#eeb705', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5, marginRight: 7, marginLeft: 7}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.started} ac (${acresStatus.startedPercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nexport default function AcresDone({acresStatus}) {\n  return (\n    <View style={{backgroundColor: '#5bb25f', paddingLeft: 7, paddingRight: 7, paddingTop: 5, paddingBottom: 5, borderRadius: 5}}>\n      <Text style={{color: 'white', textShadowColor: '#000', textShadowOffset: {width: 1, height: 1}, textShadowRadius: 2}}>\n        {`${acresStatus.done} ac (${acresStatus.donePercentage}%)`}\n      </Text>\n    </View>\n  );\n}\n","import React, { Component } from 'react';\nimport { Text, View } from 'react-native';\n\nimport AcresPlanned from './AcresPlanned'\nimport AcresStarted from './AcresStarted'\nimport AcresDone from './AcresDone'\n\nimport overmind from '../../overmind'\n\nexport default function AcresStatus() {\n  const {state} = overmind();\n  const acresStatus = state.app.acresStatus;\n  const selectedOperationId = state.view.TopBar.OperationDropdown.selectedOperationId;\n  if (!selectedOperationId) return null;\n  return (\n    //z-index of leaflet map is 400\n    <View style={{position: \"absolute\", display: \"flex\", flexDirection: 'row', justifyContent: \"center\", alignItems: \"center\", top: 68, zIndex: 401, width: '100vw'}}>\n      <AcresPlanned acresStatus={acresStatus} />\n      <AcresStarted acresStatus={acresStatus} />\n      <AcresDone acresStatus={acresStatus} />\n    </View>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Form, Button, Modal, Input, Dropdown, Icon } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function SaveField() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.SaveField;\n  const myActions = actions.view.Modals.SaveField;\n\n  const open = myState.open;\n  const name = myState.name;\n  const onNameChange = myActions.onNameChange;\n  const onCancel = myActions.onCancel;\n  const onSave = myActions.onSave;\n  const [farmOpen, setFarmOpen] = React.useState(false);\n\n  const farm = myState.farm || {};\n  const farmOptions = myState.farms;\n\n  return (\n    <Modal open={myState.open} size='tiny'>\n      <Modal.Header>\n        {(state.view.Map.editingField) ? 'Edit Field' : 'New Field'}\n      </Modal.Header>\n      <Modal.Content>\n        <View style={{flexDirection: 'column', zIndex: 1}}>\n          <Text style={{marginBottom: 7}}>Field Name:</Text>\n          <Form onSubmit={() => onSave()}>\n            <Input autoFocus placeholder='Back 40' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n          </Form>\n          <Text style={{marginBottom: 7, marginTop: 15}}>Farm:</Text>\n          <Dropdown\n            trigger={\n              <View style={{paddingLeft: 13, paddingRight: 7, border: '1px solid rgba(34,36,38,.15)', borderRadius: '.28571429rem', height: 38, flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between'}}>\n                <Text style={{color: (farm.name ? 'rgba(0,0,0,.87)' : 'rgba(0,0,0,.25)')}}>\n                  {farm.name || 'Select a farm'}\n                </Text>\n                <Icon name='caret down' style={{paddingBottom: 17}}/>\n              </View>\n            }\n            icon={null}\n            onOpen={() => {setFarmOpen(true)}}\n            onBlur={() => {setFarmOpen(false)}}\n            open={farmOpen}>\n            <Dropdown.Menu style={{overflow: 'hidden', maxHeight: '50vh'}}>\n              <Dropdown.Item style={{textAlign: 'center'}} text='Add New Farm' value='Add New Farm' onClick={(evt, data)=>{myActions.onFarmAdd(); setFarmOpen(false);}} />\n              <Input icon='search' iconPosition='left' className='search' value={myState.farmSearch} onChange={(evt)=>{myActions.onFarmSearchChange(evt.target.value)}} />\n              <Dropdown.Menu scrolling>\n                {farmOptions.map((option) => (\n                  <Dropdown.Item key={option.value} {...option} onClick={() => {myActions.onFarmChange({id: option.value}); setFarmOpen(false);}} />\n                ))}\n              </Dropdown.Menu>\n            </Dropdown.Menu>\n          </Dropdown>\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function OADADomain() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.OADADomain;\n  const myActions = actions.view.Modals.OADADomain;\n\n  const { open, domain } = myState;\n  const { onDomainChange, onCancel, onConnect } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>Connect to OADA Server</Modal.Header>\n      <Modal.Content>\n        <Text>Domain:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Input style={{flex: 1, marginTop: 7}} placeholder='https://oada.openatk.com' value={domain} onChange={(evt) => {onDomainChange({domain: evt.target.value})}} />\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Connect' onClick={() => onConnect({})} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input, Form } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function NewOperation() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.NewOperation;\n  const myActions = actions.view.Modals.NewOperation;\n\n  const { open, name } = myState;\n  const { onNameChange, onCancel, onSave } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>New Operation</Modal.Header>\n      <Modal.Content>\n        <Text>Name:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Form style={{flex: 1}} onSubmit={onSave}>\n            <Input autoFocus style={{width: '100%', marginTop: 7}} placeholder='Corn Planting' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n          </Form>\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport {View, Text} from 'react-native'\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nimport overmind from '../../overmind'\n\nexport default function NewFarm() {\n  const {state, actions} = overmind();\n  const myState = state.view.Modals.NewFarm;\n  const myActions = actions.view.Modals.NewFarm;\n\n  const { open, name } = myState;\n  const { onNameChange, onCancel, onSave } = myActions;\n\n  return (\n    <Modal open={open} size='tiny'>\n      <Modal.Header>New Farm</Modal.Header>\n      <Modal.Content>\n        <Text>Name:</Text>\n        <View style={{flexDirection: 'row'}}>\n          <Input style={{flex: 1, marginTop: 7}} placeholder='Bowman Farms' value={name} onChange={(evt) => {onNameChange({name: evt.target.value})}} />\n        </View>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={() => onCancel()}>Cancel</Button>\n        <Button positive icon='checkmark' labelPosition='right' content='Save' onClick={() => onSave()} />\n      </Modal.Actions>\n    </Modal>\n  );\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Login from './Login'\nimport Map from './Map'\nimport TopBar from './TopBar'\nimport FieldList from './FieldList'\nimport FieldDetails from './FieldDetails'\nimport AcresStatus from './AcresStatus'\n\nimport ModalSaveField from './Modals/SaveField';\nimport ModalOADADomain from './Modals/OADADomain';\nimport ModalNewOperation from './Modals/NewOperation';\nimport ModalNewFarm from './Modals/NewFarm';\n\nimport overmind from '../overmind'\n\nfunction App() {\n  const { state } = overmind();\n\n  if (!state.view.Login.loggedIn) {\n    return <Login />\n  }\n\n  return (\n    <div className=\"App\">\n\n      <TopBar />\n      <AcresStatus />\n      <Map />\n      <FieldList />\n      <FieldDetails />\n      <ModalSaveField />\n      <ModalOADADomain />\n      <ModalNewOperation />\n      <ModalNewFarm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nimport App from './view/App'\n\nimport { createOvermind } from \"overmind\";\nimport { Provider } from \"overmind-react\";\nimport { config } from './overmind'\n\nconst app = createOvermind(config,\n{\n  devtools: true//'192.168.50.112:3031',\n});\n\nReactDOM.render(\n  <Provider value={app}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}