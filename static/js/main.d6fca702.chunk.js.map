{"version":3,"sources":["config/config.dev.js","config/dev_metadata.js","config/config.prod-dev.js","config/proddev_metadata.js","config/config.prod.js","config/prod_metadata.js","components/AutocompleteSearch/index.js","components/MenuList/index.js","components/MenuBar/index.js","components/Connections/index.js","components/OpsList/index.js","components/DataTabs/index.js","components/SideDrawer/index.js","components/MapPanel/index.js","components/BottomDrawer/index.js","components/EditFieldDrawer/index.js","components/App/index.js","config/index.js","modules/App/stateTree.js","modules/DataTabs/chains.js","modules/OpsList/chains.js","modules/StatsBar/chains.js","modules/operations/sequences.js","modules/FldList/chains.js","modules/MapPanel/chains.js","modules/BottomDrawer/chains.js","modules/fields/sequences.js","modules/App/sequences.js","modules/App/index.js","modules/Connections/chains.js","modules/MenuBar/index.js","modules/SideDrawer/chains.js","modules/SideDrawer/index.js","modules/DataTabs/index.js","modules/User/chains.js","modules/User/index.js","modules/MapPanel/stateTree.js","modules/MapPanel/index.js","modules/BottomDrawer/index.js","modules/AutocompleteSearch/chains.js","modules/AutocompleteSearch/index.js","modules/OpsList/stateTree.js","modules/OpsList/index.js","modules/FldList/index.js","modules/EditFieldDrawer/index.js","modules/Connections/index.js","modules/operations/index.js","modules/fields/index.js","modules/StatsBar/stateTree.js","modules/StatsBar/index.js","modules/window/sequences.js","modules/window/index.js","modules/MenuList/stateTree.js","modules/MenuList/sequences.js","modules/MenuList/index.js","modules/index.js","controller.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","oadaDomain","process","REACT_APP_OADA_DOMAIN","websiteDomain","parseInt","window","location","port","metadata","require","devtoolsPort","defaultNewConnectionURL","appName","contentType","bookmarksOperations","bookmarksFields","module","exports","anchorEl","AutocompleteSearch","inputProps","_this","this","InputProps","classes","isMenuBar","ref","other","Object","objectWithoutProperties","react_default","a","createElement","TextField_default","assign","onFocus","props","openSuggestions","id","onBlur","closeSuggestions","value","inputRef","objectSpread","style","color","input","endAdornment","Input","position","IconButton_default","aria-label","className","menuButton","onClick","operationInputTyped","inputText","inputType","fieldInputTyped","ArrowDropDown_default","label","InputLabelProps","shrink","inputValue","_this2","suggestions","values","operationSuggestions","filter","suggestion","_","find","s","toLowerCase","includes","trim","connection_id","unshift","action","type","fieldSuggestions","params","_this3","index","itemProps","isHighlighted","highlightedIndex","isSelected","selectedItem","Menu","key","event","addOperationClicked","addFieldClicked","selected","component","display","fontStyle","fontWeight","operationSelected","item","fieldSelected","_this4","addOperationDisabled","addFieldDisabled","button","disabled","Icon_default","fontSize","_this5","currentOperationId","currentFieldId","editOperationClicked","editFieldClicked","ret","operationInputText","map","operation","console","log","_this6","_this$props","sourceAppBar","downshift_esm","isOpen","operationsSuggestionsOpen","fieldsSuggestionsOpen","fieldInputText","itemToString","onStateChange","changes","stateAndHelpers","Downshift","stateChangeTypes","keyDownEnter","clickItem","changeInput","mouseUp","blurInput","_ref","getInputProps","getItemProps","inputBox","renderInput","fullWidth","placeholder","Paper_default","square","suggestionsContainerOpen","suggestionsList","getSuggestions","renderSuggestion","React","Component","connect","state","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","signal","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","operationCleared","_templateObject19","_templateObject20","_templateObject21","fieldCleared","_templateObject22","withStyles","theme","container","flexDirection","flexGrow","alignItems","height","width","marginTop","spacing","unit","marginBottom","marginLeft","marginRight","zIndex","padding","listStyleType","pointerEvents","opacity","touchAction","withTheme","MenuList","handleClose","handleMenuList","currentTarget","open","aria-owns","aria-haspopup","evt","handleMenuListOpen","fieldsEditing","emptyDataSet","material_ui_icons_Menu_default","index_es","onClose","addOperatorClicked","clearConnection","menuItems","MenuList_templateObject","current","MenuList_templateObject2","MenuList_templateObject3","setCurrentItem","MenuList_templateObject4","MenuList_templateObject5","MenuList_templateObject6","MenuList_templateObject7","MenuBar","drawer_button","handleSideDrawerOpen","classNames","currentOperation","sideDrawerOpen","hide","ChevronRight_default","settings_button","connectionsClicked","MoreVert_default","settings_button_text","Button_default","add_field","AddBox_default","add_field_text","ops_input","components_AutocompleteSearch","AppBar_default","appBar","Toolbar_default","disableGutters","Typography_default","variant","align","typography","noWrap","isSmall","orientation","components_MenuList","MenuBar_templateObject","MenuBar_templateObject2","MenuBar_templateObject3","MenuBar_templateObject4","MenuBar_templateObject5","MenuBar_templateObject6","MenuBar_templateObject7","MenuBar_templateObject8","signoutClicked","MenuBar_templateObject9","clearCacheClicked","MenuBar_templateObject10","addNewFieldClicked","MenuBar_templateObject11","showStatsClicked","MenuBar_templateObject12","MenuBar_templateObject13","MenuBar_templateObject14","operations","MenuBar_templateObject15","MenuBar_templateObject16","MenuBar_templateObject17","MenuBar_templateObject18","appIsMobile","MenuBar_templateObject19","MenuBar_templateObject20","MenuBar_templateObject21","MenuBar_templateObject22","infoBarOperationsOpen","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","MenuListOpen","_templateObject28","transition","transitions","create","easing","sharp","duration","leavingScreen","order","buttons","flex","components_Connections","oadaDomainText","Connections_templateObject","oadaFieldsDomainText","Connections_templateObject2","show","Connections_templateObject3","submitClicked","Connections_templateObject4","cancelClicked","Connections_templateObject5","oadaDomainChanged","Connections_templateObject6","oadaFieldsDomainChanged","Connections_templateObject7","_React$Component","Connections","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","Dialog_default","Dialog","onChange","e","target","autoFocus","OpsList","color1","color2","bannerText","area","reduce","b","boundary","percent","Math","round","List","handleCollapse","status","primary","length","secondary","ExpandMore_default","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","fieldRecord","cloneDeep","nested","disableTypography","name","since","by","unplanned","planned","started","completed","total_area","keys","root","subheader","ListSubheader_default","renderItem","currentOperationName","OpsList_templateObject","OpsList_templateObject2","OpsList_templateObject3","OpsList_templateObject4","selectField","OpsList_templateObject5","maxWidth","backgroundColor","palette","background","paper","paddingLeft","TabContainer","children","dir","DataTabs","ops_list","components_OpsList","lib_default","axis","direction","tabValue","onChangeIndex","handleChangeIndex","components_DataTabs","DataTabs_templateObject","currentInputText","DataTabs_templateObject2","DataTabs_templateObject3","handleFieldEdited","DataTabs_templateObject4","handleChange","DataTabs_templateObject5","DataTabs_templateObject6","clearFieldClicked","DataTabs_templateObject7","justifyContent","inputContainer","SideDrawer","data_tabs","Drawer_default","drawerPaper","anchor","drawerInner","drawerHeader","ChevronLeft_default","components_SideDrawer","SideDrawer_templateObject","SideDrawer_templateObject2","SideDrawer_templateObject3","dataTabsToggle","SideDrawer_templateObject4","mixins","toolbar","Overlay","LayersControl","MapPanel","fieldEditing","moving","dragging","originalEvent","offsetParent","mouseDownOnMap","pt","latlng","lng","lat","refs","leafletElement","locate","color_code","markerList","currentField","geojson","coordinates","forEach","i","push","Marker","selectedId","allOperations","fields","draggable","onDrag","markerDragged","_latlng","idx","onDragStart","markerDragStarted","onDragEnd","markerDragEnded","onDblClick","deleteCoordinate","new_field_polygon","GeoJSON","fieldPolygon","data","handleFieldPolygonClicked","field","forceUpdate","uuid","fillOpacity","mapContainer","Map","onLocationfound","locationFound","validateMouseEvent","onMoveStart","mapMoveStarted","onMoveend","mapMoved","getCenter","zoom","getZoom","center","attributionControl","isMobile","zoomControl","mapZoom","TileLayer","url","attribution","checked","FeatureGroup","MapPanel_templateObject","MapPanel_templateObject2","isLoading","MapPanel_templateObject3","MapPanel_templateObject4","geohashPolygons","MapPanel_templateObject5","MapPanel_templateObject6","MapPanel_templateObject7","MapPanel_templateObject8","MapPanel_templateObject9","MapPanel_templateObject10","MapPanel_templateObject11","MapPanel_templateObject12","currentStatus","MapPanel_templateObject13","MapPanel_templateObject14","MapPanel_templateObject15","MapPanel_templateObject16","MapPanel_templateObject17","MapPanel_templateObject18","MapPanel_templateObject19","MapPanel_templateObject20","MapPanel_templateObject21","MapPanel_templateObject22","MapPanel_templateObject23","MapPanel_templateObject24","MapPanel_templateObject25","MapPanel_templateObject26","saveEdited","MapPanel_templateObject27","leaflet-container","strokeWidth","strokeOpacity","BottomDrawer","textField","currentTimestamp","setCurrentSelectionStatusTimestamp","timestamp","editFieldButton","Edit_default","noValidate","form","newOperationName","newOperationNameTyped","margin","disabledNewOperation","addNewOperation","cancelNewOperation","newFieldName","newFieldNameTyped","addNewField","datePicker","renderDatePicker","editField","renderEditField","operators_module_List_default","middle","Form","required","formControl","Radio","group","setCurrentSelectionStatusStatus","editFieldStatus","statusValue","statusButton","control","Radio_default","checkedIcon","icon","bottomMenu","tabIndex","role","onKeyDown","handleOperatorMenuClose","headerText","currentOperationLabel","currentFieldLabel","cancelStatusChange","resetCurrentSelectionStatus","_this7","header_item","renderHeaderItem","add_operation_form","renderAddOperationForm","status_radio_buttons","renderRadioButtonGroup","bottomDrawerOpen","BottomDrawer_templateObject","BottomDrawer_templateObject2","operatorMenuOpen","BottomDrawer_templateObject3","BottomDrawer_templateObject4","BottomDrawer_templateObject5","allOperators","BottomDrawer_templateObject6","BottomDrawer_templateObject7","BottomDrawer_templateObject8","BottomDrawer_templateObject9","BottomDrawer_templateObject10","BottomDrawer_templateObject11","BottomDrawer_templateObject12","BottomDrawer_templateObject13","BottomDrawer_templateObject14","BottomDrawer_templateObject15","BottomDrawer_templateObject16","setDisabledNewOperation","BottomDrawer_templateObject17","BottomDrawer_templateObject18","BottomDrawer_templateObject19","handleOperatorMenuOpen","BottomDrawer_templateObject20","BottomDrawer_templateObject21","handleBottomDrawerOpen","BottomDrawer_templateObject22","handleBottomDrawerClose","BottomDrawer_templateObject23","BottomDrawer_templateObject24","BottomDrawer_templateObject25","flexWrap","fontColor","minWidth","rightPadding","confirmIconGroup","EditFieldDrawer","editFieldDrawer","htmlFor","editFieldDrawerBottom","editFieldText","fieldText","fieldTextChanged","farmText","farmTextChanged","editFieldButtons","confirm","disabledNewField","cancelNewField","EditFieldDrawer_templateObject","EditFieldDrawer_templateObject2","EditFieldDrawer_templateObject3","fieldSuggestionsOpen","EditFieldDrawer_templateObject4","farmSuggestionsOpen","EditFieldDrawer_templateObject5","fieldId","EditFieldDrawer_templateObject6","farmId","EditFieldDrawer_templateObject7","EditFieldDrawer_templateObject8","addFarmClicked","EditFieldDrawer_templateObject9","EditFieldDrawer_templateObject10","EditFieldDrawer_templateObject11","EditFieldDrawer_templateObject12","farmCleared","EditFieldDrawer_templateObject13","EditFieldDrawer_templateObject14","EditFieldDrawer_templateObject15","EditFieldDrawer_templateObject16","EditFieldDrawer_templateObject17","title","App","windowResized","innerWidth","innerHeight","addEventListener","updateDimensions","bind","removeEventListener","init","loadFieldListData","switchTab","app","components_MenuBar","components_MapPanel","components_BottomDrawer","operatorEditing","components_EditFieldDrawer","operators_module_Drawer_default","App_templateObject","App_templateObject2","App_templateObject3","menuListOpen","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","top","statsBar","overrides","default","defaults","scope","REACT_APP_PROD_DEV","toExport","stateTree","model","tags","is_mobile","settings","view","editing","set","chains_templateObject","chains_templateObject2","_ref2","toggleTab","_ref3","get","loadData","opid","concat","fieldStub","dataTabsHandleChange","clearData","toggle","statsBarHandleUpdate","_opsList","totalArea","operationStatus","totalFields","toFixed","_localPath","_TYPE","tree","bookmarks","_type","_rev","*","fetch","sequence","path","watch","signals","requests","oada","when","sequences_templateObject","sequences_templateObject2","true","mapOadaToOperations","mapOperations","loadOpsLstData","sequences_templateObject3","false","sequences_templateObject4","fetchNoWatch","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","_ref9","request","domain","put","_ref4","connections","JSON","parse","localStorage","getItem","connectionId","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","sequences_templateObject12","sequences_templateObject13","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","sequences_templateObject18","sequences_templateObject19","sequences_templateObject20","refresh","sequences_templateObject21","sequences_templateObject22","sequences_templateObject23","sequences_templateObject24","sequences_templateObject25","handleWatchUpdate","_ref5","Promise","op","currentOperationID","then","_ref6","addOperation","_ref7","created","Date","now","_ref8","putFieldOperation","_ref10","operation_payload","deleteFieldOperation","_ref11","delete","_ref12","unset","updateOperation","equals","sequences_templateObject26","otherwise","handleFieldUpdate","all_fields","fld_id","operationsRecords","operationRecord","hasOwnProperty","obj","collapse","field_id","operation_id","handleChronologyCollapse","startMovingMap","MapPanel_chains_templateObject","doneMovingMap","MapPanel_chains_templateObject2","handleMapClick","recalculateArea","getFieldBoundingBox","validateNewFieldButton","handleLocationFound","endMarkerDrag","chains_templateObject3","startMarkerDrag","chains_templateObject4","markerDragging","handleMapMoved","setFieldOnMapCenter","centroid","tempObject","splice","gjArea","geometry","validateFieldCoordinates","bbox","geojsonPolygon","coords","north","south","east","west","j","computeBoundingBox","c1","c2","handleDrawerOpen","BottomDrawer_chains_templateObject","openBottomDrawerForStatusUpdate","BottomDrawer_chains_templateObject2","BottomDrawer_chains_templateObject3","BottomDrawer_chains_templateObject4","chains_templateObject5","_METERS_TO_ACRES","fields-index","toConsumableArray","loadFldData","setCurrentField","fields_sequences_templateObject","fields_sequences_templateObject2","operationId","marker","mapOadaToFields","curFields","fieldGroup","field_object","record","farm","centroid_object","geojson_area","reverse","visible","mapOadaToFarms","curFarms","putFarm","_id","disableNewFieldButton","fields_sequences_templateObject3","fields_sequences_templateObject4","putField","farmName","handleFieldSelected","handleFarmSelected","fields_sequences_templateObject5","fields_sequences_templateObject6","saveEditedField","fields_sequences_templateObject7","fields_sequences_templateObject8","fields_sequences_templateObject9","fields_sequences_templateObject10","fields_sequences_templateObject11","fields_sequences_templateObject12","fields_sequences_templateObject13","fields_sequences_templateObject14","createFieldRecord","addNewFarm","farmRecord","_ref13","currentOperationFieldStatus","getCurrentOperationFieldStatus","today","dd","getDate","mm","getMonth","getFullYear","_ref14","fieldName","coordinatesOk","_ref15","_ref16","fields_sequences_templateObject15","fields_sequences_templateObject16","fields_sequences_templateObject17","fields_sequences_templateObject18","fields_sequences_templateObject19","fields_sequences_templateObject20","_OPTIONS","redirect","md","MobileDetect","navigator","userAgent","mobile","App_sequences_templateObject","options","token","operatorsModule","loadFldListData","clearCacheButtonClicked","LocalCache","StorageModule","json","sync","prefix","Module","modules","signOut","Connections_chains_templateObject","Connections_chains_templateObject2","Connections_chains_templateObject3","Connections_chains_templateObject4","Connections_chains_templateObject5","updateOadaDomain","chains_templateObject6","chains_templateObject7","updateOadaFieldsDomain","chains_templateObject8","chains_templateObject9","operationsKeys","userOperations","chains_templateObject10","chains_templateObject11","cerebralModule","resetCache","chains_templateObject12","chains_templateObject13","setConnection","chains_templateObject14","chains_templateObject15","chains_templateObject16","chains_templateObject17","chains_templateObject18","chains_templateObject19","chains_templateObject20","cancelConnection","chains_templateObject21","chains_templateObject22","chains_templateObject23","chains_templateObject24","chains_templateObject25","showConnections","chains_templateObject26","SideDrawer_chains_templateObject","modules_DataTabs","saveCurrentSelectionStatusAction","loadOpsData","saveCurrentSelectionStatus","handleOperationSelected","setCurrentOperation","handleOperationCleared","clearOpsData","_addNewOperation","_inputText","_operations","strUUID","ops_id","_status","opId","currentSelection","suggestionsOpen","newFieldDisabled","modules_BottomDrawer","menu","AutocompleteSearch_chains_templateObject","AutocompleteSearch_chains_templateObject2","stringify","handleOperationEdited","_found","_CURRENT_HOST","oada_domain_text","oada_fields_domain_text","oada_domain","oada_fields_domain","modules_operations","records","loading","fieldsChanged","operationClicked","farms","new_field","resized","windowSize","item 1","item 2","item 3","MenuList_sequences_templateObject","_modules","oadaModule","StatsBar","User","FldList","oadaFields","defineProperty","oadaOperators","providers","oadaProvider","Devtools","Controller","root_module","devtools","host","muiTheme","createMuiTheme","render","_cerebral_react","controller","MuiThemeProvider_default","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.d6fca702.chunk.js","sourcesContent":["//Local Development Values\nconst devtoolsPort = 8787;\nconst oadaDomain = process.env.REACT_APP_OADA_DOMAIN || 'https://yield.oada-dev.com';\nconst websiteDomain = 'http://localhost:' + parseInt(window.location.port, 10);\nconst metadata = require('./dev_metadata.js');\nconst defaultNewConnectionURL = 'https://localhost';\nconst appName = \"FieldWorkApp\";\nconst contentType = 'application/vnd.oada.yield.1+json';\nconst bookmarksOperations = '/bookmarks/operations';\nconst bookmarksFields = '/bookmarks/fields';\n\nexport default {\n  oadaDomain,\n  devtoolsPort,\n  websiteDomain,\n  metadata,\n  defaultNewConnectionURL,\n  appName,\n  contentType,\n  bookmarksOperations,\n  bookmarksFields\n}\n","module.exports = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n","//Production Development Values\nconst devtoolsPort = 8787;\nconst oadaDomain = process.env.REACT_APP_OADA_DOMAIN || 'https://yield.oada-dev.com';\nconst websiteDomain = 'https://fieldworkapp.oada-dev.com:8080';\nconst metadata = require('./proddev_metadata');\nconst defaultNewConnectionURL = 'https://fieldworkapp.oada-dev.com';\n\nexport default {\n  oadaDomain,\n  devtoolsPort,\n  websiteDomain,\n  metadata,\n  defaultNewConnectionURL\n}\n","module.exports = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n","//Production Values\nconst devtoolsPort = 8787;\nconst oadaDomain = process.env.REACT_APP_OADA_DOMAIN || 'https://yield.oada-dev.com';\nconst websiteDomain = 'https://fieldworkapp.oada-dev.com';\nconst metadata = require('./prod_metadata.js');\nconst defaultNewConnectionURL = 'https://fieldworkapp.oada-dev.com';\nconst appName = \"FieldWorkApp\";\nconst contentType = 'application/vnd.oada.yield.1+json';\nconst bookmarksOperations = '/bookmarks/operations';\nconst bookmarksFields = '/bookmarks/fields';\n\nexport default {\n  oadaDomain,\n  devtoolsPort,\n  websiteDomain,\n  metadata,\n  defaultNewConnectionURL,\n  appName,\n  contentType,\n  bookmarksOperations,\n  bookmarksFields\n}\n","module.exports = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport { state, signal} from 'cerebral/tags';\nimport _ from 'lodash';\nimport TextField from 'material-ui/TextField';\nimport { InputAdornment } from 'material-ui/Input';\nimport Paper from 'material-ui/Paper';\nimport { MenuItem } from 'material-ui/Menu';\nimport IconButton from 'material-ui/IconButton';\nimport Icon from 'material-ui/Icon';\nimport Downshift from 'downshift';\nimport ArrowDropDown from \"material-ui-icons/ArrowDropDown\";\n\nconst styles = theme => ( {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    height: 250,\n    width: 50,\n  },\n  inputBox: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center'\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    width: 180,\n    marginTop: theme.spacing.unit * 0.1,\n    marginBottom: theme.spacing.unit * 0,\n    marginLeft: 30,\n    marginRight: 0,\n    zIndex: 3,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    marginTop: theme.spacing.unit * 0.1,\n    marginBottom: theme.spacing.unit * 0,\n    marginLeft: 0,\n    marginRight: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  disabled: {\n    pointerEvents: 'none',\n    opacity: 0.4,\n    touchAction: 'none',\n  },\n  menuButton: {\n    marginLeft: 2,\n    marginRight: 2\n  }\n});\n\nlet temp = \"FieldWorkApp\";\n//this.props.operationSuggestions[this.props.currentOperationId].label\n\nclass AutocompleteSearch extends React.Component {\n\n  renderInput(inputProps) {\n    const { InputProps, classes, isMenuBar, ref, ...other } = inputProps;\n    return (\n      <TextField\n        onFocus={() => {this.props.openSuggestions({id: this.props.id})}}\n        onBlur={() => {this.props.closeSuggestions({id: this.props.id})}}\n        value={temp}\n        {...other}\n        inputRef={ref}\n        InputProps={{\n          style: {color: '#FAFAFA'},\n          classes: {\n            input: classes.input,\n          },\n          endAdornment: (\n            <InputAdornment position=\"start\">\n              <IconButton\n                aria-label=\"clear textfield\"\n                className={classes.menuButton}\n                onClick={ () => {\n                  if (this.props.id === 'ops-input') {\n                    this.props.operationInputTyped({inputText: \"\", inputType: \"operation\"});\n                  } else {\n                    this.props.fieldInputTyped({inputText: \"\", inputType: \"field\"});\n                  }\n                } }\n              >\n                <ArrowDropDown />\n              </IconButton>\n            </InputAdornment>\n          ),\n          ...InputProps,\n        }}\n        label={this.props.id === 'ops-input' ? (isMenuBar ? \"\" : \"Operation\") : \"Field\"}\n        InputLabelProps={{style: {color: 'white'}, shrink: true}}\n      />\n    );\n  }\n\n  getSuggestions(inputValue) {\n    let suggestions = [];\n    //let ht = {};\n\n    if (this.props.id === 'ops-input') {\n      suggestions = Object.values(this.props.operationSuggestions || {}).filter(suggestion => (\n        inputValue === \"\" || _.find(this.props.operationSuggestions, s => s.label === inputValue) ||\n        // inputValue === \"\" || Object.values(this.props.operationSuggestions).map(suggestion => (suggestion.label)).includes(inputValue) ||\n          suggestion.label.toLowerCase().includes(inputValue.trim().toLowerCase())\n      ));\n      // console.log(\"--> Suggestions \", suggestions);\n      // let clonedSuggestions = _.cloneDeep(suggestions);\n      // let length = clonedSuggestions.length;\n      // for(let i=0; length-1; i++){\n      //   //console.log(\"hashTable value \", ht[clonedSuggestions[i].label]);\n      //   if(clonedSuggestions[i] && ht[clonedSuggestions[i].label]){\n      //     console.log(\"suggestion -->\", clonedSuggestions[i].label);\n      //     delete clonedSuggestions[i];\n      //   }\n      //   else {\n      //     if(clonedSuggestions[i]) {\n      //       ht[clonedSuggestions[i].label] = true;\n      //     }\n      //   }\n      // }\n\n      if(this.props.connection_id !== \"none\")\n        suggestions.unshift({'action': 'add', type: 'operation', label: 'add new operation'});\n\n      return suggestions;\n    }//if\n\n    if (this.props.id === 'fld-input') {\n      suggestions = Object.values(this.props.fieldSuggestions).filter(suggestion => (\n        inputValue === \"\" || _.find(this.props.fieldSuggestions, s => s.label === inputValue) ||\n        suggestion.label.toLowerCase().includes(inputValue.trim().toLowerCase())\n      ));\n\n      /* add button at the beginning of the drop down menu */\n      suggestions.unshift({'action': 'add', type: 'field', label: 'add new field'});\n      return suggestions;\n    }\n  }//getSuggestions\n\n  renderSuggestion(params) {\n    const { suggestion, index, itemProps, highlightedIndex, selectedItem } = params;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = selectedItem === suggestion.label;\n\n    if ('action' in suggestion && suggestion.action === 'add') {\n      return (\n        <MenuItem\n          {...itemProps}\n          key={suggestion.label}\n          onClick={(event) => {\n            (this.props.id === 'ops-input') ?\n              this.props.addOperationClicked({}) :\n              this.props.addFieldClicked({})\n            }\n          }\n          selected={isHighlighted}\n          component=\"div\"\n          style={{\n            display: 'block',\n            color: 'green',\n            fontStyle: 'italic',\n            fontWeight: isSelected ? 500 : 400,\n          }}\n        >\n          {suggestion.label}\n        </MenuItem>\n      );\n    } else {\n      return (\n        <MenuItem\n          {...itemProps}\n          key={suggestion.label}\n          onClick={(event) => {\n            (this.props.id === 'ops-input') ?\n              this.props.operationSelected({item: suggestion}) :\n              this.props.fieldSelected({item: suggestion})\n            }}\n          selected={isHighlighted}\n          component=\"div\"\n          style={{\n            display: 'block',\n            fontWeight: isSelected ? 500 : 400,\n          }}\n        >\n          {suggestion.label}\n        </MenuItem>\n      );\n    }\n  }\n\n  renderAddButton(params) {\n    const { classes, addOperationDisabled, addFieldDisabled } = params;\n    return (\n      <IconButton\n        aria-label=\"add\"\n        className={classes.button}\n        disabled={this.props.id === 'ops-input' ? addOperationDisabled : addFieldDisabled}\n        onClick={\n          this.props.id === 'ops-input' ?\n            () => {this.props.addOperationClicked({})} :\n            () => {this.props.addFieldClicked({})}\n        }\n      >\n        <Icon style={{'color': 'white', 'fontSize': 32}}>add_circle</Icon>\n      </IconButton>\n    )\n  }\n\n  renderEditButton(params) {\n    const { classes } = params;\n    return (\n      <IconButton\n        aria-label=\"fields\"\n        disabled={this.props.id === 'ops-input' ? !(this.props.currentOperationId) : !(this.props.currentFieldId)}\n        className={classes.button}\n        onClick={\n          this.props.id === 'ops-input' ?\n            (event) => { this.props.editOperationClicked({event: event}) } :\n            (event) => { this.props.editFieldClicked({event: event}) }\n        }\n      >\n        <Icon style={{'color': 'white', 'fontSize': 32}}>mode_edit</Icon>\n      </IconButton>\n    )\n  }\n\n  isAddOperationDisabled() {\n    const ret = (\n      (this.props.operationInputText.trim() === \"\") ||\n      (\n        Object.values(this.props.operationSuggestions).map(operation => {\n          return operation.label.toLowerCase();\n        }).includes(this.props.operationInputText.trim().toLowerCase())\n      )\n    );\n    if (ret) { console.log(\"AddOperationDisabled\"); }\n    if (!ret) { console.log(\"AddOperationEnabled\"); }\n  }\n\n\n  render() {\n    const { classes, sourceAppBar } = this.props;\n\n    return(\n      <Downshift\n        isOpen={this.props.id === 'ops-input' ? this.props.operationsSuggestionsOpen : this.props.fieldsSuggestionsOpen}\n        selectedItem={this.props.id === 'ops-input' ? this.props.currentOperationId : this.props.currentFieldId}\n        inputValue={this.props.id === 'ops-input' ? this.props.operationInputText : this.props.fieldInputText}\n        itemToString={(item) => (item == null ? '' : item.label)}\n        onStateChange={(changes, stateAndHelpers) => {\n\n          const type = (this.props.id === 'ops-input') ? 'operation' : 'field';\n          switch (changes.type) {\n            case Downshift.stateChangeTypes.keyDownEnter:\n            case Downshift.stateChangeTypes.clickItem:\n              if (type === 'operation') {\n                this.props.operationSelected({item: changes.selectedItem});\n              } else {\n                this.props.fieldSelected({item: changes.selectedItem});\n              }\n              break;\n            case Downshift.stateChangeTypes.changeInput:\n              if (type === 'operation') {\n                this.props.operationInputTyped({inputText: changes.inputValue, inputType: type});\n              } else {\n                this.props.fieldInputTyped({inputText: changes.inputValue, inputType: type});\n              }\n              break;\n            case Downshift.stateChangeTypes.mouseUp:\n            case Downshift.stateChangeTypes.blurInput:\n              if (type === 'operation') {\n                if (!(!this.props.currentOperationId) && this.props.operationInputText === \"\") {\n                  //this.props.operationSelected({item: this.props.operationSuggestions[this.props.currentOperationId]});\n                }\n              } else {\n                if (!(!this.props.currentFieldId)) {\n                  this.props.fieldSelected({item: this.props.fieldSuggestions[this.props.currentFieldId]});\n                }\n              }\n              break;\n            default:\n              break;\n          }\n        }}\n      >\n        {({ getInputProps, getItemProps, isOpen, inputValue, selectedItem, highlightedIndex }) => (\n          <div>\n\n            <div className={classes.inputBox}>\n              {this.renderInput({\n                isMenuBar: sourceAppBar,\n                fullWidth: false,\n                classes,\n                InputProps: getInputProps({\n                  placeholder: (this.props.id === 'ops-input' ? 'Operation' : (this.props.id === 'fld-input' ? 'Field' : this.props.id)),\n                  id: 'autocomplete-search-' + this.props.id,\n                }),\n              })}\n            </div>\n            {isOpen ? (\n              <Paper square className={classes.suggestionsContainerOpen}>\n                <div className={classes.suggestionsList}>\n                  {this.getSuggestions(inputValue).map((suggestion, index) =>\n                    this.renderSuggestion({\n                      suggestion,\n                      index,\n                      itemProps: getItemProps({\n                        item: suggestion\n                      }),\n                      highlightedIndex,\n                      selectedItem\n                    }),\n                  )}\n                </div>\n              </Paper>\n            ) : null}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n\nAutocompleteSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    operationSuggestions:       state`operations.records`,\n    connection_id:              state`operations.connection_id`,\n    currentOperationId:         state`User.currentSelection.operation.id`,\n    operationInputText:         state`User.currentSelection.operation.inputText`,\n    operationsSuggestionsOpen:  state`User.currentSelection.operation.suggestionsOpen`,\n    fieldSuggestions:           state`fields.records`,\n    currentFieldId:             state`fields.selectedId`,\n    fieldsSuggestionsOpen:      state`fields.new_field.field.suggestionsOpen`,\n    fieldInputText:             state`fields.records.${state`fields.selectedId`}.name`,\n\n    operationInputTyped:        signal`AutocompleteSearch.operationInputTyped`,\n    fieldInputTyped:            signal`AutocompleteSearch.fieldInputTyped`,\n    addOperationClicked:        signal`AutocompleteSearch.addOperationClicked`,\n    editOperationClicked:       signal`AutocompleteSearch.handleOperationEdited`,\n    editFieldClicked:           signal`AutocompleteSearch.handleFieldEdited`,\n    openSuggestions:            signal`AutocompleteSearch.openSuggestions`,\n    closeSuggestions:           signal`AutocompleteSearch.closeSuggestions`,\n    operationSelected:          signal`User.handleOperationSelected`,\n    operationCleared:           signal`User.handleOperationCleared`,\n    addFieldClicked:            signal`User.addFieldClicked`,\n    fieldSelected:              signal`fields.handleFieldSelected`,\n    fieldCleared:               signal`fields.handleFieldCleared`,\n\n  },\n  withStyles(styles, { withTheme: true })(AutocompleteSearch)\n);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { Menu, MenuItem } from \"material-ui\";\nimport MenuIcon from 'material-ui-icons/Menu';\nimport IconButton from \"material-ui/IconButton\";\nimport {withStyles} from \"material-ui/styles\";\n\nvar anchorEl;\n\nconst styles = theme => ({\n  menuButton: {\n    marginLeft: 2,\n    marginRight: 2\n  },\n});\n\nclass MenuList extends React.Component {\n\n  handleClose = () => {\n    anchorEl = null;\n  };\n\n  handleMenuList = event => {\n    anchorEl = event.currentTarget;\n  };\n\n  render() {\n\n    const { classes } = this.props;\n\n    anchorEl = this.props.open ? anchorEl : null;\n    return (\n      <div>\n        <IconButton\n          key={7}\n          color=\"inherit\"\n          aria-label=\"simple-menu-button\"\n          id=\"simple-menu-button\"\n          aria-owns={\"simple-menu\"}\n          aria-haspopup=\"true\"\n          onClick={(evt) => {this.handleMenuList(evt); this.props.handleMenuListOpen({})}}\n          className={classes.menuButton}\n          disabled={\n            this.props.connection_id === \"none\" || this.props.fieldsEditing || this.props.emptyDataSet\n          }\n        >\n          <MenuIcon />\n        </IconButton>\n        {(this.props.open) ?\n          <Menu\n            id=\"simple-menu\"\n            open={this.props.open}\n            onClose={this.props.handleMenuListOpen}\n            anchorEl={anchorEl}\n          >\n            <MenuItem onClick={()=>{ this.props.handleMenuListOpen({}); this.props.addOperatorClicked({})} }>Add Operator</MenuItem>\n            <MenuItem onClick={()=>{ this.props.handleMenuListOpen({}); this.props.clearConnection({})}    }>Reset Cache</MenuItem>\n            <MenuItem onClick={()=>{ this.props.handleMenuListOpen({}); this.props.clearConnection({})}    }>Logout</MenuItem>\n          </Menu>\n          : null}\n      </div>\n    )}\n}\n\n\nMenuList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    menuItems:          state`MenuList.records`,\n    current:            state`MenuList.current`,\n    open:               state`MenuList.open`,\n\n    setCurrentItem:     signal`MenuList.setCurrentItem`,\n    addOperatorClicked: signal`operators.addOperatorClicked`,\n    clearConnection:    signal`Connections.clearConnection`,\n    handleMenuListOpen: signal`MenuList.handleMenuListOpen`,\n  },\n  withStyles(styles, {withTheme: true})(MenuList)\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"material-ui/styles\";\nimport classNames from \"classnames\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport AppBar from \"material-ui/AppBar\";\nimport Toolbar from \"material-ui/Toolbar\";\nimport IconButton from \"material-ui/IconButton\";\nimport Button from \"material-ui/Button\";\nimport ChevronRightIcon from 'material-ui-icons/ChevronRight';\nimport Typography from \"material-ui/Typography\";\nimport MoreVertIcon from \"material-ui-icons/MoreVert\";\nimport AutocompleteSearch from \"../AutocompleteSearch\";\nimport AddBoxIcon from \"material-ui-icons/AddBox\";\nimport MenuList from \"../MenuList\";\n\nconst styles = theme => ({\n  appBar: {\n    display: \"flex\",\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    height: 64,\n    order: 1\n  },\n  buttons: {\n  },\n  menuButton: {\n    marginLeft: 2,\n    marginRight: 2\n  },\n  hide: {\n    display: \"none\"\n  },\n  disabled: {\n    pointerEvents: \"none\",\n    opacity: 0.4,\n    touchAction: \"none\"\n  },\n  typography: {\n    flex: 1,\n    width: 200\n  }\n});\n\nclass MenuBar extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    const drawer_button = (\n      <IconButton\n        key={0}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => {\n          this.props.handleSideDrawerOpen({});\n        }}\n        className={classNames(\n          classes.menuButton,\n          this.props.currentOperation &&\n            this.props.sideDrawerOpen &&\n            classes.hide,\n          !this.props.currentOperation && classes.disabled\n        )}\n      >\n        <ChevronRightIcon />\n      </IconButton>\n    );\n\n    const settings_button = (\n      <IconButton\n        key={1}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.connectionsClicked({})}\n        className={classes.menuButton}\n      >\n        <MoreVertIcon />\n      </IconButton>\n    );\n\n    const settings_button_text = (\n      <Button\n        key={2}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.connectionsClicked({})}\n        className={classes.menuButton}\n        disabled={this.props.connection_id === \"none\"}\n      >\n        Connect\n      </Button>\n    );\n\n    const add_field = (\n      <IconButton\n        key={4}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.addFieldClicked({})}\n        className={classes.menuButton}\n        disabled={\n          this.props.connection_id === \"none\" || this.props.fieldsEditing || this.props.emptyDataSet\n        }\n      >\n        <AddBoxIcon />\n      </IconButton>\n    );\n\n    const add_field_text = (\n      <Button\n        key={5}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.addFieldClicked({})}\n        className={classes.menuButton}\n        disabled={\n          this.props.connection_id === \"none\" || this.props.fieldsEditing || this.props.emptyDataSet\n        }\n      >\n        Add Field\n      </Button>\n    );\n\n    const ops_input = (\n      <AutocompleteSearch\n        id=\"ops-input\"\n        style={{ width: 200 }}\n        sourceAppBar={true}\n      />\n    );\n\n    return (\n      <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar\n          className={classes.appBar}\n          disableGutters={\n            !(this.props.sideDrawerOpen && this.props.currentOperation)\n          }\n        >\n          {drawer_button}\n\n          <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            style={{ align: \"left\" }}\n            className={classes.typography}\n            noWrap\n          >\n            {!this.props.sideDrawerOpen ? ops_input : null}\n          </Typography>\n\n            {(this.props.isSmall && this.props.orientation === \"portrait\") ? settings_button : settings_button_text}\n            {(this.props.isSmall && this.props.orientation === \"portrait\") ? add_field : add_field_text}\n            <MenuList />\n\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nMenuBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    addFieldClicked:            signal`fields.addFieldClicked`,\n    operationInputTyped:        signal`AutocompleteSearch.operationInputTyped`,\n    addOperationClicked:        signal`AutocompleteSearch.addOperationClicked`,\n    editOperationClicked:       signal`AutocompleteSearch.handleOperationEdited`,\n    operationCleared:           signal`User.handleOperationCleared`,\n    addOperatorClicked:         signal`operators.addOperatorClicked`,\n    handleSideDrawerOpen:       signal`SideDrawer.handleDrawerOpen`,\n    connectionsClicked:         signal`MenuBar.connectionsClicked`,\n    signoutClicked:             signal`MenuBar.signoutClicked`,\n    clearCacheClicked:          signal`MenuBar.clearCacheClicked`,\n    addNewFieldClicked:         signal`MenuBar.addNewFieldClicked`,\n    showStatsClicked:           signal`StatsBar.handleOpenStats`,\n    handleMenuListOpen:         signal`MenuList.handleMenuListOpen`,\n\n    sideDrawerOpen:             state`SideDrawer.open`,\n    operations:                 state`operations.records`,\n    connection_id:              state`operations.connection_id`,\n    appName:                    state`App.appName`,\n    contentType:                state`App.contentType`,\n    appIsMobile:                state`App.is_mobile`,\n    emptyDataSet:               state`App.emptyDataSet`,\n    orientation:                state`window.orientation`,\n    isSmall:                    state`window.isSmall`,\n    infoBarOperationsOpen:      state`InfoBar.operations.open`,\n    fieldsEditing:              state`fields.editing`,\n    operationInputText:         state`User.currentSelection.operation.inputText`,\n    currentOperation:           state`User.currentSelection.operation.id`,\n    operationsSuggestionsOpen:  state`User.currentSelection.operation.suggestionsOpen`,\n    MenuListOpen:               state`MenuList.open`\n  },\n  withStyles(styles, { withTheme: true })(MenuBar)\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport {\n  TextField,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"material-ui\";\nimport Dialog from \"material-ui/Dialog\";\nimport Button from \"material-ui/Button\";\nimport { state, signal } from \"cerebral/tags\";\n\nexport default connect(\n  {\n    oadaDomainText:           state`Connections.oada_domain_text`,\n    oadaFieldsDomainText:     state`Connections.oada_fields_domain_text`,\n    show:                     state`Connections.show`,\n\n    submitClicked:            signal`Connections.submitClicked`,\n    cancelClicked:            signal`Connections.cancelClicked`,\n    oadaDomainChanged:        signal`Connections.oadaDomainChanged`,\n    oadaFieldsDomainChanged:  signal`Connections.oadaFieldsDomainChanged`\n  },\n\n  class Connections extends React.Component {\n    render() {\n      return (\n        <Dialog open={this.props.show} className={\"connections-dialog\"}>\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Data Source [2.5.8]\"}{\" \"}\n          </DialogTitle>\n          <DialogContent>\n            At what OADA domain is your data stored?\n          </DialogContent>\n          <DialogContent>\n            <div>\n              <TextField\n                label=\"Domain\"\n                value={this.props.oadaDomainText}\n                onChange={e => this.props.oadaDomainChanged({ value: e.target.value })}\n                style={{ width: 250 }}\n              />\n            </div>\n            {/*<div>*/}\n            {/*<TextField*/}\n            {/*label=\"Fields Domain\"*/}\n            {/*value={this.props.oadaFieldsDomainText}*/}\n            {/*onChange={(e) => this.props.oadaFieldsDomainChanged({value: e.target.value})}*/}\n            {/*style = {{width: 250}}*/}\n            {/*/>*/}\n            {/*</div>*/}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                this.props.cancelClicked({});\n              }}\n              color=\"secondary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {this.props.submitClicked({});}}\n              color=\"secondary\"\n              autoFocus\n            >\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport {state, signal} from 'cerebral/tags';\nimport ListSubheader from 'material-ui/List/ListSubheader';\nimport List, { ListItem, ListItemText } from 'material-ui/List';\nimport Collapse from 'material-ui/transitions/Collapse';\nimport ExpandLess from 'material-ui-icons/ExpandLess';\nimport ExpandMore from 'material-ui-icons/ExpandMore';\nimport Typography from 'material-ui/Typography';\n\nconst styles = theme => ({\n  root: {\n    maxWidth: 310, //was 360\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass OpsList extends React.Component {\n\n  renderItem(params) {\n    const {key, color1, color2, bannerText, classes} = params;\n    const area = this.props.OpsList[key]['fields'].reduce((a, b) => {return a + (b.boundary ? b.boundary.area : 0)}, 0);\n    const percent = !(!params['total_area']) ?\n                      Math.round(( area / params['total_area'] + 0.00001) * 10000) / 100 : 0;\n    return(\n      <div key={'fields-' + key}>\n        <ListItem\n          button\n          style={{color: color1}}\n          onClick={ () => {this.props.handleCollapse({status: key})} }\n        >\n          <ListItemText\n            primary={\n              <Typography variant=\"body2\" style={{color: color1}}>\n                {bannerText + ' (' + this.props.OpsList[key]['fields'].length + ')'}\n              </Typography>\n            }\n            secondary={\n              <Typography variant=\"caption\" style={{color: color2}}>\n                {\"\" + (Math.round((area + 0.00001) * 100) / 100) + ((percent > 0) ? ' acres (' + percent + '%)' : ' acres')}\n              </Typography>\n            }\n          />\n          {this.props.OpsList[key]['fields'].length > 0 ? (\n            !this.props.OpsList[key]['collapse'] ?\n              <ExpandLess /> :\n              <ExpandMore />\n            ) : null }\n        </ListItem>\n        <Collapse in={!(this.props.OpsList[key]['collapse'])} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {this.props.OpsList[key]['fields'].map(fieldRecord => {\n              const boundary = _.cloneDeep(fieldRecord.boundary) || {};\n              boundary.area = boundary.area || 0;\n              return (\n                <ListItem\n                  button style={{color: color1}}\n                  className={classes.nested}\n                  key={'field-' + fieldRecord.id}\n                  onClick={() => {}}\n                >\n                  <ListItemText\n                    disableTypography\n                    primary={\n                      <Typography variant=\"body2\" style={{color: color1}} >\n                        {fieldRecord.name + ' (' + (Math.round((boundary.area + 0.00001) * 100) / 100) + ' acres)'}\n                      </Typography>}\n\n                    secondary={\n                      <div>\n                        <Typography variant=\"caption\" style={{color: color2}}>\n                          Since: {fieldRecord.since}\n                        </Typography>\n                        <Typography variant=\"caption\" style={{color: color2}}>\n                          Marked By: {fieldRecord.by}\n                        </Typography>\n                      </div>}\n                  />\n                </ListItem>\n              )\n            })}\n          </List>\n        </Collapse>\n      </div>\n    )\n  }\n\n  render() {\n    const { classes } = this.props;\n    const params = {\n      unplanned: {\n        color1: '#263238',\n        bannerText: 'Unplanned',\n        color2: '#B0BEC5',\n      },\n      planned: {\n        color1: '#D50000',\n        bannerText: 'Planned',\n        color2: '#EF9A9A',\n      },\n      started: {\n        color1: '#FFC107',\n        bannerText: 'Started',\n        color2: '#FFC107',\n      },\n      completed: {\n        color1: '#1B5E20',\n        bannerText: 'Completed',\n        color2: '#66BB6A',\n      },\n      total_area: Object.keys(this.props.OpsList || {}).map(\n                    key => {\n                      return this.props.OpsList[key]['fields'].reduce((a, b) => {\n                        return a + (b.boundary ? b.boundary.area : 0)}, 0)\n                    }).reduce((a, b) => {\n                          return a + b}, 0)\n    };\n\n    return (\n        <List\n          component=\"nav\"\n          className={classes.root}\n          subheader={\n            <ListSubheader component=\"div\" style={{color: '#304FFE', display: 'flex', alignItems: 'center'}}>\n              <Typography variant=\"caption\">\n                {\n                  Object.keys(this.props.OpsList || {}).map(key => {\n                    return this.props.OpsList[key]['fields'].length}).reduce((a, b) => {\n                      return a + b}, 0) +\n                  ' fields, ' + (Math.round((params['total_area'] + 0.00001) * 100) / 100) + ' acres '\n                }\n              </Typography>\n            </ListSubheader>}\n        >\n            {Object.keys(this.props.OpsList || {}).map(key => {\n              return this.renderItem({\n                key: key,\n                classes: classes,\n                total_area: params['total_area'],\n                ...params[key],\n              })\n            })}\n        </List>\n    );\n  }\n}\n\nOpsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect({\n    currentOperationName: state`operations.records.${state`User.currentSelection.operation.id`}.label`,\n    OpsList: state`OpsList`,\n\n    handleCollapse: signal`OpsList.handleCollapse`,\n    selectField: signal`User.handleFieldSelected`\n  },\n  withStyles(styles, { withTheme: true })(OpsList)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport {state, signal} from 'cerebral/tags'\nimport SwipeableViews from 'react-swipeable-views';\nimport Typography from 'material-ui/Typography';\nimport OpsList from '../OpsList';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 0 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 250,\n    paddingLeft: '0px',\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: 50,\n    width: 300,\n  },\n  inputBox: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    paddingLeft: 10,\n    height: 50,\n    width: 220,\n  },\n  disabled: {\n    pointerEvents: 'none',\n    opacity: 0.4,\n    touchAction: 'none',\n  },\n  inputContainer: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    paddingLeft: '20px',\n    marginTop: theme.spacing.unit,\n  },\n});\n\nclass DataTabs extends React.Component {\n\n  render() {\n    const { classes, theme } = this.props;\n    const ops_list = (<OpsList />);\n\n    // const fld_list = (<FldList />);\n    // let currentInputLen = this.props.currentInputText  ?  this.props.currentInputText.length : 0;\n    return (\n      <div className={classes.root}>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={this.props.tabValue}\n          onChangeIndex={(index) => {this.props.handleChangeIndex({index: index})}}\n          style={{padding: '0px'}}\n        >\n\n            <TabContainer dir={theme.direction}>\n                {ops_list}\n            </TabContainer>\n\n          {/*<TabContainer dir={theme.direction}>*/}\n            {/*<div style={{backgroundColor: '#212121', 'paddingLeft': '5px', 'paddingRight': '0px', paddingTop: '0px'}}>*/}\n              {/*<div className={classes.container}>*/}\n                {/*<IconButton*/}\n                  {/*aria-label=\"clear field\"*/}\n                  {/*disabled={!(currentInputLen > 0)}*/}\n                  {/*className={classes.button}*/}\n                  {/*onClick={ () => { this.props.clearFieldClicked({inputText: '', inputType: 'field'})} }*/}\n                  {/*style={{'paddingLeft': 12}}*/}\n                {/*>*/}\n                  {/*<Icon style={{'color': 'white', 'fontSize': 30 }}>clear</Icon>*/}\n                {/*</IconButton>*/}\n                {/*<Typography variant=\"title\" className={classes.inputBox} noWrap>*/}\n                  {/*/!*fld_input*!/*/}\n                {/*</Typography>*/}\n              {/*</div>*/}\n              {/*<Divider />*/}\n            {/*</div>*/}\n            {/*{fld_list}*/}\n          {/*</TabContainer>*/}\n\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nDataTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    tabValue:           state`DataTabs.value`,\n    currentInputText:   state`fields.records.${state`fields.selectedId`}.name`,\n\n    handleFieldEdited:  signal`DataTabs.handleFieldEdited`,\n    handleChange:       signal`DataTabs.handleChange`,\n    handleChangeIndex:  signal`DataTabs.handleChangeIndex`,\n    clearFieldClicked:  signal`AutocompleteSearch.fieldInputTyped`,\n  },\n  withStyles(styles, { withTheme: true })(DataTabs)\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport {state, signal} from 'cerebral/tags'\nimport Drawer from 'material-ui/Drawer';\nimport IconButton from 'material-ui/IconButton';\nimport ChevronLeftIcon from 'material-ui-icons/ChevronLeft';\nimport Typography from 'material-ui/Typography';\nimport AutocompleteSearch from '../AutocompleteSearch'\nimport DataTabs from '../DataTabs'\n\nconst drawerWidth = 250;\n\nconst styles = theme => ({\n  hide: {\n    display: 'none',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#212121',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    paddingLeft: '15px',\n    ...theme.mixins.toolbar,\n  },\n  drawerInner: {\n    padding: '0px',\n  },\n  inputContainer: {\n  \tdisplay: 'flex',\n    justifyContent: 'flex-start',\n  \tflexDirection: 'column',\n    marginTop: theme.spacing.unit,\n    width: 200\n  }\n });\n\nclass SideDrawer extends React.Component {\n\n\trender() {\n    const { classes } = this.props;\n    const ops_input = (<AutocompleteSearch id='ops-input' />);\n    const data_tabs = (<DataTabs />);\n\n    return (\n      <Drawer\n        variant=\"persistent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor={'left'}\n        open={this.props.sideDrawerOpen && (!(!this.props.currentOperation)) }\n      >\n        <div className={classes.drawerInner}>\n          <div className={classes.drawerHeader}>\n            <div className={classes.inputContainer}>\n\t            <Typography variant=\"title\" noWrap>\n\t              {ops_input}\n\t            </Typography>\n            </div>\n          <IconButton onClick={() => {this.props.handleSideDrawerOpen({})}}>\n            <ChevronLeftIcon style={{'color': '#FAFAFA', 'fontSize': 35}}/>\n          </IconButton>\n          </div>\n          {data_tabs}\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nSideDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n\t{\n    sideDrawerOpen:       state`SideDrawer.open`,\n    currentOperation:     state`User.currentSelection.operation.id`,\n\n    handleSideDrawerOpen: signal`SideDrawer.handleDrawerOpen`,\n    dataTabsToggle:       signal`DataTabs.toggleTab`,\n\t},\n\twithStyles(styles, { withTheme: true })(SideDrawer)\n);\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport uuid from \"uuid\";\nimport \"./map.css\";\n\nimport {\n  Marker,\n  Map,\n  TileLayer,\n  GeoJSON,\n  FeatureGroup,\n  LayersControl\n} from \"react-leaflet\";\nconst { Overlay } = LayersControl;\n//import './map.css';\n//const editDoneButtonHeight = 64;\n\nconst styles = theme => ({\n  \"leaflet-container\": {\n    flex: 1,\n    order: 2,\n    flexGrow: 1,\n    width: \"100%\"\n  },\n  mapContainer: {\n    display: \"flex\",\n    flexGrow: 1,\n    order: 2\n  },\n  map: {\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  fieldPolygon: {\n    strokeWidth: 4,\n    strokeOpacity: 1,\n    width: \"100vw\"\n  },\n  disabled: {\n    pointerEvents: \"none\",\n    opacity: 0.4,\n    touchAction: \"none\"\n  },\n  hide: {\n    display: \"none\"\n  }\n});\n\nclass MapPanel extends React.Component {\n  validateMouseEvent(evt) {\n    if (this.props.fieldEditing) {\n      // Don't fire a click event when panning the map or when dragging a point.\n      if (!this.props.moving && !this.props.dragging) {\n        // Don't add a point if a control was clicked.\n        //console.log(\"originalEvent\", evt.originalEvent);\n        if (!evt.originalEvent.target.offsetParent) {\n          this.props.mouseDownOnMap({ pt: [evt.latlng.lng, evt.latlng.lat] });\n        } else if (\n          !evt.originalEvent.target.offsetParent.className.includes(\"marker\")\n        ) {\n          this.props.mouseDownOnMap({ pt: [evt.latlng.lng, evt.latlng.lat] });\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.refs.map.leafletElement.locate();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const color_code = {\n      unplanned: {\n        color1: \"#E0E0E0\",\n        bannerText: \"Unplanned\",\n        color2: \"#616161\"\n      },\n      planned: {\n        color1: \"#D50000\",\n        bannerText: \"Planned\",\n        color2: \"#EF9A9A\"\n      },\n      started: {\n        color1: \"#FFC107\",\n        bannerText: \"Started\",\n        color2: \"#FFC107\"\n      },\n      completed: {\n        color1: \"#76FF03\",\n        bannerText: \"Completed\",\n        color2: \"#33691E\"\n      }\n    };\n\n    let markerList = [];\n    if (this.props.fieldEditing) {\n      if (\n        this.props.currentField &&\n        this.props.currentField.boundary &&\n        this.props.currentField.boundary.geojson.coordinates[0].length > 0\n      ) {\n        markerList = [];\n        this.props.currentField.boundary.geojson.coordinates[0].forEach(\n          (pt, i) => {\n            markerList.push(\n              <Marker\n                className={\"selected-field-marker\"}\n                key={this.props.selectedId + \"-\" + i}\n                position={[pt[1], pt[0]]}\n                color={\n                  this.props.currentOperationId &&\n                  this.props.allOperations[this.props.currentOperationId] &&\n                  this.props.allOperations[this.props.currentOperationId]\n                    .fields[this.props.selectedId]\n                    ? this.props.allOperations[this.props.currentOperationId]\n                        .fields[this.props.selectedId].status\n                    : \"unplanned\"\n                }\n                draggable={true}\n                onDrag={e => {\n                  this.props.markerDragged({\n                    lat: e.target._latlng.lat,\n                    lng: e.target._latlng.lng,\n                    idx: i\n                  });\n                }}\n                onDragStart={e => {\n                  this.props.markerDragStarted({ idx: i });\n                }}\n                onDragEnd={e => {\n                  this.props.markerDragEnded({\n                    lat: e.target._latlng.lat,\n                    lng: e.target._latlng.lng,\n                    idx: i\n                  });\n                }}\n                onDblClick={e => {\n                  this.props.deleteCoordinate({ index: i });\n                }}\n              />\n            );\n          }\n        );\n      }\n    }\n\n    let new_field_polygon = this.props.currentField.boundary ? (\n      <GeoJSON\n        className={classes.fieldPolygon}\n        data={this.props.currentField.boundary.geojson}\n        onClick={() => {\n          if (!(this.props.selectedId && \n                this.props.currentField.id === this.props.selectedId && \n                this.props.fieldEditing)\n          ) {\n            this.props.handleFieldPolygonClicked({\n              id: this.props.currentField.id,\n              field: this.props.currentField\n            });\n          }\n          this.forceUpdate();\n        }}\n        key={\"field-\" + this.props.currentField.id + \"-polygon\" + uuid()}\n        color={color_code[this.props.currentOperation.fields[this.props.currentField.id] ?\n          this.props.currentOperation.fields[this.props.currentField.id].status : \"unplanned\"].color1}\n        style={{ fillOpacity: 0.4 }}\n      />\n    ) : null;\n\n    return (\n      <div className={classes.mapContainer}>\n        <Map\n          onLocationfound={e =>\n            this.props.locationFound({ lat: e.latlng.lat, lng: e.latlng.lng })\n          }\n          onClick={e => {\n            this.validateMouseEvent(e);\n          }}\n          onMoveStart={e => {\n            this.props.mapMoveStarted();\n          }}\n          onMoveend={e => {\n            this.props.mapMoved({\n              latlng: this.refs.map.leafletElement.getCenter(),\n              zoom: this.refs.map.leafletElement.getZoom()\n            });\n          }}\n          dragging={true}\n          ref=\"map\"\n          center={this.props.center}\n          attributionControl={!this.props.isMobile}\n          zoomControl={true}\n          zoom={this.props.mapZoom || 15}\n        >\n          <TileLayer\n            key={\"tile-layer\"}\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n          />\n\n          {markerList}\n          {new_field_polygon}\n          <LayersControl position=\"topright\">\n            {\n              <Overlay checked name=\"Fields\">\n                <FeatureGroup>\n                  {Object.keys(this.props.fields || {})\n                    .filter(id => {\n                      return (\n                        this.props.currentOperationId &&\n                        this.props.fields[id].boundary &&\n                        (id !== this.props.selectedId ||\n                          !this.props.fieldsEditing)\n                        //this.props.fields[id].boundary.visible\n                      );\n                    })\n                    .map(id => ( id === this.props.currentField.id ? null :\n                      <GeoJSON\n                        className={classes.fieldPolygon}\n                        data={this.props.fields[id].boundary.geojson}\n                        onClick={() => {\n                          if (!(this.props.selectedId &&\n                                id === this.props.selectedId &&\n                                this.props.fieldEditing)\n                          ) {\n                              // if editing, do not handleFieldPolygonClicked\n                              if(!this.props.fieldEditing)\n                                this.props.handleFieldPolygonClicked({id, field: this.props.fields[id]});\n                          }\n                          this.forceUpdate();\n                        }}\n                        key={\"field-\" + id + \"-polygon\" + uuid()}\n                        color={\n                          color_code[\n                            this.props.currentOperation &&\n                            this.props.currentOperation.fields &&\n                            this.props.currentOperation.fields[id] &&\n                            this.props.currentOperation.fields[id].status\n                              ? this.props.currentOperation.fields[id].status\n                              : \"unplanned\"\n                          ].color1\n                        }\n                        style={{ fillOpacity: 0.4 }}\n                      />\n                    ))}\n                </FeatureGroup>\n              </Overlay>\n            }\n          </LayersControl>\n        </Map>\n      </div>\n    );\n  } //render\n}\n\nMapPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    mapZoom:                    state`MapPanel.zoom`,\n    moving:                     state`MapPanel.moving`,\n    isLoading:                  state`MapPanel.isLoading`,\n    isMobile:                   state`App.is_mobile`,\n    geohashPolygons:            state`MapPanel.geohashPolygons`,\n    center:                     state`MapPanel.center`,\n    sideDrawerOpen:             state`SideDrawer.open`,\n    currentField:               state`fields.new_field`,\n    fields:                     state`fields.records`,\n    fieldEditing:               state`fields.editing`,\n    selectedId:                 state`fields.selectedId`,\n    currentOperationId:         state`User.currentSelection.operation.id`,\n    currentStatus:              state`User.currentSelection.status.status`,\n    allOperations:              state`operations.records`,\n    operations:                 state`operations.records`,\n    currentOperation:           state`operations.records.${state`User.currentSelection.operation.id`}`,\n\n    mapMoveStarted:             signal`MapPanel.mapMoveStarted`,\n    mouseDownOnMap:             signal`MapPanel.mouseDownOnMap`,\n    markerDragStarted:          signal`MapPanel.markerDragStarted`,\n    markerDragEnded:            signal`MapPanel.markerDragEnded`,\n    markerDragged:              signal`MapPanel.markerDragged`,\n    locationFound:              signal`MapPanel.locationFound`,\n    mapMoved:                   signal`MapPanel.mapMoved`,\n    deleteCoordinate:           signal`MapPanel.deleteCoordinate`,\n    handleFieldPolygonClicked:  signal`fields.handleFieldPolygonClicked`,\n    saveEdited:                 signal`fields.saveEditedField`,\n\n  },\n  withStyles(styles, { withTheme: true })(MapPanel)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { withStyles } from \"material-ui/styles\";\nimport Drawer from \"material-ui/Drawer\";\nimport TextField from \"material-ui/TextField\";\nimport Radio, { RadioGroup } from \"material-ui/Radio\";\nimport Icon from \"material-ui/Icon\";\nimport { FormControl, FormControlLabel } from \"material-ui/Form\";\nimport Typography from \"material-ui/Typography\";\nimport Button from \"material-ui/Button\";\nimport \"react-select/dist/react-select.css\";\nimport EditFieldIcon from \"material-ui-icons/Edit\";\nimport IconButton from \"material-ui/IconButton\";\nimport ArrowDropDown from \"material-ui-icons/ArrowDropDown\";\nimport OperatorsList from \"@oada/operators-module/List\";\n\nconst bottomDrawerHeight = 200;\n\nconst styles = theme => ({\n  formControl: {\n    margin: theme.spacing.unit * 2,\n    flexWrap: \"noWrap\",\n    justifyContent: \"flex-start\"\n  },\n  group: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"noWrap\",\n    justifyContent: \"center\"\n  },\n  statusButton: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    fontColor: \"white\",\n    margin: 0, //theme.spacing.unit * 2,\n    padding: theme.spacing.unit\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"noWrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit,\n    backgroundColor: \"#212121\",\n    minWidth: 0,\n    order: 3\n  },\n  middle: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  editFieldButton: {\n    color: \"white\"\n  },\n  textField: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    //marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit,\n    minWidth: \"200px\",\n    width: \"20%\",\n    color: \"#FAFAFA\",\n    rightPadding: 10\n  },\n  drawerPaper: {\n    display: \"flex\",\n    height: bottomDrawerHeight\n  },\n  drawerHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 2,\n    alignItems: \"center\",\n    backgroundColor: \"#3f51b5\",\n    color: \"white\",\n    justifyContent: \"space-between\",\n    padding: \"0 8px\",\n    height: \"10%\",\n\n    ...theme.mixins.toolbar\n  },\n  confirmIconGroup: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    flexGrow: 2,\n    flexWrap: \"noWrap\"\n  },\n  form: {\n    color: \"#FAFAFA\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"90%\",\n    flexWrap: \"wrap\"\n  },\n  menuButton: {\n    marginLeft: 2,\n    marginRight: 2\n  }\n});\n\nclass BottomDrawer extends React.Component {\n\n  renderDatePicker() {\n    const { classes } = this.props;\n\n    return (\n      <TextField\n        id=\"date\"\n        label=\"Date\"\n        type=\"date\"\n        className={classes.textField}\n        value={this.props.currentTimestamp}\n        //className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n          style: { color: \"white\" }\n        }}\n        InputProps={{\n          style: { color: \"white\" }\n        }}\n        onChange={event => {\n          this.props.setCurrentSelectionStatusTimestamp({\n            timestamp: event.target.value\n          });\n        }}\n      />\n    );\n  } //renderDatePicker\n\n  renderEditField() {\n    const { classes } = this.props;\n\n    return (\n      <IconButton\n        key={4}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.editFieldClicked({})}\n        className={classes.editFieldButton}\n      >\n        <EditFieldIcon />\n      </IconButton>\n    );\n  } //renderEditField\n\n  renderAddOperationForm() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate>\n        <div className={classes.form}>\n          <TextField\n            id=\"operation name\"\n            label=\"New Operation Name:\"\n            className={classes.textField}\n            value={this.props.newOperationName}\n            onChange={event => {\n              this.props.newOperationNameTyped({\n                inputText: event.target.value,\n                inputType: \"operation\"\n              });\n            }}\n            margin=\"normal\"\n            InputProps={{\n              style: { color: \"#FAFAFA\" },\n              classes: {\n                input: classes.input\n              }\n            }}\n            InputLabelProps={{ style: { color: \"white\" }, shrink: true }}\n          />\n        </div>\n        <div>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"primary\"\n            style={{ color: \"#FAFAFA\" }}\n            disabled={this.props.disabledNewOperation}\n            onClick={() => {\n              this.props.addNewOperation();\n            }}\n          >\n            Add\n          </Button>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"secondary\"\n            style={{ color: \"#FAFAFA\" }}\n            onClick={() => {\n              this.props.cancelNewOperation();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </form>\n    );\n  } //addOperationForm\n\n  renderAddFieldForm() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate>\n        <div className={classes.form}>\n          <TextField\n            id=\"field name\"\n            label=\"New Field Name:\"\n            className={classes.textField}\n            value={this.props.newFieldName}\n            onChange={event => {\n              this.props.newFieldNameTyped({\n                inputText: event.target.value,\n                inputType: \"field\"\n              });\n            }}\n            margin=\"normal\"\n            InputProps={{\n              style: { color: \"#FAFAFA\" },\n              classes: {\n                input: classes.input\n              }\n            }}\n            InputLabelProps={{ style: { color: \"white\" }, shrink: true }}\n          />\n        </div>\n        <div>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"primary\"\n            style={{ color: \"#FAFAFA\" }}\n            disabled={this.props.disabledNewOperation}\n            onClick={() => {\n              this.props.addNewField();\n            }}\n          >\n            Add\n          </Button>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"secondary\"\n            style={{ color: \"#FAFAFA\" }}\n            onClick={() => {\n              this.props.cancelNewOperation();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </form>\n    );\n  } //addOperationForm\n\n  renderRadioButtonGroup() {\n    const { classes } = this.props;\n    const datePicker = this.renderDatePicker({});\n    const editField = this.renderEditField({});\n\n    return (\n      <form className={classes.container} noValidate>\n\n        {/*<TextField*/}\n          {/*select*/}\n          {/*fullWidth*/}\n          {/*className={classes.textField}*/}\n          {/*label={\"Operator\"}*/}\n          {/*InputLabelProps={{*/}\n            {/*shrink: true,*/}\n            {/*style: { color: \"white\" }*/}\n          {/*}}*/}\n          {/*value={this.props.currentMarker}*/}\n          {/*onChange={event => {*/}\n            {/*this.props.setCurrentSelectionStatusMarker({*/}\n              {/*marker: event.target.value*/}\n            {/*});*/}\n          {/*}}*/}\n          {/*InputProps={{*/}\n            {/*style: { color: \"white\" }*/}\n          {/*}}*/}\n        {/*>*/}\n          {/*{Object.values(this.props.allOperators).map(operator => (*/}\n            {/*<MenuItem key={operator.label} value={operator.label} selected>*/}\n              {/*{operator.label}*/}\n            {/*</MenuItem>*/}\n          {/*))}*/}\n        {/*</TextField>*/}\n\n        <OperatorsList/>\n\n        <div className={classes.middle}>\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.formControl}\n          >\n            <RadioGroup\n              aria-label=\"status\"\n              name=\"status\"\n              className={classes.group}\n              value={this.props.currentStatus}\n              onChange={event => {\n                this.props.setCurrentSelectionStatusStatus({\n                  editFieldStatus: true,\n                  value          : event.target.value,\n                  statusValue    : event.target.value\n                });\n              }}\n            >\n              <FormControlLabel\n                value=\"unplanned\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"#FAFAFA\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"#FAFAFA\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Unplanned</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"planned\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"red\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"red\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Planned</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"started\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"#FFC107\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"#FFC107\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Started</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"completed\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"#76FF03\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"#76FF03\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Completed</Typography>\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          {editField}\n        </div>\n        {datePicker}\n      </form>\n    );\n  } //renderRadioButtonGroup\n\n  renderHeaderItem() {\n    const { classes } = this.props;\n\n    if (this.props.bottomMenu === \"operations\") {\n      let headerText = \"Add New Operation\";\n      return (\n        <div\n          className={classes.drawerHeader}\n          tabIndex={0}\n          role=\"banner\"\n          onClick={() => {\n            this.props.cancelNewOperation({});\n          }}\n          onKeyDown={() => {\n            this.props.cancelNewOperation({});\n          }}\n        >\n          <div>{headerText}</div>\n          <div className={classes.menuButton}>\n            <IconButton\n              aria-label=\"clear drawer\"\n              className={classes.menuButton}\n              onClick={ () => {this.props.handleOperatorMenuClose({});}}\n            >\n              <ArrowDropDown />\n            </IconButton>\n          </div>\n        </div>\n      );\n    } else {\n      if (this.props.bottomMenu === \"status-update\") {\n        let headerText =\n          \"Updating status for operation [\" +\n          this.props.currentOperationLabel + \"] on field \" + this.props.currentFieldLabel;\n        return (\n          <div\n            className={classes.drawerHeader}\n            tabIndex={0}\n            role=\"banner\"\n            onClick={() => {\n               this.props.cancelStatusChange({});\n               this.props.resetCurrentSelectionStatus({});\n            }}\n            onKeyDown={() => {}}\n          >\n            <div>{headerText}</div>\n            <div>\n              <IconButton\n                aria-label=\"clear drawer\"\n                className={classes.menuButton}\n                onClick={ () => {\n                  this.props.handleOperatorMenuClose({});\n                  this.props.resetCurrentSelectionStatus({});\n                }}\n              >\n                <ArrowDropDown />\n              </IconButton>\n            </div>\n          </div>\n        );\n      }\n    }\n  } //renderHeaderItem\n\n  render() {\n    //const { classes } = this.props;\n    //const datePicker = this.renderDatePicker({});\n    const header_item = this.renderHeaderItem({});\n    const add_operation_form = this.renderAddOperationForm({});\n    //const add_field_form = this.renderAddFieldForm({});\n    const status_radio_buttons = this.renderRadioButtonGroup({});\n\n    return (\n      <Drawer\n        anchor=\"bottom\"\n        open={this.props.bottomDrawerOpen}\n        onClose = {() => {this.props.resetCurrentSelectionStatus({});}}\n      >\n        {header_item}\n        {this.props.bottomMenu === \"status-update\"\n          ? status_radio_buttons\n          : this.props.bottomMenu === \"operations\"\n          ? add_operation_form\n          : null}\n      </Drawer>\n    );\n  }\n}\n\nBottomDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    bottomDrawerOpen:                   state`BottomDrawer.open`,\n    bottomMenu:                         state`BottomDrawer.menu`,\n    operatorMenuOpen:                   state`BottomDrawer.operatorMenuOpen`,\n    currentStatus:                      state`User.currentSelection.status.status`,\n    currentTimestamp:                   state`User.currentSelection.status.timestamp`,\n    allOperators:                       state`User.accessibleUsers`,\n    currentFieldLabel:                  state`fields.records.${state`fields.selectedId`}.name`,\n    currentOperationLabel:              state`operations.records.${state`User.currentSelection.operation.id`}.label`,\n    newOperationName:                   state`User.currentSelection.operation.inputText`,\n    disabledNewOperation:               state`User.currentSelection.operation.disabled`,\n\n    setCurrentSelectionStatusStatus:    signal`User.setCurrentSelectionStatusStatus`,\n    setCurrentSelectionStatusTimestamp: signal`User.setCurrentSelectionStatusTimestamp`,\n    resetCurrentSelectionStatus:        signal`User.resetCurrentSelectionStatus`,\n    addNewOperation:                    signal`User.addNewOperation`,\n    setDisabledNewOperation:            signal`User.setDisabledNewOperation`,\n    cancelNewOperation:                 signal`User.cancelNewOperation`,\n    cancelStatusChange:                 signal`User.cancelStatusChange`,\n    handleOperatorMenuOpen:             signal`BottomDrawer.handleOperatorMenuOpen`,\n    handleOperatorMenuClose:            signal`BottomDrawer.handleOperatorMenuClose`,\n    handleBottomDrawerOpen:             signal`BottomDrawer.handleDrawerOpen`,\n    handleBottomDrawerClose:            signal`BottomDrawer.handleDrawerOpen`,\n    newOperationNameTyped:              signal`AutocompleteSearch.operationInputTyped`,\n    editFieldClicked:                   signal`AutocompleteSearch.handleFieldEdited`\n  },\n  withStyles(styles, { withTheme: true })(BottomDrawer)\n);\n","import React from \"react\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { TextField, Button } from \"material-ui\";\n\nconst styles = theme => ({\n  title: {\n    //backgroundColor: \"#3F52B5\"\n  },\n  drawerHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 2,\n    alignItems: \"center\",\n    backgroundColor: \"#3f51b5\",\n    color: \"white\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    padding: \"10px\"\n  },\n  hide: {\n    display: \"none\"\n  },\n  editFieldButtons: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  editFieldText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    height: \"128px\"\n  },\n  editFieldDrawerBottom: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  },\n  editFieldDrawer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    order: 3,\n    alignItems: \"center\"\n  },\n  textField: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    //marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 0.25,\n    minWidth: \"200px\",\n    width: \"20%\",\n    color: \"#FAFAFA\",\n    rightPadding: 10\n  }\n});\n\nclass EditFieldDrawer extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.editFieldDrawer}>\n        <div className={classes.drawerHeader}>\n          <label htmlFor=\"Instructions\">\n            {\"(1) Enter names (2) Draw field on the map (3) Save\"}\n          </label>\n        </div>\n        <div className={classes.editFieldDrawerBottom}>\n          <div className={classes.editFieldText}>\n            <TextField\n              label=\"Field name\"\n              placeholder={`e.g., \"Baker 135\"...`}\n              value={this.props.fieldText}\n              onChange={evt =>\n                this.props.fieldTextChanged({ value: evt.target.value })\n              }\n            />\n            <TextField\n              label=\"Farm Name\"\n              placeholder={`e.g., \"Baker\"`}\n              type=\"farm\"\n              value={this.props.farmText}\n              onChange={evt =>\n                this.props.farmTextChanged({ value: evt.target.value })\n              }\n            />\n          </div>\n          <div className={classes.editFieldButtons}>\n            <Button\n              className={classes.editFieldButton}\n              variant=\"raised\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.saveEdited({ confirm: true });\n              }}\n              disabled={this.props.disabledNewField}\n            >\n              Save\n            </Button>\n            <Button\n              className={classes.editFieldButton}\n              variant=\"raised\"\n              color=\"secondary\"\n              onClick={() => {\n                this.props.cancelNewField();\n              }}\n            >\n              Discard\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    fieldText: state`fields.new_field.name`,\n    farmText: state`fields.new_field.farm.name`,\n    fields: state`fields.records`,\n    fieldSuggestionsOpen: state`fields.new_field.field.suggestionsOpen`,\n    farmSuggestionsOpen: state`fields.new_field.farm.suggestionsOpen`,\n    fieldId: state`fields.new_field.id`,\n    farmId: state`fields.new_field.farm.id`,\n\n    addFieldClicked: signal`User.addFieldClicked`,\n    addFarmClicked: signal`User.addFarmClicked`,\n    disabledNewField: state`User.currentSelection.field.newFieldDisabled`,\n    editFieldClicked: signal`AutocompleteSearch.handleFieldEdited`,\n    fieldCleared: signal`User.handleFieldCleared`,\n    farmCleared: signal`User.handleFarmCleared`,\n    fieldTextChanged: signal`fields.fieldTextChanged`,\n    farmTextChanged: signal`fields.farmTextChanged`,\n    saveEdited: signal`fields.saveEditedField`,\n    cancelNewField: signal`fields.cancelNewField`\n  },\n  withStyles(styles, { withTheme: true })(EditFieldDrawer)\n);\n","import React from \"react\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport MenuBar from \"../MenuBar\";\nimport Connections from \"../Connections\";\nimport SideDrawer from \"../SideDrawer\";\nimport MapPanel from \"../MapPanel\";\nimport BottomDrawer from \"../BottomDrawer\";\nimport EditFieldDrawer from \"../EditFieldDrawer\";\n// import StatsBar from \"../StatsBar\";\nimport Operators from \"@oada/operators-module/Drawer\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    marginTop: theme.spacing.unit * 0,\n    zIndex: 1\n  },\n  app: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    zIndex: 1,\n    top: 0\n  },\n  statsBar: {\n    display: 'flex',\n    order: 3\n  }\n});\n\n/**\n *\n */\nclass App extends React.Component {\n  updateDimensions() {\n    this.props.windowResized({ width: window.innerWidth, height: window.innerHeight});\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    this.updateDimensions();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillMount() {\n    this.props.init({});\n    this.props.loadFieldListData({ switchTab: 0 });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.app}>\n        <MenuBar />\n        <Connections />\n        <SideDrawer />\n        <MapPanel />\n        <BottomDrawer />\n        {(!this.props.operatorEditing && this.props.fieldEditing) ? <EditFieldDrawer /> : null}\n        {(!this.props.fieldEditing && this.props.operatorEditing) ? <Operators /> : null}\n        {/*<StatsBar className={classes.statsBar}/>*/}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    fieldEditing:      state`fields.editing`,\n    operatorEditing:   state`operators.editing`,\n    window:            state`window`,\n    menuListOpen:      state`MenuList.open`,\n\n    windowResized:     signal`window.resized`,\n    init:              signal`App.init`,\n    loadFieldListData: signal`FldList.loadData`,\n  },\n  withStyles(styles, { withTheme: true })(App)\n);\n","let overrides = require('./config.dev.js').default;\n\n//----------- Define default configs here ----------\n\nexport const title = 'FieldWorkApp';\nexport const scope = 'oada.awesome:all';\nconst defaults = {\n\tscope,\n  title,\n};\n\n//--------------------------------------------------\nif (process.env.REACT_APP_PROD_DEV) {\n  overrides = require('./config.prod-dev.js').default;\n} else if (process.env.NODE_ENV === 'production') {\n  overrides = require('./config.prod.js').default;\n}\n\nlet toExport =  {...defaults, ...overrides};\n\nexport const oadaDomain = toExport.oadaDomain;\nexport const websiteDomain = toExport.websiteDomain;\nexport const redirect = toExport.websiteDomain + '/oauth2/redirect.html';\nexport const metadata = toExport.metadata;\nexport const devtoolsPort = toExport.devtoolsPort;\nexport const defaultNewConnectionURL = toExport.defaultNewConnectionURL;\nexport const appName = toExport.appName;\nexport const contentType = toExport.contentType;\nexport const bookmarksOperations = toExport.bookmarksOperations;\nexport const bookmarksFields = toExport.bookmarksFields;\n\nexport default toExport;\n","import {appName, contentType, bookmarksOperations, bookmarksFields} from '../../config';\n\nlet stateTree = {\n  appName: appName,\n  contentType: contentType,\n  bookmarksOperations: bookmarksOperations,\n  bookmarksFields: bookmarksFields,\n\tmodel: {tags: {}},\n  is_mobile: false,\n\temptyDataSet: false,\n  settings: {},\n  view: {\n    editing: false,\n    settings: {},\n  }\n};\n\nexport default stateTree;\n","import {state, props} from 'cerebral/tags'\nimport {set} from 'cerebral/operators'\n\nexport var handleChange = [\n  set(state`DataTabs.value`, props`value`),\n];\n\nexport var handleChangeIndex = [\n  handleTabChangeIndex,\n];\n\nexport var toggleTab = [\n  toggleTabX,\n];\n\nexport function handleTabChange({ props, state }) {\n    console.log('valueX', props.value);\n\tstate.set(`DataTabs.value`, props.value || 1);\n}\n\nfunction handleTabChangeIndex({props, state}) {\n\tstate.set(`DataTabs.value`, props.index);\n}\n\nfunction toggleTabX({props, state}) {\n\tstate.set(`DataTabs.value`, 1 * (!(1 * state.get(`DataTabs.value`))));\n}\n\n","import { handleChange as dataTabsHandleChange } from '../DataTabs/chains';\n\nexport var loadData = [\n\tfloadData,\n\tdataTabsHandleChange,\n];\n\nexport var clearData = [\n\tfclearData,\n];\n\nfunction handleCollapseAction({ props, state }) {\n    state.toggle(`${'OpsList.' + props.status + '.collapse'}`);\n}\n\nexport var handleCollapse = [\n\thandleCollapseAction,\n];\n\nfunction floadData({ props, state }) {\n\tconst opid = state.get('User.currentSelection.operation.id');\n\tlet fields = [];\n\tif (!(!opid)) {\n\t\tfields = Object.values(state.get(`${'operations.records.' + opid + '.fields'}`));\n\t}\n\tObject.keys(state.get('OpsList') || {}).map(status => {\n\t\tstate.set(\n\t\t\t`${'OpsList.' + status + '.fields'}`,\n\t\t\tfields.filter(field => (field.status === status)).map(fieldStub => {\n\t\t\t\treturn {'since': fieldStub['history'] ? fieldStub['history'][0]['timestamp'] : \"\",\n\t\t\t\t\t\t'by': fieldStub['history'] ? fieldStub['history'][0]['marker'] : \"\",\n                        'id': fieldStub['id'] ? fieldStub['id'] : \"\",\n\t\t\t\t\t\t...state.get(`fields.records.${fieldStub['id']}`)};\n\t\t\t})\n\t\t);\n\t});\n\treturn {value: 0};\n}\n\nfunction fclearData({props, state}) {\n\tObject.keys(state.get('OpsList')).map(status => {\n\t\tstate.set(`${'OpsList.' + status + '.fields'}`, []);\n\t});\n}\n","function handleUpdateAction({ props, state }) {\n    //let operationStatus = props.operationStatus || \"completed\";\n    let _opsList = state.get('OpsList');\n    let totalArea = Object.keys(_opsList || {}).map(\n          key => {\n            return _opsList[key]['fields'].reduce((a, b) => {\n                return a + (b.boundary ? b.boundary.area : 0)}, 0)\n        }).reduce((a, b) => {return a + b}, 0);\n    for(let operationStatus in _opsList){\n        const area = _opsList[operationStatus]['fields'].reduce((a, b) => {return a + (b.boundary ? b.boundary.area : 0)}, 0);\n        const percent = (totalArea ? Math.round(( area/totalArea + 0.00001) * 10000) / 100 : 0);\n        const totalFields = _opsList[operationStatus]['fields'] ? _opsList[operationStatus]['fields'].length : 0;\n        state.set(`OpsList.${operationStatus}.area`, area.toFixed(2));\n        state.set(`OpsList.${operationStatus}.percentage`, percent.toFixed(2));\n        state.set(`OpsList.${operationStatus}.totalFields`, totalFields);\n    }//for\n\n}\n\nexport var statsBarHandleUpdate = [\n    handleUpdateAction,\n];\n","import { sequence } from \"cerebral\";\nimport { set, when, equals } from \"cerebral/operators\";\nimport { state, props } from \"cerebral/tags\";\nimport Promise from \"bluebird\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport { loadData as loadOpsLstData } from \"../OpsList/chains\";\nimport { statsBarHandleUpdate } from \"../StatsBar/chains\";\n\n//import {putFarm} from \"../fields/sequences\";\n/* Configuration values */\nlet _localPath = \"/bookmarks/operations\";\nlet _TYPE = \"application/vnd.oada.yield.1+json\";\n/* Tree that resembles the data model for operations module */\nlet tree = {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    operations: {\n      _type: \"application/vnd.oada.yield.1+json\",\n      _rev: \"0-0\",\n      \"*\": {\n        _type: \"application/vnd.oada.yield.1+json\",\n        _rev: \"0-0\"\n      }\n    }\n  }\n};\n\n/**\n * fetches the operation\n * @type {Primitive}\n */\nexport const fetch = sequence(\"operations.fetch\", [\n  ({ state, props }) => ({\n    connection_id: state.get(\"operations.connection_id\"),\n    path: _localPath,\n    tree,\n    watch: { signals: [\"operations.handleWatchUpdate\"] }\n  }),\n  buildFetchRequest,\n  oada.get,\n  when(state`oada.${props`connection_id`}.bookmarks.operations`),\n  {\n    true: sequence(\"fetchOperationsSuccess\", [\n      mapOadaToOperations,\n      mapOperations,\n      loadOpsLstData,\n      statsBarHandleUpdate,\n      set(state`App.emptyDataSet`, false),\n    ]),\n    false: sequence(\"fetchOperationsEmptySet\", [\n      () => (\n        console.log(\"--> Operations empty set\")\n      ),\n      set(state`App.emptyDataSet`, true),\n    ]),\n\n  }\n]);\n\n/**\n * builds requests in the expected format in the cerebral-module\n * @param state\n * @returns {{requests: *[]}}\n */\nfunction buildFetchRequest({ state }) {\n  let requests = [\n    {\n      connection_id: state.get(\"operations.connection_id\"),\n      path: _localPath,\n      tree,\n      watch: { signals: [\"operations.handleWatchUpdate\"] }\n    }\n  ];\n  return { requests };\n}\n\nexport const fetchNoWatch = sequence(\"operations.fetchNoWatch\", [\n  ({ state, props }) => ({\n    connection_id: state.get(\"operations.connection_id\"),\n    path: _localPath,\n    tree\n  }),\n  //oada.get,\n  when(state`oada.${props`connection_id`}.bookmarks.operations`),\n  {\n    true: sequence(\"fetchOperationsSuccess\", [\n      mapOadaToOperations,\n      mapOperations,\n      loadOpsLstData,\n      statsBarHandleUpdate,\n      set(state`App.emptyDataSet`, false),\n    ]),\n    false: sequence(\"fetchOperationsEmptySetNoWatch\", [\n      () => (\n        console.log(\"--> Operations empty set no watch\")\n      ),\n      set(state`App.emptyDataSet`, true),\n    ])\n  }\n]);\n\n/**\n * requests the operation creation to the OADA module\n * @type {*[]}\n */\nexport const addBookmarksOperations = sequence(\n  \"operations.addBookmarksOperations\",\n  [buildBookmarksOperationsRequest, oada.put, fetch]\n);\n\n/**\n * Initialize the operations module\n * @type {Primitive}\n */\nexport const init = sequence(\"operations.init\", [\n  getConnectionsFromStorage,\n  when(state`Connections.connection_id`),\n  {\n    true: [oada.connect],\n    false: [\n      oada.connect,\n      set(state`operations.connection_id`, props`connection_id`),\n      set(state`Connections.connection_id`, props`connection_id`),\n      set(state`connections.operations.connection_id`, props`connection_id`)\n    ]\n  },\n  //\n  set(state`operations.loading`, true),\n  fetch,\n  when(state`oada.${props`connection_id`}.bookmarks.operations`),\n  {\n    true: [],\n    false: [\n      //addBookmarksOperations,\n      //set(state`InfoBar.operations.open`, true)\n    ]\n  },\n  set(state`operations.loading`, false),\n  set(props`type`, \"operations\")\n]);\n\n/**\n * gets the Connections from localCache, it updates all necessary state to auto-init the app\n * @param state\n */\nfunction getConnectionsFromStorage({ state }) {\n  let connections = JSON.parse(\n    localStorage.getItem(\"_FieldWorkApp.Connections\")\n  );\n  console.log(\"--> operations.init storage connections --> \", connections);\n  if (connections && connections[\"connection_id\"]) {\n    state.set(\"Connections.show\", false);\n    let connectionId = connections[\"connection_id\"];\n    let oadaDomain = connections[\"oada_domain\"];\n    console.log(\n      \"--> operations init connectionId and OadaDomain\",\n      connectionId,\n      oadaDomain\n    );\n    state.set(`operations.connection_id`, connectionId);\n    state.set(\"Connections.oada_domain\", oadaDomain);\n    state.set(\"Connections.oada_domain_text\", oadaDomain);\n  }\n}\n\n/**\n * refresh the operations module\n * when handling updates/watches\n * @type {Primitive}\n */\nexport const refresh = sequence(\"operations.refresh\", [\n  set(state`operations.connection_id`, props`connection_id`),\n  set(state`operations.loading`, true),\n  fetchNoWatch,\n  set(state`operations.loading`, false),\n  set(props`type`, \"operations\")\n]);\n\n/**\n * Handles updates in the resource\n * @type {*[]}\n */\nexport const handleWatchUpdate = sequence(\"operations.handleWatchUpdate\", [\n  () => {console.log(\"-->operations.handleWatchUpdate\");},\n  refresh,\n  statsBarHandleUpdate\n]);\n\nexport const selectOperation = [];\n\n/**\n * Maps operations records\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToOperations({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n  let operations = state.get(\"oada.\" + connection_id + \".bookmarks.operations\");\n\n  if (operations) {\n    return Promise.map(Object.keys(operations || {}), operation => {\n      if (operation[0] !== \"_\" && operation !== \"operations\") {\n        let op = state.get(\n          `oada.${connection_id}.bookmarks.operations.${operation}`\n        );\n        if (op && op.id) {\n          let currentOperationID = state.get(\n            \"User.currentSelection.operation.id\"\n          );\n          state.set(\"User.operations.\" + operation, { id: op.id });\n          if (!currentOperationID) {\n            // setting default operation (if there is not one)\n            state.set(\"User.currentSelection.operation.id\", op.id);\n            state.set(\"User.currentSelection.operation.inputText\", op.label);\n            state.set(\n              \"User.currentSelection.operation.placeholder\",\n              \"Operation\"\n            );\n          }\n          state.set(`operations.records.${operation}`, operations[operation]);\n        }\n        return;\n      }\n    }).then(() => {\n      return;\n    });\n  }\n} //mapOadaToOperations\n\n/**\n *\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOperations({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n  let operations = state.get(\"oada.\" + connection_id + \".bookmarks.operations\");\n\n  if (operations) {\n    return Promise.map(Object.keys(operations || {}), operation => {\n      if (operation[0] !== \"_\" && operation !== \"operations\") {\n        let op = state.get(\n          `oada.${connection_id}.bookmarks.operations.${operation}`\n        );\n        if (op && op.id) {\n          state.set(`operations.records.${operation}`, operations[operation]);\n        }\n        return;\n      }\n    }).then(() => {\n      return;\n    });\n  }\n} //mapOperations\n\n/**\n * creates new operation payload\n * @param props\n * @param state\n * @returns {{id: *, operation: {created: number, id: *, text: string, tags: Array, fields: *, label: *,\n *             idh: *, geometry: {visible: boolean}, data, stats: {}}, uuid: *}}\n */\nfunction createOperation({ props, state }) {\n  let operation = {\n    created: Date.now(),\n    id: props.item.id, //UUID\n    fields: props.item.fields || {},\n    label: props.item.label\n  };\n  return { id: operation.id, operation, uuid: operation.id };\n}\n\n/**\n * Creates request to send to the oada-server\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: *}}\n */\nfunction createOperationRequest({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n\n  let request = {\n    connection_id: connection_id,\n    data: props.operation,\n    path: _localPath + \"/\" + props.operation.id,\n    tree\n  };\n\n  let requests = [];\n  requests.push(request);\n  return {\n    connection_id: connection_id,\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\n/**\n * requests the operation creation to the OADA module\n * @type {*[]}\n */\nexport const addOperation = [\n  createOperation,\n  createOperationRequest,\n  oada.put,\n  fetchNoWatch\n];\n\n/**\n * Creates request to change/update the resource in the oada-server\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: string}}\n */\nfunction buildBookmarksOperationsRequest({ props, state }) {\n  let request = {\n    connection_id: state.get(\"operations.connection_id\"),\n    data: {},\n    type: _TYPE,\n    path: _localPath,\n    tree\n  };\n\n  let requests = [];\n\n  requests.push(request);\n\n  return {\n    connection_id: state.get(\"operations.connection_id\"),\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\n/**\n * Creates request to change/update the resource in the oada-server\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: string}}\n */\nfunction buildUpdateRequest({ props, state }) {\n  let operation_payload = state.get(\n    `${\"operations.records.\" + state.get(\"User.currentSelection.operation.id\")}`\n  );\n\n  let request = {\n    connection_id: state.get(\"operations.connection_id\"),\n    data: operation_payload,\n    type: _TYPE,\n    path: _localPath + \"/\" + state.get(\"User.currentSelection.operation.id\"),\n    tree\n  };\n\n  let requests = [];\n\n  requests.push(request);\n\n  return {\n    connection_id: state.get(\"operations.connection_id\"),\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\n/**\n * delete request\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: string}}\n */\nfunction buildDeleteRequest({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n  let request = {\n    connection_id: connection_id,\n    type: _TYPE,\n    path:\n      _localPath +\n      \"/\" +\n      state.get(\"User.currentSelection.operation.id\") +\n      \"/fields/\" +\n      state.get(\"fields.selectedId\")\n    //tree\n  };\n\n  let requests = [];\n  requests.push(request);\n\n  return {\n    connection_id: connection_id,\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\nexport const putFieldOperation = [buildUpdateRequest, oada.put];\n\nfunction updateOperationFieldState({ props, state }) {\n  state.unset(\n    `${\"operations.records.\" +\n      state.get(\"User.currentSelection.operation.id\") +\n      \".fields.\" +\n      state.get(\"fields.selectedId\")}`\n  );\n}\n\nexport const deleteFieldOperation = [\n  buildDeleteRequest,\n  oada.delete,\n  updateOperationFieldState\n];\n\n/**\n * actual sequence to update operation resource\n * @type {*[]}\n */\nexport const updateOperation = [\n  equals(props`statusValue`),\n  {\n    unplanned: [deleteFieldOperation],\n    otherwise: [putFieldOperation]\n  }\n];\n\n/**\n * Handles updates in the fields\n * @type {*[]}\n */\nexport const handleFieldUpdate = [\n  updateOperation\n];\n","\nexport var loadData = [\n\tloadDataAction,\n\t//...dataTabsHandleChange,\n];\n\nexport var handleCollapse = [\n\thandleCollapseAction,\n];\n\nexport var handleChronologyCollapse = [\n\thandleChronologyCollapseAction,\n];\n\nfunction handleCollapseAction({ props, state }) {\n\tstate.toggle(`${'FldList.' + props.field_id + '.operations.' + props.operation_id + '.collapse'}`);\n}\n\nfunction handleChronologyCollapseAction({props, state}) {\n\tstate.toggle(`${'FldList.' + props.field_id + '.chronologyCollapse'}`);\n}\n\nfunction loadDataAction({ props, state }) {\n\tif (!(state.get('fields.editing'))) {\n\t\tconst all_fields = Object.keys(state.get('fields.records'));\n\n\t\tall_fields.map(fld_id => {\n            let operationsRecords = state.get(`${'operations.records'}`);\n\t\t\tif( operationsRecords )\n\t\t\tstate.set(`${'FldList.' + fld_id + '.operations'}`,\n\t\t\t\tObject.values(operationsRecords || {}).filter(operationRecord => {\n\t\t\t\t\treturn operationRecord.hasOwnProperty('fields') && operationRecord.fields.hasOwnProperty(fld_id)\n\t\t\t\t}).reduce((obj, operation) => {obj[operation.id] = {'id': operation.id, 'collapse': true}; return obj}, {})\n\t\t\t);\n\t\t});\n\n\t\tif (props.switchTab) {\n\t\t\treturn {value: props.switchTab}\n\t\t} else {\n\t\t\treturn {value: 1}\n\t\t}\n\t} else {\n\t\treturn {value: 2}\n\t}\n}\n","import { set } from \"cerebral/operators\";\nimport { state } from \"cerebral/tags\";\nimport gjArea from \"@mapbox/geojson-area\";\nimport { validateNewFieldButton } from \"../fields/sequences\";\n\nexport var startMovingMap = [set(state`MapPanel.moving`, true)];\n\nexport var doneMovingMap = [set(state`MapPanel.moving`, false)];\n\nexport var handleMapClick = [\n  dropPoint,\n  recalculateArea,\n  getFieldBoundingBox,\n  validateNewFieldButton\n];\n\nexport var handleLocationFound = [setCurrentLocation];\n\nexport var undoDrawPoint = [undo, recalculateArea, getFieldBoundingBox];\n\nexport var endMarkerDrag = [set(state`MapPanel.dragging_marker`, false)];\n\nexport var startMarkerDrag = [set(state`MapPanel.dragging_marker`, true)];\n\nexport var markerDragging = [\n  setMarkerPosition,\n  recalculateArea,\n  getFieldBoundingBox\n];\n\nexport var handleCurrentLocationButton = [setMapToCurrentLocation];\n\nexport var handleMapMoved = [setMapLocation];\n\nexport var setFieldOnMapCenter = [mapToFieldPolygon];\n\nexport var deleteCoordinate = [\n  deleteCoordinateAction,\n  recalculateArea,\n  getFieldBoundingBox\n];\n\nfunction deleteCoordinateAction({ props, state }) {\n  //let id = state.get(\"fields.selectedId\");\n  let tempObject = state.get(`fields.new_field`);\n  if (tempObject.boundary.geojson.coordinates[0].length > props.index) {\n    tempObject.boundary.geojson.coordinates[0].splice(props.index, 1);\n    state.set(`fields.new_field`, tempObject);\n  }\n}\n\nfunction setMapToCurrentLocation({ state }) {\n  let loc = state.get(\"MapPanel.current_location\");\n  if (loc) state.set(\"MapPanel.center\", [loc.lat, loc.lng]);\n}\n\nfunction setMapLocation({ props, state }) {\n  state.set(\"MapPanel.center\", [props.latlng.lat, props.latlng.lng]);\n  state.set(\"MapPanel.zoom\", props.zoom);\n}\n\nfunction setCurrentLocation({ props, state }) {\n  let obj = {\n    lat: props.lat,\n    lng: props.lng\n  };\n  state.set(\"MapPanel.current_location\", obj);\n}\n\n/*function handleFieldPolygonClicked({props, state}) {\n//  state.set('fields.new_field.id', props.field_id);\n  const field = state.get(`fields.records.${props.field_id}`);\n  state.set('fields.new_field.id', field.id);\n  state.set('fields.new_field.inputText', field.label);\n  state.set('fields.new_field.suggestionsOpen', false);\n  state.set('fields.new_field.tempObject', state.get(`${'fields.' + field.id}`));\n  delete props.field_id;\n  return {item: field};\n}*/\n\nfunction setMarkerPosition({ props, state }) {\n  //let id = state.get(`fields.selectedId`);\n  state.set(`fields.new_field.boundary.geojson.coordinates.0.${props.idx}`, [\n    props.lng,\n    props.lat\n  ]);\n}\n\nfunction validateFieldCoordinates({ state }) {\n  //let id = state.get(`fields.selectedId`);\n  let field = state.get(`fields.new_field`);\n  //console.log(\"--> validating field coordinates\");\n\n  if (\n    field.boundary.geojson &&\n    field.boundary.geojson.coordinates[0].length > 2\n  ) {\n    state.set(\"User.currentSelection.field.coordinatesOk\", true);\n  } else {\n    state.set(\"User.currentSelection.field.newFieldDisabled\", true);\n    state.set(\"User.currentSelection.field.coordinatesOk\", false);\n  }\n}\n\nfunction recalculateArea({ state }) {\n  //let id = state.get(`fields.selectedId`);\n  let field = state.get(`fields.new_field`);\n  let area = 0.0;\n  if (\n    field.boundary.geojson &&\n    field.boundary.geojson.coordinates[0].length > 2\n  ) {\n    area = gjArea.geometry(field.boundary.geojson) / 4046.86;\n  }\n  state.set(`fields.new_field.boundary.area`, area);\n\n  validateFieldCoordinates({ state });\n}\n\nfunction undo({ props, state }) {\n  //let id = state.get(\"fields.selectedId\");\n  let points = state.get(`fields.new_field.boundary.geojson.coordinates.0`);\n  if (points.length > 0) {\n    state.pop(`fields.new_field.boundary.geojson.coordinates.0`);\n  }\n}\n\nfunction mapToFieldPolygon({ state }) {\n  // let id = state.get(\"fields.selectedId\");\n  // console.log(\"--> selectedId\", id);\n  // if (!state.get(\"fields.editing\")) {\n  //   let field = state.get(`fields.new_field`);\n  //   if (field) {\n  //     state.set(\"MapPanel.center\", field.boundary.centroid);\n  //   }\n  // }\n  let id = state.get(\"fields.selectedId\");\n  if (!state.get(\"fields.editing\")) {\n    let field = state.get(`fields.records.${id}`);\n    if (field && field.boundary && field.boundary.centroid) {\n      state.set(\"MapPanel.center\", field.boundary.centroid);\n    }\n  }\n}\n\nfunction getFieldBoundingBox({ props, state }) {\n  //let id = state.get(\"fields.selectedId\");\n  let bbox = computeBoundingBox(state.get(`fields.new_field.boundary.geojson`));\n  let c1 = null;\n  let c2 = null;\n  if (!!bbox) {\n    c1 = (bbox.north + bbox.south) / 2;\n    c2 = (bbox.east + bbox.west) / 2;\n  }\n  state.set(`fields.new_field.boundary.bbox`, bbox);\n  state.set(`fields.new_field.boundary.centroid`, [c1, c2]);\n}\n\nfunction dropPoint({ props, state }) {\n  //let id = state.get(\"fields.selectedId\");\n  state.push(`fields.new_field.boundary.geojson.coordinates.0`, props.pt);\n}\n\nfunction computeBoundingBox(geojsonPolygon) {\n  let coords = geojsonPolygon.coordinates[0];\n  if (coords.length > 0) {\n    let north = coords[0][1];\n    let south = coords[0][1];\n    let east = coords[0][0];\n    let west = coords[0][0];\n    for (let j = 0; j < coords.length; j++) {\n      if (coords[j][1] > north) north = coords[j][1];\n      if (coords[j][1] < south) south = coords[j][1];\n      if (coords[j][0] > east) east = coords[j][0];\n      if (coords[j][0] < west) west = coords[j][0];\n    }\n    let bbox = { north, south, east, west };\n    return bbox;\n  } else {\n    return null;\n  }\n}\n","import { toggle, set } from \"cerebral/operators\";\nimport { state } from \"cerebral/tags\";\n\nexport var handleDrawerOpen = [toggle(state`BottomDrawer.open`)];\n\nexport var openBottomDrawerForStatusUpdate = [\n  set(state`BottomDrawer.menu`, \"status-update\"),\n  set(state`BottomDrawer.open`, true)\n];\n\nexport var handleOperatorMenuOpen = [\n  set(state`BottomDrawer.operatorMenuOpen`, true)\n];\n\nexport var handleOperatorMenuClose = [\n  set(state`BottomDrawer.operatorMenuOpen`, false)\n];\n","import { unset, set, when } from \"cerebral/operators\";\nimport { state, props } from \"cerebral/tags\";\nimport Promise from \"bluebird\";\nimport uuid from \"uuid\";\nimport { loadData as loadFldData } from \"../FldList/chains\";\nimport { setFieldOnMapCenter } from \"../MapPanel/chains\";\nimport { openBottomDrawerForStatusUpdate } from \"../BottomDrawer/chains\";\nimport { statsBarHandleUpdate } from \"../StatsBar/chains\";\nimport geojson_area from \"@mapbox/geojson-area\";\nimport centroid from \"@turf/centroid\";\nimport bbox from \"@turf/bbox\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport { sequence } from \"cerebral/index\";\nimport {loadData as loadOpsLstData} from \"../OpsList/chains\";\n/* internal local variables */\nconst _METERS_TO_ACRES = 0.000247105;\n\nlet tree = {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    fields: {\n      _type: \"application/vnd.oada.fields.1+json\",\n      _rev: \"0-0\",\n      \"fields-index\": {\n        \"*\": {\n          _type: \"application/vnd.oada.field.1+json\",\n          _rev: \"0-0\",\n          \"fields-index\": {\n            \"*\": {\n              _type: \"application/vnd.oada.field.1+json\",\n              _rev: \"0-0\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport var addFieldClicked = [\n  addNewField,\n  validateNewFieldButton,\n  ...loadFldData,\n  setCurrentField,\n  resetCurrentSelectionStatus,\n  set(state`fields.editing`, true),\n  set(state`fields.isNewField`, true)\n];\n\nexport var handleFieldPolygonClicked = [\n  setCurrentField,\n  setStatusMarkerCurrentField,\n  resetCurrentSelectionStatus,\n  ...loadFldData,\n  ...setFieldOnMapCenter,\n  ...openBottomDrawerForStatusUpdate\n];\n\n/**\n * Maps fields records\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToFields({ props, state }) {\n  let connection_id = state.get(\"fields.connection_id\");\n  let curFields = state.get(\"fields.records\");\n\n  //console.log(\" ===== map oada to fields ===== \");\n\n  return Promise.map(Object.keys(curFields || {}), field => {\n    return state.unset(`fields.records.${field}`);\n  })\n    .then(() => {\n      let fields = state.get(`oada.${connection_id}.bookmarks.fields`);\n      if (fields) {\n        return Promise.map(\n          Object.keys(fields[\"fields-index\"] || {}),\n          fieldGroup => {\n            if (fields[\"fields-index\"][fieldGroup]) {\n              return Promise.map(\n                Object.keys(\n                  fields[\"fields-index\"][fieldGroup][\"fields-index\"] || {}\n                ),\n                field => {\n                  let field_object =\n                    fields[\"fields-index\"][fieldGroup][\"fields-index\"][field];\n                  let record = {\n                    id: field,\n                    name: field_object.name,\n                    farm: {\n                      id: fieldGroup,\n                      name: fields[\"fields-index\"][fieldGroup].name\n                    }\n                  };\n\n                  if (field_object.boundary) {\n                    let centroid_object = centroid(\n                      field_object.boundary.geojson\n                    );\n                    record.boundary = {\n                      geojson: field_object.boundary.geojson,\n                      area:\n                        geojson_area.geometry(field_object.boundary.geojson) *\n                        _METERS_TO_ACRES,\n                      centroid: centroid_object.geometry.coordinates.reverse(),\n                      bbox: bbox(field_object.boundary.geojson),\n                      visible: true\n                    };\n                  }\n\n                  return state.set(`fields.records.${field}`, record);\n                }\n              );\n            } else {\n              return;\n            }\n          }\n        );\n      } else return;\n    })\n    .then(() => {\n      return;\n    });\n}\n\n/**\n * Maps farms records (utilized to validate the existence of a farm)\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToFarms({ props, state }) {\n  let connection_id = state.get(\"fields.connection_id\");\n  let curFarms = state.get(\"fields.farms\");\n\n  //console.log(\" ---- map oada to farms ---- \");\n\n  return Promise.map(Object.keys(curFarms || {}), farm => {\n    return state.unset(`fields.farms.${farm}`);\n  })\n    .then(() => {\n      let fields = state.get(`oada.${connection_id}.bookmarks.fields`);\n      if (fields) {\n        return Promise.map(Object.keys(fields[\"fields-index\"] || {}), farm => {\n          if (\n            fields[\"fields-index\"][farm] &&\n            fields[\"fields-index\"][farm].name\n          ) {\n            let farm_object = fields[\"fields-index\"][farm];\n            let record = {\n              id: farm,\n              name: farm_object.name\n            };\n            return state.set(\n              `fields.farms.${fields[\"fields-index\"][farm].name}`,\n              record\n            );\n          } else {\n            return;\n          }\n        });\n      } else return;\n    })\n    .then(() => {\n      return;\n    });\n} //mapOadaToFarms\n\nexport const putFarm = [\n  ({ state, props }) => ({\n    data: {\n      _id: \"resources/\" + props.item.farm.id,\n      name: props.item.farm.name\n    }\n  }),\n  ({ props, state }) => ({\n    connection_id: state.get(\"operations.connection_id\"),\n    data: props.data,\n    path: `/bookmarks/fields/fields-index/${props.item.farm.id}`,\n    tree\n  }),\n  createFarmRequest,\n  oada.put\n];\n\n/**\n *\n * @param props\n * @param state\n * @returns {{connection_id: *, data: {id: null, placeholder: string, suggestionsOpen: boolean, name: string, disabled: boolean, editing: boolean, tempObject: null, newFieldDisabled: boolean}|state.currentSelection.field|{id, placeholder, suggestionsOpen, name, disabled, editing, tempObject, newFieldDisabled}|*|{_id: string, name: *, boundary: {geojson: {type: string, coordinates: Array[]}|boundary.geojson|{type, coordinates}}}|{id: *, label: *, boundary: {area: null, geojson: {type: string, coordinates: *[]}, bbox: null, centroid: *[], visible: boolean}}, path: string, tree: {bookmarks: {_type: string, _rev: string, fields: {_type: string, _rev: string, \"fields-index\": {\"*\": {_type: string, _rev: string, \"fields-index\": {\"*\": {_type: string, _rev: string}}}}}}}}}\n */\nfunction createFarmRequest({ props, state }) {\n  let data = {\n    _id: \"resources/\" + props.item.farm.id,\n    name: props.item.farm.name\n  };\n  let requests = [];\n  requests.push({\n    connection_id: state.get(\"operations.connection_id\"),\n    data,\n    path: `/bookmarks/fields/fields-index/${props.item.farm.id}`,\n    tree\n  });\n  return { requests };\n}\n\n/**\n * creates new field payload\n * @param props\n * @param state\n * @returns {{id: *, field: {created: number, id: *, text: string, tags: Array, fields: {},\n * boundary: {visible: boolean}, data, stats: {}}, uuid: *}}\n */\nfunction createField({ props, state }) {\n  let field = {\n    _id: \"resources/\" + props.item.id,\n    name: props.item.name,\n    boundary: { geojson: props.item.boundary.geojson }\n  };\n  return { id: props.item.id, field };\n}\n\nfunction createFieldRequest({ props, state }) {\n  let farmName = state.get(`fields.farms.${props.item.farm.name}`);\n  let farmId = props.item.farm.id;\n\n  if (farmName) {\n    farmId = state.get(`fields.farms.${props.item.farm.name}.id`);\n  }\n\n  let requests = [];\n\n  requests.push({\n    connection_id: state.get(\"operations.connection_id\"),\n    data: props.field,\n    path: `/bookmarks/fields/fields-index/${farmId}/fields-index/${props.id}`,\n    tree\n  });\n\n  return { requests };\n}\n\nexport var disableNewFieldButton = [\n  set(state`User.currentSelection.field.newFieldDisabled`, true),\n  set(state`User.currentSelection.field.coordinatesOk`, false)\n];\n\nexport const putField = [\n  createField,\n  createFieldRequest,\n  oada.put,\n  disableNewFieldButton\n];\n\nexport var handleFieldSelected = [\n  setCurrentField,\n  resetCurrentSelectionStatus,\n  //\t...loadFldData,\n  ...setFieldOnMapCenter\n];\n\nexport var handleFarmSelected = [\n  set(`field.records.${props`id`}.farm`, props`farm`)\n];\n\nexport var saveEditedField = [\n  //() => { console.log('--> fields.saveEditedfield #1') },\n  set(props`item`, state`fields.new_field`),\n  set(state`fields.editing`, false),\n  when(state`fields.farms.${props`item.farm.name`}`),\n  {\n    true: [],\n    false: [putFarm]\n  },\n  putField,\n  unset(state`fields.selectedId`),\n  set(state`fields.new_field`, {}),\n  unset(state`fields.temp_buffer`)\n];\n\nfunction setStatusMarkerCurrentField({ props, state }){\n  let operationId = state.get(`User.currentSelection.operation.id`);\n  let fieldId = state.get(`fields.selectedId`);\n  let status = state.get(`operations.records.${operationId}.fields.${fieldId}.status`);\n  let marker = state.get(`operations.records.${operationId}.fields.${fieldId}.history.0.marker`);\n  if(status)\n    state.set(`User.currentSelection.status.status`, status);\n\n  //console.log(\"--> operators.current \", marker);\n  if(marker) {\n    state.set(`operators.current`, marker);\n    state.set(`User.label`, marker);\n  }\n}\n\nexport function setCurrentField({ props, state }) {\n  state.set(\"fields.selectedId\", props.field.id);\n  if (!state.get(\"fields.editing\")) {\n    state.set(`fields.new_field.field.suggestionsOpen`, false);\n  }\n}\n\n/**\n * sets the current field to empty\n * @param props\n * @param state\n */\n// function clearCurrentField({ props, state }) {\n//   let id = state.get(\"fields.selectedId\");\n//   if (!state.get(\"fields.editing\")) {\n//     state.set(`fields.new_field`, {});\n//     state.set(`fields.editing`, false);\n//     state.set(\"User.currentSelection.status\", {\n//       status: null,\n//       marker: null,\n//       timestamp: null\n//     });\n//   }\n// }\n\n/**\n * Creates the template for the field record with a random UUID\n * @returns {{id: *, label: *, boundary: {area: null, geojson: {type: string, coordinates: *[]}, bbox: null, centroid: *[], visible: boolean}}}\n */\nfunction createFieldRecord() {\n  return {\n    id: uuid(),\n    name: \"\",\n    farm: {\n      name: \"\",\n      id: uuid()\n    },\n    boundary: {\n      geojson: {\n        type: \"Polygon\",\n        coordinates: [[]]\n      },\n      visible: true\n    }\n  };\n} //createFieldRecord\n\n/**\n *\n * @param props\n * @param state\n * @returns {{item: any}}\n */\nexport function addNewFarm({ props, state }) {\n  let _inputText = state.get(\"fields.new_field.farm.name\");\n  let farmRecord = createFieldRecord(_inputText);\n  state.set(`fields.selectedId`, farmRecord.id);\n  state.set(`fields.records.${farmRecord.id}`, farmRecord);\n\n  return { item: farmRecord };\n}\n\n/**\n *\n * @param props\n * @param state\n * @returns {{item: any}}\n */\nexport function addNewField({ props, state }) {\n  let _inputText = state.get(\"fields.new_field.field.name\");\n  let field = createFieldRecord(_inputText);\n  state.set(`fields.new_field`, field);\n\n  return { field };\n}\n\n/**\n * Generates a timestamp in the format 'YYYY-MM-DD'\n * @returns {string}\n */\nfunction timestamp() {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1; //January is 0!\n  let yyyy = today.getFullYear();\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  return yyyy + \"-\" + mm + \"-\" + dd;\n}\n\n/**\n * gets the current field status in the current operation\n * @param props\n * @param state\n * @returns {string}\n */\nfunction getCurrentOperationFieldStatus({ props, state }) {\n  let status = state.get(\n    `${\"operations.records.\" +\n      state.get(\"User.currentSelection.operation.id\") +\n      \".fields.\" +\n      state.get(\"fields.selectedId\") +\n      \".status\"}`\n  );\n  return status ? status : \"unplanned\";\n} //getCurrentOperationFieldStatus\n\n/**\n * resets the current field status in the current operation\n * @param props\n * @param state\n */\nfunction resetCurrentSelectionStatus({ props, state }) {\n  if (!state.get(\"fields.editing\")) {\n    let currentOperationFieldStatus = getCurrentOperationFieldStatus({\n      props,\n      state\n    });\n    if (currentOperationFieldStatus) {\n      state.set(\n        \"User.currentSelection.status.status\",\n        currentOperationFieldStatus\n      );\n    }\n    state.set(\"User.currentSelection.status.timestamp\", timestamp());\n    state.set(\"operators.current\", state.get(\"User.label\"));\n  } //if\n}\n\n/**\n * it verifies that farm and field have some value in the textbox\n * (it does not allow empty field's name or farm's name)\n * @param props\n * @param state\n */\nexport function validateNewFieldButton({ props, state }) {\n  let fieldName = state.get(`fields.new_field.name`);\n  let farmName = state.get(`fields.new_field.farm.name`);\n  let coordinatesOk = state.get(`User.currentSelection.field.coordinatesOk`);\n  if (\n    fieldName &&\n    farmName &&\n    fieldName.length > 0 &&\n    farmName.length > 0 &&\n    coordinatesOk\n  ) {\n    state.set(\"User.currentSelection.field.newFieldDisabled\", false);\n  } else {\n    state.set(\"User.currentSelection.field.newFieldDisabled\", true);\n  }\n}\n\n/**\n * Farm's input text changed\n * @param props\n * @param state\n */\nexport function farmTextChanged({ props, state }) {\n  state.set(`fields.new_field.farm.name`, props.value);\n  state.set(\"fields.new_field.farm.suggestionsOpen\", true);\n  validateNewFieldButton({ props, state });\n}\n\n/**\n * Field's input text changed\n * @param props\n * @param state\n */\nexport function fieldTextChanged({ props, state }) {\n  state.set(`fields.new_field.name`, props.value);\n  state.set(\"fields.new_field.field.suggestionsOpen\", true);\n  validateNewFieldButton({ props, state });\n}\n\n/**\n * Handles updates in the resource\n * @type {*[]}\n */\nexport const handleWatchUpdate = sequence(\"fields.handleWatchUpdate\", [\n  () => {\n    console.log(\"--> fields.handlingWatchUpdate\");\n  },\n  mapOadaToFields,\n  mapOadaToFarms,\n  loadOpsLstData,\n  statsBarHandleUpdate\n]);\n\nexport const cancelNewField = sequence(\"fields.cancelNewField\", [\n  set(state`fields.new_field`, {}),\n  set(state`fields.editing`, false),\n  set(state`fields.isNewField`, false),\n  unset(state`fields.selectedId`),\n  set(state`User.currentSelection.field.coordinatesOk`, false),\n  unset(state`fields.temp_buffer`)\n]);\n\n","import MobileDetect from \"mobile-detect\";\nimport * as oada from \"@oada/cerebral-module/sequences\";\nimport * as operations from \"../operations/sequences\";\nimport { sequence } from \"cerebral\";\nimport { state } from \"cerebral/tags\";\nimport { when } from \"cerebral/operators\";\nimport * as fields from \"@oada/fields-module/sequences\";\nimport * as operatorsModule from \"@oada/operators-module/cerebral/sequences\";\nimport {loadData as loadFldListData} from \"../FldList/chains\";\nimport { mapOadaToFields, mapOadaToFarms } from \"../fields/sequences\";\n\n// const _DEBUG = false;\n// const _TOKEN = 'servio';\n//const _SCOPE = 'oada.operations:all';\nconst _SCOPE = \"oada.yield:all\";\nconst _TOKEN = \"def\";\n\n// previous http\nconst _OPENATK_METADATA =\n  \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY\";\n\nconst _REDIRECT_OPENATK =\n  \"https://openatk.com/FieldWorkApp/oauth2/redirect.html\";\n\n/**\n * OpenATK domain - Production\n * @type {string}\n * @private\n */\nconst _CURRENT_METADATA = _OPENATK_METADATA;\nconst _CURRENT_REDIRECT = _REDIRECT_OPENATK;\n\nconst _OPTIONS =  {\n  redirect: _CURRENT_REDIRECT,\n  metadata: _CURRENT_METADATA,\n  scope:    _SCOPE\n};\n\nexport const init = sequence(\"App.init\", [\n  setMobile,\n  getConnectionsFromStorage,\n  when(state`Connections.connection_id`),\n  {\n    true: sequence(\"autoInitSuccess\", [\n      ({ state }) => ({\n        domain:        state.get(\"Connections.oada_domain\"),\n        options:       _OPTIONS,\n        token:         _TOKEN,\n        connection_id: state.get(\"operations.connection_id\"),\n        signals:       [\"fields.handleWatchUpdate\"]\n      }),\n      fields.init,\n      mapOadaToFields,\n      mapOadaToFarms,\n      ({ state }) => ({\n        domain:        state.get(\"Connections.oada_domain\"),\n        options:       _OPTIONS,\n        token:         _TOKEN,\n        connection_id: state.get(\"operations.connection_id\")\n      }),\n      operations.init,\n      ({ state }) => ({\n        domain:        state.get(\"Connections.oada_domain\"),\n        options:       _OPTIONS,\n        token:         _TOKEN,\n        connection_id: state.get(\"operations.connection_id\"),\n        signals:       [\"operators.handleWatchUpdate\"]\n      }),\n      operatorsModule.init,\n      loadFldListData\n    ]),\n    false: []\n  }\n]);\n\n/**\n * gets the Connections from localCache, it updates all necessary state to auto-init the app\n * @param state\n */\nfunction getConnectionsFromStorage({ state }) {\n  let connections = JSON.parse(\n    localStorage.getItem(\"_FieldWorkApp.Connections\")\n  );\n  if (connections && connections[\"connection_id\"]) {\n    let connectionId = connections[\"connection_id\"];\n    let oadaDomain = connections[\"oada_domain\"];\n    state.set(\"Connections.show\", false);\n    state.set(`operations.connection_id`, connectionId);\n    state.set(`fields.connection_id`, connectionId);\n    state.set(`operators.connection_id`, connectionId);\n    state.set(`Connections.connection_id`, connectionId);\n    state.set(\"Connections.oada_domain\", oadaDomain);\n    state.set(\"Connections.oada_domain_text\", oadaDomain);\n  } else {\n    state.set(\"Connections.show\", true);\n  }\n}\n\nexport const clearCacheButtonClicked = [\n  ({ state, props }) => ({\n    connection_id: state.get(\"operations.connection_id\")\n  }),\n  oada.resetCache,\n  init\n];\n\nfunction setMobile({ state }) {\n  let md = new MobileDetect(window.navigator.userAgent);\n  state.set(`App.is_mobile`, md.mobile() !== null);\n}\n","import stateTree from \"./stateTree.js\";\nimport { Module } from \"cerebral\";\nimport StorageModule from \"@cerebral/storage\";\n\n/* sequences */\nimport * as signals from \"./sequences\";\n\nconst LocalCache = StorageModule({\n  target: window.localStorage ? localStorage : null,\n  json: true,\n  sync: {\n    Connections: \"Connections\"\n  },\n  prefix: \"_FieldWorkApp\"\n});\n\nexport default Module({\n  state: stateTree,\n  signals,\n  modules: { LocalCache }\n});\n","/* cerebral imports */\nimport {state, props} from 'cerebral/tags';\nimport { set } from 'cerebral/operators';\n/* fields-module */\nimport * as fields from '@oada/fields-module/sequences';\nimport cerebralModule from '@oada/cerebral-module/sequences';\nimport { mapOadaToFields, mapOadaToFarms } from \"../fields/sequences\";\nimport { loadData as loadFldListData } from \"../FldList/chains\";\n/* operations module */\nimport * as operations from \"../operations/sequences\";\nimport * as operatorsModule from \"@oada/operators-module/cerebral/sequences\";\n\nconst _SCOPE = 'oada.yield:all';\nconst _OPENATK_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY';\nconst _REDIRECT_OPENATK = 'http://openatk.com/FieldWorkApp/oauth2/redirect.html';\nconst _TOKEN = 'def';\n\n/**\n * OpenATK domain\n * @type {string}\n * @private\n */\nconst _CURRENT_METADATA = _OPENATK_METADATA;\nconst _CURRENT_REDIRECT = _REDIRECT_OPENATK;\n\nconst _OPTIONS =  {\n  redirect: _CURRENT_REDIRECT,\n  metadata: _CURRENT_METADATA,\n  scope:    _SCOPE\n};\n\nexport var signOut = [\n  set(state`Connections.oada_token`, ''),\n  set(state`Connections.oada_domain`, ''),\n  set(state`Connections.oada_fields_domain`, ''),\n  set(state`Connections.oada_domain_text`, ''),\n  set(state`Connections.oada_fields_domain_text`, ''),\n];\n\nexport var updateOadaDomain = [\n  set(state`Connections.oada_domain_text`, props`value`),\n];\n\n// version 1 assumes operations and fields are at the same service\nexport var updateOadaFieldsDomain = [\n  set(state`Connections.oada_fields_domain_text`, props`value`),\n];\n\nexport var clearConnection = [\n  operationsCleanUp,\n  set(props`domain`, state`Connections.oada_domain`), // need to put domain in there for cerebralModule.resetCache\n  cerebralModule.resetCache,\n  connectionCleanUp,\n  set(state`Connections.show`, true),\n];\n\nexport var init = [\n  set(state`Connections.show`, false),\n  ({state}) => ({\n    domain:         state.get('Connections.oada_domain'),\n    options:       _OPTIONS,\n    token:         _TOKEN,\n    connection_id: state.get('operations.connection_id'),\n    signals:       ['fields.handleWatchUpdate']\n  }),\n  fields.init,\n  mapOadaToFields,\n  mapOadaToFarms,\n  ({state}) => ({\n    domain:         state.get('Connections.oada_domain'),\n    options:       _OPTIONS,\n    token:         _TOKEN,\n    connection_id: state.get('operations.connection_id'),\n  }),\n  operations.init,\n  ({ state }) => ({\n    domain:        state.get(\"Connections.oada_domain\"),\n    options:       _OPTIONS,\n    token:         _TOKEN,\n    connection_id: state.get(\"operations.connection_id\"),\n    signals:       ['operators.handleWatchUpdate']\n  }),\n  operatorsModule.init,\n  loadFldListData\n];\n\nexport var setConnection = [\n  set(state`Connections.show`, false),\n  set(state`Connections.oada_domain`, state`Connections.oada_domain_text`),\n  //set(state`Connections.oada_fields_domain`, state`Connections.oada_fields_domain_text`), v2\n  set(props`domain`, state`Connections.oada_domain`), // need to put domain in there for cerebralModule.resetCache\n  cerebralModule.resetCache,\n  init,\n  set(props`domain`, state`Connections.oada_domain`)\n];\n\nexport var cancelConnection = [\n  set(state`Connections.show`, false),\n  set(state`Connections.oada_domain`, state`Connections.oada_domain`),\n  set(state`Connections.oada_fields_domain`,  state`Connections.oada_domain`),\n];\n\nexport var showConnections = [\n  set(state`Connections.show`, true)\n];\n\nfunction operationsCleanUp({state, props}){\n  let operations =  state.get('operations.records');\n\n  if(operations) {\n    let operationsKeys = Object.keys(operations);\n    let userOperations = state.get('User.operations');\n\n    /* cleaning up operations from the previous connections */\n    operationsKeys.forEach((operation) => {\n        delete userOperations[operation];\n    });\n\n    state.set('User.operations', userOperations);\n    state.set('operations.records', {});\n    state.set('User.currentSelection.operation.id', \"\");\n    state.set('User.currentSelection.operation.inputText', \"\");\n    state.set('User.currentSelection.operation.placeHolder', \"\");\n  }\n}\n\nfunction connectionCleanUp({state, props}){\n  let connection_id = state.get('operations.connection_id');\n  /* cleaning up connections from oada state */\n  state.unset('oada.connections');\n  /* cleaning up previous connection_id from oada state */\n  state.unset('oada.' + connection_id)\n}\n","import { Module } from 'cerebral';\nimport {\n    showConnections,\n    signOut,\n} from '../Connections/chains';\n\nimport {\n    clearCacheButtonClicked\n} from \"../App/sequences\";\n\nexport default Module({\n  state: {\n    open: false\n  },\n\n  signals: {\n    connectionsClicked: showConnections,\n    signoutClicked: signOut,\n    clearCacheClicked: clearCacheButtonClicked\n  }\n});\n","import { toggle } from 'cerebral/operators'\nimport {state} from 'cerebral/tags'\n\nexport var handleDrawerOpen = [\n  toggle(state`SideDrawer.open`)\n];\n","import { Module } from 'cerebral';\nimport * as signals from './chains';\n\n\nexport default Module({\n\tstate: {\n\t\topen: false\n  \t},\n\n  \tsignals,\n});\n","import { Module } from 'cerebral';\nimport {\n\thandleChange,\n\thandleChangeIndex,\n\ttoggleTab,\n} from './chains';\n\n\nexport default Module({\n\tstate: {\n\t\tvalue: 0\n  \t},\n\n  \tsignals: {\n  \t\thandleChange: handleChange,\n  \t\thandleChangeIndex: handleChangeIndex,\n  \t\ttoggleTab: toggleTab,\n  \t}\n});\n","/* operations imports */\nimport { loadData as loadOpsData } from \"../OpsList/chains\";\nimport { clearData as clearOpsData } from \"../OpsList/chains\";\n\n/* operations module imports */\nimport * as operations from \"../operations/sequences\";\n\n/* fields imports */\nimport { loadData as loadFldData } from \"../FldList/chains\";\n\n/* Drawers and Panels imports */\nimport { handleDrawerOpen as handleBottomDrawerOpen } from \"../BottomDrawer/chains\";\nimport uuid from \"uuid\";\nimport {statsBarHandleUpdate} from \"../StatsBar/chains\";\n\nexport var setCurrentSelectionStatusStatus = [\n  setCurrentSelectionStatus,\n  saveCurrentSelectionStatusAction,\n  ...loadOpsData,\n  ...loadFldData,\n  ...handleBottomDrawerOpen,\n  operations.updateOperation,\n  resetCurrentSelectionStatus\n];\n\nexport var setCurrentSelectionStatusTimestamp = [\n  setCurrentSelectionStatusTimestampAction\n];\n\nexport var saveCurrentSelectionStatus = [\n  saveCurrentSelectionStatusAction,\n  ...loadOpsData,\n  ...loadFldData,\n  ...handleBottomDrawerOpen,\n  resetCurrentSelectionStatus\n];\n\nexport var handleOperationSelected = [\n  setCurrentOperation,\n  ...loadOpsData,\n  statsBarHandleUpdate\n];\n\nexport var handleOperationCleared = [clearCurrentOperation, ...clearOpsData];\n\nexport var addNewOperation = [\n  ...handleBottomDrawerOpen,\n  addNewOperationAction,\n  operations.addOperation,\n  setCurrentOperation,\n  ...loadOpsData\n];\n\nexport var setDisabledNewOperation = [setDisabledNewOperationAction];\n\nexport var cancelNewOperation = [\n  cancelNewOperationAction,\n  setCurrentOperation,\n  ...loadOpsData,\n  ...handleBottomDrawerOpen\n];\n\nexport var cancelStatusChange = [\n  ...handleBottomDrawerOpen\n];\n\n/**\n * Generates a timestamp in the format 'YYYY-MM-DD'\n * @returns {string}\n */\nfunction timestamp() {\n  let today = new Date();\n  let dd = today.getDate();\n  let mm = today.getMonth() + 1; //January is 0!\n  let yyyy = today.getFullYear();\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  return yyyy + \"-\" + mm + \"-\" + dd;\n}\n\nfunction getCurrentOperationFieldStatus({ props, state }) {\n  let id      = state.get(\"fields.selectedId\");\n  let opId    = state.get(\"User.currentSelection.operation.id\");\n  let result  = state.get(`operations.records.${opId}.fields.${id}.status'}`);\n  return result || \"unplanned\";\n}\n\nfunction setCurrentSelectionStatus({ props, state }) {\n  state.set(\"User.currentSelection.status.status\", props.value);\n}\n\nfunction setCurrentSelectionStatusTimestampAction({ props, state }) {\n  if (props.timestamp) {\n    state.set(\"User.currentSelection.status.timestamp\", props.timestamp);\n  }\n}\n\nfunction saveCurrentSelectionStatusAction({ props, state }) {\n  let currentOperationID = state.get(\"User.currentSelection.operation.id\");\n\n  //do nothing when this is falsy\n  if(!currentOperationID) return;\n  let id = state.get(\"fields.selectedId\");\n  let _status = state.get(\"User.currentSelection.status.status\");\n\n  state.set(\n    `operations.records.${currentOperationID}.fields.${id}.status`,\n    _status\n  );\n\n  if (_status === \"unplanned\") {\n    state.unset(\n      `${\"operations.records.\" + currentOperationID + \".fields.\" + id}`\n    );\n  } else {\n    //fixing bug when id not present in fields.id.record\n    if (id) {\n      state.set(\n        `${\"operations.records.\" +\n          currentOperationID +\n          \".fields.\" +\n          id +\n          \".id\"}`,\n        id\n      );\n\n      if (\n        !state.get(\n          `${\"operations.records.\" +\n            currentOperationID +\n            \".fields.\" +\n            id +\n            \".history\"}`\n        )\n      ) {\n        state.set(\n          `${\"operations.records.\" +\n            currentOperationID +\n            \".fields.\" +\n            id +\n            \".history\"}`,\n          []\n        );\n      } //if\n\n      if (\n        state.get(\n          `${\"operations.records.\" +\n            currentOperationID +\n            \".fields.\" +\n            id +\n            \".history\"}`\n        )\n      ) {\n        state.unshift(\n          `${\"operations.records.\" +\n            currentOperationID +\n            \".fields.\" +\n            id +\n            \".history\"}`,\n          {\n            status:    _status || \"planned\",\n            marker:    state.get(\"operators.current\"),\n            timestamp: state.get(\"User.currentSelection.status.timestamp\")\n          }\n        );\n      }\n    }\n  } //else\n}\n\nfunction setCurrentOperation({ props, state }) {\n  if (!!props.item) {\n    state.set(\"User.currentSelection.operation.id\", props.item.id);\n    state.set(\"User.currentSelection.operation.inputText\", props.item.label);\n    state.set(\"User.currentSelection.operation.suggestionsOpen\", false);\n  }\n}\n\nfunction clearCurrentOperation({ props, state }) {\n  state.set(\"User.currentSelection.operation.id\", null);\n}\n\nfunction addNewOperationAction({ state }) {\n  let _addNewOperation = true;\n  let _inputText = state.get(\"User.currentSelection.operation.inputText\");\n  let _operations = state.get(\"operations.records\");\n\n  if (_inputText.length !== 0) {\n    Object.keys(_operations || {}).forEach(function(key) {\n      _inputText === _operations[key].label\n        ? (_addNewOperation = false)\n        : (_addNewOperation = true);\n    });\n  } else {\n    _addNewOperation = false;\n  }\n\n  if (_addNewOperation) {\n    let strUUID = uuid();\n    const operationRecord = {\n      id: strUUID,\n      label: _inputText,\n      fields: {}\n    };\n    state.set(`${\"operations.records.\" + strUUID}`, operationRecord);\n    state.set(`${\"operations.records.\" + strUUID + \".id\"}`, strUUID);\n    return {\n      item: operationRecord,\n      data: operationRecord\n    };\n  } //if\n} // addNewOperation\n\nfunction setDisabledNewOperationAction({ props, state }) {\n  return state.get(\"User.currentSelection.operation.disabled\");\n}\n\nfunction cancelNewOperationAction({ state }) {\n  const ops_id = state.get(\"User.currentSelection.operation.id\");\n  return { item: state.get(`${\"operations.records.\" + ops_id}`) };\n}\n\nexport function resetCurrentSelectionStatus({ props, state }) {\n  if (!state.get(\"fields.editing\")) {\n    let currentOperationFieldStatus = getCurrentOperationFieldStatus({props, state});\n    if (currentOperationFieldStatus) {\n      state.set(\"User.currentSelection.status.status\", currentOperationFieldStatus);\n    }\n    state.set(\"User.currentSelection.status.timestamp\", timestamp());\n    state.set(\"operators.current\", state.get(\"User.label\"));\n  }\n}\n","import { Module } from 'cerebral'\n\nimport * as signals from './chains'\n\nexport default Module({\n\nstate : {\n    id: 'servio',\n    label: 'Servio Palacios',\n\n    operations: {},\n\n    fields: {},\n\n    currentSelection: {\n      operation: {\n        id: null,\n        placeholder: 'Operation',\n        suggestionsOpen: false,\n        inputText: '',\n      disabled: false,\n        editing: false,\n      },\n      farm: {\n        id: '',\n        name: '',\n      },\n      field: {\n        id: null,\n        placeholder: 'Field',\n        suggestionsOpen: false,\n        name: '',\n        disabled: false,\n        editing: false,\n        tempObject: null,\n        newFieldDisabled: true\n      },\n      status: {\n        status: null,\n        marker: null,\n        timestamp: null,\n      }\n    },\n\n  },\n\n  signals,\n});\n","let stateTree = {\n\t\tcenter: [40.98551896940516, -86.18823766708374],\n\t\tmoving: false,\n\t\tzoom: 15,\n\t\tisLoading: false,\n\t};\n\nexport default stateTree;","import stateTree from './stateTree.js';\nimport { Module } from 'cerebral';\n\nimport {\n  doneMovingMap,\n  handleLocationFound,\n  handleMapClick,\n  handleMapMoved,\n  startMovingMap,\n  startMarkerDrag,\n  endMarkerDrag,\n  markerDragging,\n  deleteCoordinate,\n} from './chains';\n\nexport default Module({\n\tstate: stateTree,\n\n\tsignals: {\n        locationFound: handleLocationFound,\n        mapMoved: [\n            ...handleMapMoved, ...doneMovingMap,\n        ],\n        mapMoveStarted: startMovingMap,\n        mouseDownOnMap: handleMapClick,\n        markerDragStarted: startMarkerDrag,\n        markerDragEnded: endMarkerDrag,\n        markerDragged: markerDragging,\n        deleteCoordinate: deleteCoordinate,\n    }\n})\n","import { Module } from 'cerebral';\nimport {\n\thandleDrawerOpen,\n\topenBottomDrawerForStatusUpdate,\n\thandleOperatorMenuOpen,\n\thandleOperatorMenuClose,\n} from './chains';\n\n\nexport default Module({\n\tstate: {\n\t\topen: false,\n\t\tmenu: 'operations',\n\t\toperatorMenuOpen: false,\n  \t},\n\n  \tsignals: {\n  \t\thandleDrawerOpen: handleDrawerOpen,\n  \t\topenBottomDrawerForStatusUpdate: openBottomDrawerForStatusUpdate,\n  \t\thandleOperatorMenuOpen: handleOperatorMenuOpen,\n  \t\thandleOperatorMenuClose: handleOperatorMenuClose,\n  \t}\n});\n","import { state } from \"cerebral/tags\";\nimport { set } from \"cerebral/operators\";\nimport {\n  //handleFieldCleared,\n  validateNewFieldButton\n} from \"../fields/sequences\";\nimport { setFieldOnMapCenter } from \"../MapPanel/chains\";\nimport { handleDrawerOpen as handleBottomDrawerOpen } from \"../BottomDrawer/chains\";\n\nexport var addOperationClicked = [\n  setDisabledNewOperation,\n  set(state`BottomDrawer.menu`, \"operations\"),\n  set(state`BottomDrawer.open`, true)\n];\n\nexport var operationInputTyped = [\n  setDisabledNewOperation,\n  operationInputTypedAction\n];\n\nexport var fieldInputTyped = [\n  fieldInputTypedAction\n  //...handleFieldCleared\n];\n\nexport var handleFieldEdited = [\n  handleFieldEditedAction,\n  ...handleBottomDrawerOpen,\n  ...setFieldOnMapCenter\n];\n\nexport var handleOperationEdited = [handleOperationEditedAction];\n\nexport var openSuggestions = [openSuggestionsAction];\n\nexport var closeSuggestions = [closeSuggestionsAction];\n\nfunction openSuggestionsAction({ props, state }) {\n  if (props.id === \"ops-input\") {\n    state.set(\"User.currentSelection.operation.suggestionsOpen\", true);\n  } else {\n    state.set(\"fields.new_field.field.suggestionsOpen\", true);\n  }\n}\n\nfunction closeSuggestionsAction({ props, state }) {\n  if (props.id === \"ops-input\") {\n    let currentOperationID = state.get(\"User.currentSelection.operation.id\");\n    if (currentOperationID) {\n      // state.set(\n      //   \"User.currentSelection.operation.inputText\",\n      //   state.get(`${\"operations.records.\" + currentOperationID + \".label\"}`)\n      // );\n    }\n    state.set(\"User.currentSelection.operation.suggestionsOpen\", false);\n  } else {\n    state.set(\"fields.new_field.field.suggestionsOpen\", false);\n  }\n}\n\n/**\n * Sets the value of the property disabled according to\n * the value of the operation inputText\n * if already exists then disabled will be true (button cannot be clicked)\n * TODO: change this to a hashtable O(1) instead of O(n)\n * @param props\n * @param state\n */\nfunction setDisabledNewOperation({ props, state }) {\n  /* Disable add button if current operation exists in the state tree */\n  /* fix this with a hash table O(1), the following procedure is inefficient */\n  let _inputText = props.inputText;\n  let _operations = state.get(\"operations.records\");\n  let openBottonDrawer = state.get(\"BottomDrawer.open\");\n  // if the bottomDrawer is still not open then use the following value\n  // state.get('User.currentSelection.operation.inputText');\n  if (!openBottonDrawer) {\n    _inputText = state.get(\"User.currentSelection.operation.inputText\");\n  }\n  let _found = false;\n  Object.keys(_operations || {}).forEach(function(key) {\n    //console.log(key, _operations[key]);\n    if (_inputText === _operations[key].label || _inputText.length === 0) {\n      state.set(\"User.currentSelection.operation.disabled\", true);\n      _found = true;\n    } else {\n      if (!_found) {\n        state.set(\"User.currentSelection.operation.disabled\", false);\n      }\n    }\n  });\n}\n\n/**\n * TODO\n * Modify this code to avoid repeated field's names\n * Sets the value of the property disabled according to\n * the value of the operation inputText\n * if already exists then disabled will be true (button cannot be clicked)\n * @param props\n * @param state\n */\n// function setDisabledNewField({props, state}){\n//     /* maverick */\n//     /* Disable add button if current operation exists in the state tree */\n//     /* fix this with a hash table O(1), the following procedure is inefficient */\n//     let _inputText = props.inputText;\n//     let _operations = state.get('operations.records');\n//     let openBottonDrawer = state.get('BottomDrawer.open');\n//     // if the bottomDrawer is still not open then use the following value\n//     // state.get('User.currentSelection.operation.inputText');\n//     if(!openBottonDrawer){\n//         var id = state.get(`fields.selectedId`);\n//         _inputText = state.get(`fields.records.${id}.name`);\n//     }\n//     let _found = false;\n//     //console.log('input text ', _inputText);\n//     Object.keys(_operations).forEach(function(key) {\n//         //console.log(key, _operations[key]);\n//         if(_inputText === _operations[key].label){\n//             //console.log(\"found key \", key, _operations[key]);\n//             state.set('fields.new_field.field.disabled', true);\n//             _found = true;\n//         }\n//         else{\n//             if(!_found){\n//                 state.set('fields.new_field.field.disabled', false);\n//             }\n//         }\n//     });\n// }\n\nfunction operationInputTypedAction({ props, state }) {\n  state.set(\"User.currentSelection.operation.inputText\", props.inputText);\n  state.set(\"User.currentSelection.operation.suggestionsOpen\", true);\n}\n\nfunction fieldInputTypedAction({ props, state }) {\n  let id = state.get(`fields.selectedId`);\n  state.set(`fields.records.${id}.name`, props.inputText);\n  state.set(\"fields.new_field.field.suggestionsOpen\", true);\n}\n\nfunction handleFieldEditedAction({ props, state }) {\n  let id = state.get(`fields.selectedId`);\n  let boundary = JSON.parse(\n    JSON.stringify(state.get(`fields.records.${id}.boundary`))\n  );\n  let record = JSON.parse(\n    JSON.stringify(state.get(`fields.records.${id}`))\n  );\n  console.log(\"--> copying this boundary into buffer\", boundary);\n  if (boundary && boundary.geojson.coordinates[0].length >= 3) {\n    state.set(\"User.currentSelection.field.coordinatesOk\", true);\n  } else {\n    state.set(\"User.currentSelection.field.coordinatesOk\", false);\n  }\n  state.set(\"fields.new_field\", record);\n\n  validateNewFieldButton({ props, state });\n\n  state.set(\"fields.temp_buffer.boundary\", boundary);\n  state.set(\"fields.editing\", true);\n  state.set(\"fields.isNewField\", false);\n}\n\nfunction handleOperationEditedAction({ props, state }) {\n  state.set(\"User.currentSelection.operation.editing\", true);\n}\n","import { Module } from 'cerebral';\nimport * as signals from './chains';\n\n\nexport default Module({\n\tstate: {},\n\n\tsignals,\n});\n","// FIXME: make this flexible\n// Add, delete, edit these states\nlet stateTree = {\n    planned: {\n        area: 0,\n      collapse: true,\n      fields: []\n    },\n    started: {\n        area: 0,\n      collapse: true,\n      fields: []\n    },\n    completed: {\n        area: 0,\n      collapse: true,\n      fields: []\n    }\n};\n\nexport default stateTree;","import { Module } from 'cerebral';\nimport stateTree from './stateTree';\n\nimport {\n\tloadData,\n\thandleCollapse,\n} from './chains'\n\nexport default Module({\n\n  state : stateTree,\n\n  signals: {\n  \thandleCollapse: handleCollapse,\n  \tloadData: loadData\n  }\n});\n","import { Module } from 'cerebral';\n\nimport * as signals from './chains'\n\nexport default Module({\n\n  state : {},\n\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './chains';\n\nexport default Module({\n\tstate: {},\n\n\tsignals,\n});\n","import { Module } from 'cerebral';\n\nimport {\n  setConnection,\n  cancelConnection,\n  updateOadaDomain,\n  updateOadaFieldsDomain,\n  clearConnection\n} from './chains';\n\nlet _OADA_HOST = \"https://oada.openatk.com\";\nlet _CURRENT_HOST = _OADA_HOST;\n\nexport default Module({\n\n\tstate : {\n\t\toada_domain_text:        _CURRENT_HOST,\n    oada_fields_domain_text: _CURRENT_HOST,\n\t\toada_domain:             _CURRENT_HOST,\n    oada_fields_domain:      _CURRENT_HOST,\n\t\tshow :                   false\n\t}, \n\n\tsignals: {\n\t\tsubmitClicked:           setConnection,\n\t\tcancelClicked:           cancelConnection,\n\t\toadaDomainChanged:       updateOadaDomain,\n    oadaFieldsDomainChanged: updateOadaFieldsDomain,\n    clearConnection:         clearConnection\n  }\n});\n","import { Module } from 'cerebral';\nimport {\n    selectOperation,\n    handleWatchUpdate,\n    handleFieldUpdate\n} from './sequences';\n\nexport default Module({\n\n    state : {\n        records: {},\n        loading: true,\n        connection_id: \"none\",\n        fieldsChanged: false\n    },\n\n    signals: {\n        operationClicked: selectOperation,\n        handleWatchUpdate: handleWatchUpdate,\n        handleFieldUpdate: handleFieldUpdate\n    }\n})","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n    state : {\n        records: {},\n        farms: {},\n        loading: true,\n        connection_id: 0,\n        new_field: {},\n        editing: false,\n    },\n    signals,\n})\n","let stateTree = {\n    planned: {\n        open: false\n    },\n    started: {\n       open: false\n    },\n    completed: {\n       open: false\n    }\n};\n\nexport default stateTree;","import { Module } from 'cerebral';\nimport stateTree from './stateTree';\n\nimport * as signals from './chains';\n\nexport default Module({\n\n    state : stateTree,\n\n    signals: signals\n});","export const resized = [\n  ({ state, props }) => {\n    //console.log(\"--> window module state, props-->\", state, props);\n    const orientation = props.width > props.height ? \"landscape\" : \"portrait\";\n    if (state.get(\"window.orientation\") !== orientation) {\n      state.set(\"window.orientation\", orientation);\n    }\n\n    const isSmall =\n      orientation === \"portrait\" ? props.width < 767 : props.height < 500;\n    if (state.get(\"window.isSmall\") !== isSmall)\n      state.set(\"window.isSmall\", isSmall);\n  }\n];\n\nexport const init = [\n  ({ windowSize }) => windowSize.init(\"window.resized\"), // registers event listener for window resize events\n  resized // load dimensions the first time\n];","import { Module } from 'cerebral'\n\nimport * as signals from './sequences';\n\nexport default Module({\n  state : {\n    isSmall: true, // changes to true for mobile, false for computer\n    orientation: 'portrait' // portrait | landscape\n  },\n  signals,\n});","let stateTree = {\n  open: false,\n  current: \"Item 1\",\n  records: {\n    \"item 1\": {\n      label: \"Item 1\"\n    },\n    \"item 2\": {\n      label: \"Item 2\"\n    },\n    \"item 3\": {\n      label: \"Item 3\"\n    }\n  }\n};\n\nexport default stateTree;","import { state } from \"cerebral/tags\";\nimport { toggle } from \"cerebral/operators\";\n\nexport var handleMenuListOpen = [toggle(state`MenuList.open`)];\n\nexport function setCurrentItem({props, state}){\n  if(props.item)\n    state.set(`MenuList.current`, props.item);\n}","import { Module } from 'cerebral';\nimport stateTree from './stateTree';\n\nimport * as signals from './sequences';\n\nexport default Module({\n  state : stateTree,\n  signals: signals\n});","import { Module } from 'cerebral';\n\n/* oada imports */\nimport oadaModule from '@oada/cerebral-module';\nimport oadaProvider from '@oada/cerebral-provider';\nimport oadaFields from '@oada/fields-module';\nimport oadaOperators from '@oada/operators-module/cerebral';\n\nimport App from './App';\nimport MenuBar from './MenuBar';\nimport SideDrawer from './SideDrawer';\nimport DataTabs from './DataTabs';\nimport User from './User';\nimport MapPanel from './MapPanel';\nimport BottomDrawer from './BottomDrawer';\nimport AutocompleteSearch from './AutocompleteSearch';\nimport OpsList from './OpsList';\nimport FldList from './FldList';\nimport EditFieldDrawer from './EditFieldDrawer';\nimport Connections from './Connections';\nimport operations from './operations';\nimport fields from './fields';\nimport StatsBar from './StatsBar';\nimport window from './window';\nimport MenuList from './MenuList';\n\nexport default Module({\n\tmodules: {\n\t\tApp,\n\t\twindow,\n    Connections,\n    oada: oadaModule,\n\t\tSideDrawer,\n\t\tMenuBar,\n    StatsBar,\n\t\tDataTabs,\n\t\tUser,\n\t\tMapPanel,\n\t\tBottomDrawer,\n\t\tAutocompleteSearch,\n\t\tOpsList,\n\t\tFldList,\n    fields: oadaFields,\n\t\toperations,\n\t\tfields,\n\t\tEditFieldDrawer,\n    operators: oadaOperators,\n\t\tMenuList\n\t},\n\n  providers: {\n    oada: oadaProvider\n  },\n});\n","import { Controller } from 'cerebral';\nimport root_module from './modules';\nimport { devtoolsPort } from './config';\n\nconst Devtools = (process.env.NODE_ENV === 'production' ?\n\t\t\t\t\tnull :\n\t\t\t\t\trequire('cerebral/devtools').default);\nvar devPort = devtoolsPort;\nif (process.env.NODE_ENV !== 'production') {\n\tdevPort = (devtoolsPort + parseInt(window.location.port, 10) - 3000);\n\tconsole.log('Cerebral Devtools running on Port:', devPort);\n}\n\n/*\nconst controller = Controller({\n\tmodules: {\n\t\tApp,\n\t\tMap,\n\t},\n\tdevtools: Devtools && Devtools({host: 'localhost:8787'})\n})\n*/\n\nexport default Controller(root_module, {\n\tdevtools: Devtools && Devtools({host: 'localhost:8787'})\n})","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Container } from \"@cerebral/react\";\nimport App from \"./components/App/\";\nimport controller from \"./controller\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport \"./index.css\";\n//import injectTapEventPlugin from 'react-tap-event-plugin';\nimport { createMuiTheme } from \"material-ui/styles\";\n\nconst muiTheme = createMuiTheme();\n\n//injectTapEventPlugin();\n\nrender(\n  <Container controller={controller} style={{ height: \"100vh\" }}>\n    <MuiThemeProvider theme={muiTheme}>\n      <App />\n    </MuiThemeProvider>\n  </Container>,\n  document.getElementById(\"root\")\n);\n\nif (module.hot) {\n  module.hot.accept(\"./components/App/\", () => {\n    const NextApp = require(\"./components/App/\").default;\n    render(\n      <Container controller={controller} style={{ height: \"100vh\" }}>\n        <MuiThemeProvider theme={muiTheme}>\n          <NextApp />\n        </MuiThemeProvider>\n      </Container>,\n      document.getElementById(\"root\")\n    );\n  });\n}\n"],"sourceRoot":""}