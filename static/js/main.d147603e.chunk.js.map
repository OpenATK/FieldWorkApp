{"version":3,"sources":["config/config.dev.js","config/dev_metadata.js","config/config.prod-dev.js","config/proddev_metadata.js","config/config.prod.js","config/prod_metadata.js","components/AutocompleteSearch/index.js","components/MenuList/index.js","components/MenuBar/index.js","components/Connections/index.js","components/OpsList/index.js","components/DataTabs/index.js","components/SideDrawer/index.js","components/MapPanel/index.js","components/BottomDrawer/index.js","components/EditFieldDrawer/index.js","components/App/index.js","config/index.js","modules/App/stateTree.js","modules/DataTabs/chains.js","modules/OpsList/chains.js","modules/StatsBar/chains.js","modules/operations/sequences.js","modules/FldList/chains.js","modules/MapPanel/chains.js","modules/BottomDrawer/chains.js","modules/fields/sequences.js","modules/App/sequences.js","modules/App/index.js","modules/Connections/chains.js","modules/MenuBar/index.js","modules/SideDrawer/chains.js","modules/SideDrawer/index.js","modules/DataTabs/index.js","modules/User/chains.js","modules/User/index.js","modules/MapPanel/stateTree.js","modules/MapPanel/index.js","modules/BottomDrawer/index.js","modules/AutocompleteSearch/chains.js","modules/AutocompleteSearch/index.js","modules/OpsList/stateTree.js","modules/OpsList/index.js","modules/FldList/index.js","modules/EditFieldDrawer/index.js","modules/Connections/index.js","modules/operations/index.js","modules/fields/index.js","modules/window/sequences.js","modules/window/index.js","modules/MenuList/stateTree.js","modules/MenuList/sequences.js","modules/MenuList/index.js","modules/StatsBar/stateTree.js","modules/StatsBar/index.js","modules/index.js","controller.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","oadaDomain","process","REACT_APP_OADA_DOMAIN","websiteDomain","parseInt","window","location","port","metadata","require","devtoolsPort","defaultNewConnectionURL","appName","contentType","bookmarksOperations","bookmarksFields","module","exports","anchorEl","AutocompleteSearch","inputProps","_this","this","InputProps","classes","isMenuBar","ref","other","Object","objectWithoutProperties","react_default","a","createElement","TextField_default","assign","onFocus","props","openSuggestions","id","onBlur","closeSuggestions","value","inputRef","objectSpread","style","color","input","endAdornment","Input","position","IconButton_default","aria-label","className","menuButton","onClick","operationInputTyped","inputText","inputType","fieldInputTyped","ArrowDropDown_default","label","InputLabelProps","shrink","inputValue","_this2","suggestions","values","operationSuggestions","filter","suggestion","_","find","s","toLowerCase","includes","trim","connection_id","unshift","action","type","fieldSuggestions","params","_this3","index","itemProps","isHighlighted","highlightedIndex","isSelected","selectedItem","Menu","key","event","addOperationClicked","addFieldClicked","selected","component","display","fontStyle","fontWeight","operationSelected","item","fieldSelected","_this4","addOperationDisabled","addFieldDisabled","button","disabled","Icon_default","fontSize","_this5","currentOperationId","currentFieldId","editOperationClicked","editFieldClicked","ret","operationInputText","map","operation","console","log","_this6","_this$props","sourceAppBar","downshift_esm","isOpen","operationsSuggestionsOpen","fieldsSuggestionsOpen","fieldInputText","itemToString","onStateChange","changes","stateAndHelpers","Downshift","stateChangeTypes","keyDownEnter","clickItem","changeInput","mouseUp","blurInput","_ref","getInputProps","getItemProps","inputBox","renderInput","fullWidth","placeholder","Paper_default","square","suggestionsContainerOpen","suggestionsList","getSuggestions","renderSuggestion","React","Component","connect","state","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","signal","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","operationCleared","_templateObject19","_templateObject20","_templateObject21","fieldCleared","_templateObject22","withStyles","theme","container","flexDirection","flexGrow","alignItems","height","width","marginTop","spacing","unit","marginBottom","marginLeft","marginRight","zIndex","padding","listStyleType","pointerEvents","opacity","touchAction","withTheme","MenuList","handleClose","handleMenuList","currentTarget","open","aria-owns","aria-haspopup","evt","handleMenuListOpen","fieldsEditing","emptyDataSet","material_ui_icons_Menu_default","index_es","onClose","addOperatorClicked","clearConnection","menuItems","MenuList_templateObject","current","MenuList_templateObject2","MenuList_templateObject3","setCurrentItem","MenuList_templateObject4","MenuList_templateObject5","MenuList_templateObject6","MenuList_templateObject7","MenuBar","drawer_button","handleSideDrawerOpen","classNames","currentOperation","sideDrawerOpen","hide","ChevronRight_default","settings_button","connectionsClicked","MoreVert_default","settings_button_text","Button_default","add_field","AddBox_default","add_field_text","ops_input","components_AutocompleteSearch","AppBar_default","appBar","Toolbar_default","disableGutters","Typography_default","variant","align","typography","noWrap","isSmall","orientation","components_MenuList","MenuBar_templateObject","MenuBar_templateObject2","MenuBar_templateObject3","MenuBar_templateObject4","MenuBar_templateObject5","MenuBar_templateObject6","MenuBar_templateObject7","MenuBar_templateObject8","signoutClicked","MenuBar_templateObject9","clearCacheClicked","MenuBar_templateObject10","addNewFieldClicked","MenuBar_templateObject11","showStatsClicked","MenuBar_templateObject12","MenuBar_templateObject13","MenuBar_templateObject14","operations","MenuBar_templateObject15","MenuBar_templateObject16","MenuBar_templateObject17","MenuBar_templateObject18","appIsMobile","MenuBar_templateObject19","MenuBar_templateObject20","MenuBar_templateObject21","MenuBar_templateObject22","infoBarOperationsOpen","_templateObject23","_templateObject24","_templateObject25","_templateObject26","_templateObject27","MenuListOpen","_templateObject28","transition","transitions","create","easing","sharp","duration","leavingScreen","order","buttons","flex","oadaDomainText","Connections_templateObject","oadaFieldsDomainText","Connections_templateObject2","show","Connections_templateObject3","submitClicked","Connections_templateObject4","cancelClicked","Connections_templateObject5","oadaDomainChanged","Connections_templateObject6","oadaFieldsDomainChanged","Connections_templateObject7","_React$Component","Connections","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","Dialog_default","Dialog","onChange","e","target","autoFocus","OpsList","color1","color2","bannerText","area","reduce","b","boundary","percent","Math","round","List","handleCollapse","status","primary","length","secondary","ExpandMore_default","ExpandLess_default","Collapse_default","in","timeout","unmountOnExit","List_default","disablePadding","fieldRecord","cloneDeep","nested","disableTypography","name","since","by","unplanned","planned","started","completed","total_area","keys","root","subheader","ListSubheader_default","renderItem","currentOperationName","OpsList_templateObject","OpsList_templateObject2","OpsList_templateObject3","OpsList_templateObject4","selectField","OpsList_templateObject5","maxWidth","backgroundColor","palette","background","paper","paddingLeft","TabContainer","children","dir","DataTabs","ops_list","components_OpsList","lib_default","axis","direction","tabValue","onChangeIndex","handleChangeIndex","DataTabs_templateObject","currentInputText","DataTabs_templateObject2","DataTabs_templateObject3","handleFieldEdited","DataTabs_templateObject4","handleChange","DataTabs_templateObject5","DataTabs_templateObject6","clearFieldClicked","DataTabs_templateObject7","justifyContent","inputContainer","SideDrawer","data_tabs","components_DataTabs","Drawer_default","drawerPaper","anchor","drawerInner","drawerHeader","ChevronLeft_default","SideDrawer_templateObject","SideDrawer_templateObject2","SideDrawer_templateObject3","dataTabsToggle","SideDrawer_templateObject4","mixins","toolbar","Overlay","LayersControl","MapPanel","closeSuggestionsAutocomplete","fieldEditing","moving","dragging","originalEvent","offsetParent","mouseDownOnMap","pt","latlng","lng","lat","refs","leafletElement","locate","color_code","markerList","currentField","geojson","coordinates","forEach","i","push","Marker","selectedId","allOperations","fields","draggable","onDrag","markerDragged","_latlng","idx","onDragStart","markerDragStarted","onDragEnd","markerDragEnded","onDblClick","deleteCoordinate","new_field_polygon","GeoJSON","fieldPolygon","data","handleFieldPolygonClicked","field","forceUpdate","uuid","fillOpacity","mapContainer","Map","onLocationfound","locationFound","validateMouseEvent","onMoveStart","mapMoveStarted","onMoveend","mapMoved","getCenter","zoom","getZoom","center","attributionControl","isMobile","zoomControl","mapZoom","TileLayer","url","attribution","checked","FeatureGroup","MapPanel_templateObject","MapPanel_templateObject2","isLoading","MapPanel_templateObject3","MapPanel_templateObject4","geohashPolygons","MapPanel_templateObject5","MapPanel_templateObject6","MapPanel_templateObject7","MapPanel_templateObject8","MapPanel_templateObject9","MapPanel_templateObject10","MapPanel_templateObject11","MapPanel_templateObject12","currentStatus","MapPanel_templateObject13","MapPanel_templateObject14","MapPanel_templateObject15","MapPanel_templateObject16","MapPanel_templateObject17","MapPanel_templateObject18","MapPanel_templateObject19","MapPanel_templateObject20","MapPanel_templateObject21","MapPanel_templateObject22","MapPanel_templateObject23","MapPanel_templateObject24","MapPanel_templateObject25","MapPanel_templateObject26","saveEdited","MapPanel_templateObject27","leaflet-container","strokeWidth","strokeOpacity","BottomDrawer","textField","currentTimestamp","setCurrentSelectionStatusTimestamp","timestamp","editFieldButton","Edit_default","noValidate","form","newOperationName","newOperationNameTyped","margin","disabledNewOperation","addNewOperation","cancelNewOperation","newFieldName","newFieldNameTyped","addNewField","datePicker","renderDatePicker","editField","renderEditField","operators_module_List_default","middle","Form","required","formControl","Radio","group","setCurrentSelectionStatusStatus","editFieldStatus","statusValue","statusButton","control","Radio_default","checkedIcon","icon","bottomMenu","tabIndex","role","onKeyDown","handleOperatorMenuClose","headerText","currentOperationLabel","currentFieldLabel","cancelStatusChange","resetCurrentSelectionStatus","_this7","header_item","renderHeaderItem","add_operation_form","renderAddOperationForm","status_radio_buttons","renderRadioButtonGroup","bottomDrawerOpen","BottomDrawer_templateObject","BottomDrawer_templateObject2","operatorMenuOpen","BottomDrawer_templateObject3","BottomDrawer_templateObject4","BottomDrawer_templateObject5","allOperators","BottomDrawer_templateObject6","BottomDrawer_templateObject7","BottomDrawer_templateObject8","BottomDrawer_templateObject9","BottomDrawer_templateObject10","BottomDrawer_templateObject11","BottomDrawer_templateObject12","BottomDrawer_templateObject13","BottomDrawer_templateObject14","BottomDrawer_templateObject15","BottomDrawer_templateObject16","setDisabledNewOperation","BottomDrawer_templateObject17","BottomDrawer_templateObject18","BottomDrawer_templateObject19","handleOperatorMenuOpen","BottomDrawer_templateObject20","BottomDrawer_templateObject21","handleBottomDrawerOpen","BottomDrawer_templateObject22","handleBottomDrawerClose","BottomDrawer_templateObject23","BottomDrawer_templateObject24","BottomDrawer_templateObject25","flexWrap","fontColor","minWidth","rightPadding","confirmIconGroup","EditFieldDrawer","editFieldDrawer","htmlFor","editFieldDrawerBottom","editFieldText","fieldText","fieldTextChanged","farmText","farmTextChanged","editFieldButtons","confirm","disabledNewField","cancelNewField","EditFieldDrawer_templateObject","EditFieldDrawer_templateObject2","EditFieldDrawer_templateObject3","fieldSuggestionsOpen","EditFieldDrawer_templateObject4","farmSuggestionsOpen","EditFieldDrawer_templateObject5","fieldId","EditFieldDrawer_templateObject6","farmId","EditFieldDrawer_templateObject7","EditFieldDrawer_templateObject8","addFarmClicked","EditFieldDrawer_templateObject9","EditFieldDrawer_templateObject10","EditFieldDrawer_templateObject11","EditFieldDrawer_templateObject12","farmCleared","EditFieldDrawer_templateObject13","EditFieldDrawer_templateObject14","EditFieldDrawer_templateObject15","EditFieldDrawer_templateObject16","EditFieldDrawer_templateObject17","title","App","windowResized","innerWidth","innerHeight","addEventListener","updateDimensions","bind","removeEventListener","init","loadFieldListData","switchTab","app","components_MenuBar","components_Connections","components_SideDrawer","components_MapPanel","components_BottomDrawer","operatorEditing","components_EditFieldDrawer","operators_module_Drawer_default","_connect","App_templateObject","App_templateObject2","App_templateObject3","menuListOpen","App_templateObject4","App_templateObject5","App_templateObject6","App_templateObject7","defineProperty","App_templateObject8","App_templateObject9","top","statsBar","overrides","default","defaults","scope","REACT_APP_PROD_DEV","toExport","stateTree","model","tags","is_mobile","settings","view","editing","set","chains_templateObject","chains_templateObject2","_ref2","toggleTab","_ref3","get","loadData","opid","concat","fieldStub","dataTabsHandleChange","clearData","toggle","statsBarHandleUpdate","_opsList","totalArea","operationStatus","totalFields","toFixed","_localPath","_TYPE","tree","bookmarks","_type","_rev","*","fetch","sequence","path","watch","signals","requests","oada","when","sequences_templateObject","sequences_templateObject2","true","mapOadaToOperations","mapOperations","loadOpsLstData","sequences_templateObject3","false","sequences_templateObject4","fetchNoWatch","sequences_templateObject5","sequences_templateObject6","sequences_templateObject7","sequences_templateObject8","_ref9","request","domain","put","_ref4","connections","JSON","parse","localStorage","getItem","connectionId","sequences_templateObject9","sequences_templateObject10","sequences_templateObject11","sequences_templateObject12","sequences_templateObject13","sequences_templateObject14","sequences_templateObject15","sequences_templateObject16","sequences_templateObject17","sequences_templateObject18","sequences_templateObject19","sequences_templateObject20","refresh","sequences_templateObject21","sequences_templateObject22","sequences_templateObject23","sequences_templateObject24","sequences_templateObject25","handleWatchUpdate","_ref5","Promise","op","currentOperationID","then","_ref6","addOperation","_ref7","created","Date","now","_ref8","putFieldOperation","_ref10","operation_payload","deleteFieldOperation","_ref11","delete","_ref12","unset","updateOperation","equals","sequences_templateObject26","otherwise","handleFieldUpdate","all_fields","fld_id","operationsRecords","operationRecord","hasOwnProperty","obj","collapse","field_id","operation_id","handleChronologyCollapse","startMovingMap","MapPanel_chains_templateObject","doneMovingMap","MapPanel_chains_templateObject2","handleMapClick","recalculateArea","getFieldBoundingBox","validateNewFieldButton","handleLocationFound","endMarkerDrag","chains_templateObject3","startMarkerDrag","chains_templateObject4","markerDragging","handleMapMoved","setFieldOnMapCenter","centroid","tempObject","splice","gjArea","geometry","validateFieldCoordinates","bbox","geojsonPolygon","coords","north","south","east","west","j","computeBoundingBox","c1","c2","chains_templateObject5","handleDrawerOpen","BottomDrawer_chains_templateObject","openBottomDrawerForStatusUpdate","BottomDrawer_chains_templateObject2","BottomDrawer_chains_templateObject3","BottomDrawer_chains_templateObject4","BottomDrawer_chains_templateObject5","_METERS_TO_ACRES","fields-index","toConsumableArray","loadFldData","setCurrentField","fields_sequences_templateObject","fields_sequences_templateObject2","mapOadaToFields","curFields","fieldGroup","field_object","record","farm","centroid_object","geojson_area","reverse","visible","mapOadaToFarms","curFarms","putFarm","_id","disableNewFieldButton","fields_sequences_templateObject3","fields_sequences_templateObject4","putField","farmName","handleFieldSelected","handleFarmSelected","fields_sequences_templateObject5","fields_sequences_templateObject6","handleFieldCleared","marker","saveEditedField","fields_sequences_templateObject7","fields_sequences_templateObject8","fields_sequences_templateObject9","fields_sequences_templateObject10","fields_sequences_templateObject11","fields_sequences_templateObject12","createFieldRecord","_inputText","addNewFarm","farmRecord","_ref13","currentOperationFieldStatus","getCurrentOperationFieldStatus","today","dd","getDate","mm","getMonth","getFullYear","_ref14","fieldName","coordinatesOk","_ref15","_ref16","cancelNewFieldAction","fields_sequences_templateObject13","_ref17","_CURRENT_METADATA","_CURRENT_REDIRECT","md","MobileDetect","navigator","userAgent","mobile","App_sequences_templateObject","options","redirect","token","clearCacheButtonClicked","LocalCache","StorageModule","json","sync","prefix","Module","modules","signOut","Connections_chains_templateObject","Connections_chains_templateObject2","Connections_chains_templateObject3","Connections_chains_templateObject4","Connections_chains_templateObject5","updateOadaDomain","chains_templateObject6","chains_templateObject7","updateOadaFieldsDomain","chains_templateObject8","chains_templateObject9","operationsKeys","userOperations","loadFldListData","chains_templateObject10","setConnection","chains_templateObject11","chains_templateObject12","chains_templateObject13","chains_templateObject14","oadaConnections","operationsconnectionId","chains_templateObject15","chains_templateObject16","cancelConnection","chains_templateObject17","chains_templateObject18","chains_templateObject19","chains_templateObject20","chains_templateObject21","chains_templateObject22","showConnections","chains_templateObject23","chains_templateObject24","SideDrawer_chains_templateObject","saveCurrentSelectionStatusAction","loadOpsData","setCurrentSelectionStatusMarker","saveCurrentSelectionStatus","handleOperationSelected","setCurrentOperation","handleOperationCleared","clearOpsData","_addNewOperation","_operations","strUUID","ops_id","_status","opId","currentSelection","suggestionsOpen","newFieldDisabled","menu","AutocompleteSearch_chains_templateObject","AutocompleteSearch_chains_templateObject2","stringify","handleOperationEdited","_found","_CURRENT_HOST","oada_domain_text","oada_fields_domain_text","oada_domain","oada_fields_domain","records","loading","fieldsChanged","operationClicked","farms","new_field","resized","windowSize","item 1","item 2","item 3","MenuList_sequences_templateObject","_modules","oadaModule","StatsBar","User","FldList","oadaFields","oadaOperators","providers","oadaProvider","Controller","root_module","devtools","muiTheme","createMuiTheme","render","_cerebral_react","controller","MuiThemeProvider_default","components_App","document","getElementById"],"mappings":"4WAAAA,EAAAC,EAAAC,GACA,IACMC,EAAaC,2DAAYC,uBAAyB,6BAClDC,EAAgB,oBAAsBC,SAASC,OAAOC,SAASC,KAAM,IACrEC,EAAWC,EAAQ,MAOVV,EAAA,SACbC,aACAU,aAZmB,KAanBP,gBACAK,WACAG,wBAX8B,oBAY9BC,QAXc,eAYdC,YAXkB,oCAYlBC,oBAX0B,wBAY1BC,gBAXsB,yCCTxBC,EAAOC,QAAU,4hCCAjBpB,EAAAC,EAAAC,GACA,IACMC,EAAaC,2DAAYC,uBAAyB,6BAElDM,EAAWC,EAAQ,MAGVV,EAAA,SACbC,aACAU,aARmB,KASnBP,cAPoB,yCAQpBK,WACAG,wBAP8B,yDCLhCK,EAAOC,QAAU,4hCCAjBpB,EAAAC,EAAAC,GACA,IACMC,EAAaC,2DAAYC,uBAAyB,6BAElDM,EAAWC,EAAQ,MAOVV,EAAA,SACbC,aACAU,aAZmB,KAanBP,cAXoB,oCAYpBK,WACAG,wBAX8B,oCAY9BC,QAXc,eAYdC,YAXkB,oCAYlBC,oBAX0B,wBAY1BC,gBAXsB,yCCTxBC,EAAOC,QAAU,w/LCejB,ICNIC,GDuDEC,uLAEQC,GAAY,IAAAC,EAAAC,KACdC,EAAkDH,EAAlDG,WAAYC,EAAsCJ,EAAtCI,QAASC,EAA6BL,EAA7BK,UAAWC,EAAkBN,EAAlBM,IAAQC,EAD1BC,OAAAC,EAAA,EAAAD,CACoCR,EADpC,4CAEtB,OACEU,EAAAC,EAAAC,cAACC,EAAAF,EAADH,OAAAM,OAAA,CACEC,QAAS,WAAOd,EAAKe,MAAMC,gBAAgB,CAACC,GAAIjB,EAAKe,MAAME,MAC3DC,OAAQ,WAAOlB,EAAKe,MAAMI,iBAAiB,CAACF,GAAIjB,EAAKe,MAAME,MAC3DG,MAXG,gBAYCd,EAJN,CAKEe,SAAUhB,EACVH,WAAUK,OAAAe,EAAA,EAAAf,CAAA,CACRgB,MAAO,CAACC,MAAO,WACfrB,QAAS,CACPsB,MAAOtB,EAAQsB,OAEjBC,aACEjB,EAAAC,EAAAC,cAACgB,EAAA,eAAD,CAAgBC,SAAS,SACvBnB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACEoB,aAAW,kBACXC,UAAW5B,EAAQ6B,WACnBC,QAAU,WACc,cAAlBjC,EAAKe,MAAME,GACbjB,EAAKe,MAAMmB,oBAAoB,CAACC,UAAW,GAAIC,UAAW,cAE1DpC,EAAKe,MAAMsB,gBAAgB,CAACF,UAAW,GAAIC,UAAW,YAI1D3B,EAAAC,EAAAC,cAAC2B,GAAA5B,EAAD,SAIHR,GAELqC,MAAyB,cAAlBtC,KAAKc,MAAME,GAAsBb,EAAY,GAAK,YAAe,QACxEoC,gBAAiB,CAACjB,MAAO,CAACC,MAAO,SAAUiB,QAAQ,6CAK1CC,GAAY,IAAAC,EAAA1C,KACrB2C,EAAc,GAGlB,MAAsB,cAAlB3C,KAAKc,MAAME,IACb2B,EAAcrC,OAAOsC,OAAO5C,KAAKc,MAAM+B,sBAAwB,IAAIC,OAAO,SAAAC,GAAU,MACnE,KAAfN,GAAqBO,IAAEC,KAAKP,EAAK5B,MAAM+B,qBAAsB,SAAAK,GAAC,OAAIA,EAAEZ,QAAUG,KAE5EM,EAAWT,MAAMa,cAAcC,SAASX,EAAWY,OAAOF,iBAkB9B,SAA7BnD,KAAKc,MAAMwC,eACZX,EAAYY,QAAQ,CAACC,OAAU,MAAOC,KAAM,YAAanB,MAAO,sBAE3DK,GAGa,cAAlB3C,KAAKc,MAAME,KACb2B,EAAcrC,OAAOsC,OAAO5C,KAAKc,MAAM4C,kBAAkBZ,OAAO,SAAAC,GAAU,MACzD,KAAfN,GAAqBO,IAAEC,KAAKP,EAAK5B,MAAM4C,iBAAkB,SAAAR,GAAC,OAAIA,EAAEZ,QAAUG,KAC1EM,EAAWT,MAAMa,cAAcC,SAASX,EAAWY,OAAOF,kBAIhDI,QAAQ,CAACC,OAAU,MAAOC,KAAM,QAASnB,MAAO,kBACrDK,QART,2CAYegB,GAAQ,IAAAC,EAAA5D,KACf+C,EAAiEY,EAAjEZ,WAAYc,EAAqDF,EAArDE,MAAOC,EAA8CH,EAA9CG,UACrBC,EADmEJ,EAAnCK,mBACKH,EACrCI,EAFmEN,EAAjBO,eAEpBnB,EAAWT,MAE/C,MAAI,WAAYS,GAAoC,QAAtBA,EAAWS,OAErChD,EAAAC,EAAAC,cAACyD,EAAA,SAAD7D,OAAAM,OAAA,GACMkD,EADN,CAEEM,IAAKrB,EAAWT,MAChBN,QAAS,SAACqC,GACW,cAAlBT,EAAK9C,MAAME,GACV4C,EAAK9C,MAAMwD,oBAAoB,IAC/BV,EAAK9C,MAAMyD,gBAAgB,KAG/BC,SAAUT,EACVU,UAAU,MACVnD,MAAO,CACLoD,QAAS,QACTnD,MAAO,QACPoD,UAAW,SACXC,WAAYX,EAAa,IAAM,OAGhClB,EAAWT,OAKd9B,EAAAC,EAAAC,cAACyD,EAAA,SAAD7D,OAAAM,OAAA,GACMkD,EADN,CAEEM,IAAKrB,EAAWT,MAChBN,QAAS,SAACqC,GACW,cAAlBT,EAAK9C,MAAME,GACV4C,EAAK9C,MAAM+D,kBAAkB,CAACC,KAAM/B,IACpCa,EAAK9C,MAAMiE,cAAc,CAACD,KAAM/B,KAEpCyB,SAAUT,EACVU,UAAU,MACVnD,MAAO,CACLoD,QAAS,QACTE,WAAYX,EAAa,IAAM,OAGhClB,EAAWT,+CAMJqB,GAAQ,IAAAqB,EAAAhF,KACdE,EAAoDyD,EAApDzD,QAAS+E,EAA2CtB,EAA3CsB,qBAAsBC,EAAqBvB,EAArBuB,iBACvC,OACE1E,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACEoB,aAAW,MACXC,UAAW5B,EAAQiF,OACnBC,SAA4B,cAAlBpF,KAAKc,MAAME,GAAqBiE,EAAuBC,EACjElD,QACoB,cAAlBhC,KAAKc,MAAME,GACT,WAAOgE,EAAKlE,MAAMwD,oBAAoB,KACtC,WAAOU,EAAKlE,MAAMyD,gBAAgB,MAGtC/D,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAACC,MAAS,QAAS+D,SAAY,KAA5C,wDAKW3B,GAAQ,IAAA4B,EAAAvF,KACfE,EAAYyD,EAAZzD,QACR,OACEM,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACEoB,aAAW,SACXuD,SAA4B,cAAlBpF,KAAKc,MAAME,IAAuBhB,KAAKc,MAAM0E,oBAAwBxF,KAAKc,MAAM2E,eAC1F3D,UAAW5B,EAAQiF,OACnBnD,QACoB,cAAlBhC,KAAKc,MAAME,GACT,SAACqD,GAAYkB,EAAKzE,MAAM4E,qBAAqB,CAACrB,MAAOA,KACrD,SAACA,GAAYkB,EAAKzE,MAAM6E,iBAAiB,CAACtB,MAAOA,MAGrD7D,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAACC,MAAS,QAAS+D,SAAY,KAA5C,+DAMJ,IAAMM,EACsC,KAAzC5F,KAAKc,MAAM+E,mBAAmBxC,QAE7B/C,OAAOsC,OAAO5C,KAAKc,MAAM+B,sBAAsBiD,IAAI,SAAAC,GACjD,OAAOA,EAAUzD,MAAMa,gBACtBC,SAASpD,KAAKc,MAAM+E,mBAAmBxC,OAAOF,eAGjDyC,GAAOI,QAAQC,IAAI,wBAClBL,GAAOI,QAAQC,IAAI,wDAIjB,IAAAC,EAAAlG,KAAAmG,EAC2BnG,KAAKc,MAA/BZ,EADDiG,EACCjG,QAASkG,EADVD,EACUC,aAEjB,OACE5F,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CACEC,OAA0B,cAAlBtG,KAAKc,MAAME,GAAqBhB,KAAKc,MAAMyF,0BAA4BvG,KAAKc,MAAM0F,sBAC1FtC,aAAgC,cAAlBlE,KAAKc,MAAME,GAAqBhB,KAAKc,MAAM0E,mBAAqBxF,KAAKc,MAAM2E,eACzFhD,WAA8B,cAAlBzC,KAAKc,MAAME,GAAqBhB,KAAKc,MAAM+E,mBAAqB7F,KAAKc,MAAM2F,eACvFC,aAAc,SAAC5B,GAAD,OAAmB,MAARA,EAAe,GAAKA,EAAKxC,OAClDqE,cAAe,SAACC,EAASC,GAEvB,IAAMpD,EAA0B,cAAlByC,EAAKpF,MAAME,GAAsB,YAAc,QAC7D,OAAQ4F,EAAQnD,MACd,KAAKqD,IAAUC,iBAAiBC,aAChC,KAAKF,IAAUC,iBAAiBE,UACjB,cAATxD,EACFyC,EAAKpF,MAAM+D,kBAAkB,CAACC,KAAM8B,EAAQ1C,eAE5CgC,EAAKpF,MAAMiE,cAAc,CAACD,KAAM8B,EAAQ1C,eAE1C,MACF,KAAK4C,IAAUC,iBAAiBG,YACjB,cAATzD,EACFyC,EAAKpF,MAAMmB,oBAAoB,CAACC,UAAW0E,EAAQnE,WAAYN,UAAWsB,IAE1EyC,EAAKpF,MAAMsB,gBAAgB,CAACF,UAAW0E,EAAQnE,WAAYN,UAAWsB,IAExE,MACF,KAAKqD,IAAUC,iBAAiBI,QAChC,KAAKL,IAAUC,iBAAiBK,UACjB,cAAT3D,EACKyC,EAAKpF,MAAM0E,oBAAuBU,EAAKpF,MAAM+E,mBAI7CK,EAAKpF,MAAM2E,gBAChBS,EAAKpF,MAAMiE,cAAc,CAACD,KAAMoB,EAAKpF,MAAM4C,iBAAiBwC,EAAKpF,MAAM2E,qBAShF,SAAA4B,GAAA,IAAGC,EAAHD,EAAGC,cAAeC,EAAlBF,EAAkBE,aAAcjB,EAAhCe,EAAgCf,OAAQ7D,EAAxC4E,EAAwC5E,WAAYyB,EAApDmD,EAAoDnD,aAAcF,EAAlEqD,EAAkErD,iBAAlE,OACCxD,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQsH,UACrBtB,EAAKuB,YAAY,CAChBtH,UAAWiG,EACXsB,WAAW,EACXxH,UACAD,WAAYqH,EAAc,CACxBK,YAAgC,cAAlBzB,EAAKpF,MAAME,GAAqB,YAAiC,cAAlBkF,EAAKpF,MAAME,GAAqB,QAAUkF,EAAKpF,MAAME,GAClHA,GAAI,uBAAyBkF,EAAKpF,MAAME,QAI7CsF,EACC9F,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,CAAOoH,QAAM,EAAC/F,UAAW5B,EAAQ4H,0BAC/BtH,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQ6H,iBACrB7B,EAAK8B,eAAevF,GAAYqD,IAAI,SAAC/C,EAAYc,GAAb,OACnCqC,EAAK+B,iBAAiB,CACpBlF,aACAc,QACAC,UAAWyD,EAAa,CACtBzC,KAAM/B,IAERiB,mBACAE,qBAKN,eArQiBgE,IAAMC,WAiRxBC,qBACb,CACEvF,qBAA4BwF,gBAARC,MACpBhF,cAA4B+E,gBAAfE,MACb/C,mBAA4B6C,gBAAVG,MAClB3C,mBAA4BwC,gBAAVI,MAClBlC,0BAA4B8B,gBAAHK,MACzBhF,iBAA4B2E,gBAAZM,MAChBlD,eAA4B4C,gBAAdO,MACdpC,sBAA4B6B,gBAAPQ,MACrBpC,eAA4B4B,gBAAdS,KAAqCT,gBAArCU,OAEd9G,oBAA4B+G,iBAATC,MACnB7G,gBAA4B4G,iBAAbE,MACf5E,oBAA4B0E,iBAATG,MACnBzD,qBAA4BsD,iBAARI,MACpBzD,iBAA4BqD,iBAAZK,MAChBtI,gBAA4BiI,iBAAbM,MACfpI,iBAA4B8H,iBAAZO,MAChB1E,kBAA4BmE,iBAAXQ,MACjBC,iBAA4BT,iBAAZU,MAChBnF,gBAA4ByE,iBAAbW,MACf5E,cAA4BiE,iBAAfY,MACbC,aAA4Bb,iBAAhBc,OAGdC,qBA5Va,SAAAC,GAAK,MAAM,CACxBC,UAAW,CACTvF,QAAS,OACTwF,cAAe,MACfC,SAAU,EACVC,WAAY,SACZC,OAAQ,IACRC,MAAO,IAET9C,SAAU,CACR9C,QAAS,OACTwF,cAAe,MACfC,SAAU,EACVC,WAAY,UAEdtC,yBAA0B,CACxBnG,SAAU,WACV2I,MAAO,IACPC,UAAgC,GAArBP,EAAMQ,QAAQC,KACzBC,aAAmC,EAArBV,EAAMQ,QAAQC,KAC5BE,WAAY,GACZC,YAAa,EACbC,OAAQ,GAEV9H,WAAY,CACV2B,QAAS,SAEXqD,gBAAiB,CACfwC,UAAgC,GAArBP,EAAMQ,QAAQC,KACzBC,aAAmC,EAArBV,EAAMQ,QAAQC,KAC5BE,WAAY,EACZC,YAAa,EACbE,QAAS,EACTC,cAAe,QAEjB3F,SAAU,CACR4F,cAAe,OACfC,QAAS,GACTC,YAAa,QAEfnJ,WAAY,CACV4I,WAAY,EACZC,YAAa,KAkTI,CAAEO,WAAW,GAAhCpB,CAAwClK,+rBChW1C,IAOMuL,8MAEJC,YAAc,WACZzL,GAAW,QAGb0L,eAAiB,SAAAjH,GACfzE,GAAWyE,EAAMkH,uFAGV,IAAA7I,EAAA1C,KAECE,EAAYF,KAAKc,MAAjBZ,QAGR,OADAN,GAAWI,KAAKc,MAAM0K,KAAO5L,GAAW,KAEtCY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACE2D,IAAK,EACL7C,MAAM,UACNM,aAAW,qBACXb,GAAG,qBACHyK,YAAW,cACXC,gBAAc,OACd1J,QAAS,SAAC2J,GAASjJ,EAAK4I,eAAeK,GAAMjJ,EAAK5B,MAAM8K,mBAAmB,KAC3E9J,UAAW5B,EAAQ6B,WACnBqD,SAC+B,SAA7BpF,KAAKc,MAAMwC,eAA4BtD,KAAKc,MAAM+K,eAAiB7L,KAAKc,MAAMgL,cAGhFtL,EAAAC,EAAAC,cAACqL,GAAAtL,EAAD,OAEAT,KAAKc,MAAM0K,KACXhL,EAAAC,EAAAC,cAACsL,GAAA,KAAD,CACEhL,GAAG,cACHwK,KAAMxL,KAAKc,MAAM0K,KACjBS,QAASjM,KAAKc,MAAM8K,mBACpBhM,SAAUA,IAEVY,EAAAC,EAAAC,cAACyD,EAAA,SAAD,CAAUnC,QAAS,WAAMU,EAAK5B,MAAM8K,mBAAmB,IAAKlJ,EAAK5B,MAAMoL,mBAAmB,MAA1F,gBACA1L,EAAAC,EAAAC,cAACyD,EAAA,SAAD,CAAUnC,QAAS,WAAMU,EAAK5B,MAAM8K,mBAAmB,IAAKlJ,EAAK5B,MAAMqL,gBAAgB,MAAvF,eACA3L,EAAAC,EAAAC,cAACyD,EAAA,SAAD,CAAUnC,QAAS,WAAMU,EAAK5B,MAAM8K,mBAAmB,IAAKlJ,EAAK5B,MAAMqL,gBAAgB,MAAvF,WAEA,aA3CWjE,IAAMC,WAsDdC,qBACb,CACEgE,UAAoB/D,gBAAXgE,MACTC,QAAoBjE,gBAAbkE,MACPf,KAAoBnD,gBAAhBmE,MAEJC,eAAoBzD,iBAAN0D,MACdR,mBAAoBlD,iBAAF2D,MAClBR,gBAAoBnD,iBAAL4D,MACfhB,mBAAoB5C,iBAAF6D,OAEpB9C,qBAxEa,SAAAC,GAAK,MAAK,CACvBjI,WAAY,CACV4I,WAAY,EACZC,YAAa,KAqEI,CAACO,WAAW,GAA/BpB,CAAsCqB,unFClExC,IA8BM0B,oLACK,IAAA/M,EAAAC,KACCE,EAAYF,KAAKc,MAAjBZ,QAEF6M,EACJvM,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACE2D,IAAK,EACL7C,MAAM,UACNM,aAAW,cACXG,QAAS,WACPjC,EAAKe,MAAMkM,qBAAqB,KAElClL,UAAWmL,IACT/M,EAAQ6B,WACR/B,KAAKc,MAAMoM,kBACTlN,KAAKc,MAAMqM,gBACXjN,EAAQkN,MACTpN,KAAKc,MAAMoM,kBAAoBhN,EAAQkF,WAG1C5E,EAAAC,EAAAC,cAAC2M,EAAA5M,EAAD,OAIE6M,EACJ9M,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACE2D,IAAK,EACL7C,MAAM,UACNM,aAAW,cACXG,QAAS,kBAAMjC,EAAKe,MAAMyM,mBAAmB,KAC7CzL,UAAW5B,EAAQ6B,YAEnBvB,EAAAC,EAAAC,cAAC8M,EAAA/M,EAAD,OAIEgN,EACJjN,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACE2D,IAAK,EACL7C,MAAM,UACNM,aAAW,cACXG,QAAS,kBAAMjC,EAAKe,MAAMyM,mBAAmB,KAC7CzL,UAAW5B,EAAQ6B,WACnBqD,SAAuC,SAA7BpF,KAAKc,MAAMwC,eANvB,WAYIqK,EACJnN,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACE2D,IAAK,EACL7C,MAAM,UACNM,aAAW,cACXG,QAAS,kBAAMjC,EAAKe,MAAMyD,gBAAgB,KAC1CzC,UAAW5B,EAAQ6B,WACnBqD,SAC+B,SAA7BpF,KAAKc,MAAMwC,eAA4BtD,KAAKc,MAAM+K,eAAiB7L,KAAKc,MAAMgL,cAGhFtL,EAAAC,EAAAC,cAACkN,GAAAnN,EAAD,OAIEoN,EACJrN,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACE2D,IAAK,EACL7C,MAAM,UACNM,aAAW,cACXG,QAAS,kBAAMjC,EAAKe,MAAMyD,gBAAgB,KAC1CzC,UAAW5B,EAAQ6B,WACnBqD,SAC+B,SAA7BpF,KAAKc,MAAMwC,eAA4BtD,KAAKc,MAAM+K,eAAiB7L,KAAKc,MAAMgL,cAPlF,aAcIgC,EACJtN,EAAAC,EAAAC,cAACqN,GAAD,CACE/M,GAAG,YACHM,MAAO,CAAEgJ,MAAO,KAChBlE,cAAc,IAIlB,OACE5F,EAAAC,EAAAC,cAACsN,EAAAvN,EAAD,CAAQqB,UAAW5B,EAAQ+N,OAAQtM,SAAS,UAC1CnB,EAAAC,EAAAC,cAACwN,EAAAzN,EAAD,CACEqB,UAAW5B,EAAQ+N,OACnBE,iBACInO,KAAKc,MAAMqM,gBAAkBnN,KAAKc,MAAMoM,mBAG3CH,EAEDvM,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CACE4N,QAAQ,QACR9M,MAAM,UACND,MAAO,CAAEgN,MAAO,QAChBxM,UAAW5B,EAAQqO,WACnBC,QAAM,GAEJxO,KAAKc,MAAMqM,eAA6B,KAAZW,GAG5B9N,KAAKc,MAAM2N,SAAsC,aAA3BzO,KAAKc,MAAM4N,YAA8BpB,EAAkBG,EACjFzN,KAAKc,MAAM2N,SAAsC,aAA3BzO,KAAKc,MAAM4N,YAA8Bf,EAAYE,EAC7ErN,EAAAC,EAAAC,cAACiO,GAAD,eA7GUzG,IAAMC,WA0HbC,qBACb,CACE7D,gBAA4ByE,iBAAb4F,MACf3M,oBAA4B+G,iBAAT6F,MACnBvK,oBAA4B0E,iBAAT8F,MACnBpJ,qBAA4BsD,iBAAR+F,MACpBtF,iBAA4BT,iBAAZgG,MAChB9C,mBAA4BlD,iBAAViG,MAClBjC,qBAA4BhE,iBAARkG,MACpB3B,mBAA4BvE,iBAAVmG,MAClBC,eAA4BpG,iBAAdqG,MACdC,kBAA4BtG,iBAAXuG,MACjBC,mBAA4BxG,iBAAVyG,MAClBC,iBAA4B1G,iBAAZ2G,MAChB/D,mBAA4B5C,iBAAV4G,MAElBzC,eAA4B9E,gBAAdwH,MACdC,WAA4BzH,gBAAlB0H,MACVzM,cAA4B+E,gBAAf2H,MACb1Q,QAA4B+I,gBAArB4H,MACP1Q,YAA4B8I,gBAAjB6H,MACXC,YAA4B9H,gBAAjB+H,MACXtE,aAA4BzD,gBAAhBgI,MACZ3B,YAA4BrG,gBAAjBiI,MACX7B,QAA4BpG,gBAArBkI,MACPC,sBAA4BnI,gBAAPoI,MACrB5E,cAA4BxD,gBAAfqI,MACb7K,mBAA4BwC,gBAAVsI,MAClBzD,iBAA4B7E,gBAAZuI,MAChBrK,0BAA4B8B,gBAAHwI,MACzBC,aAA4BzI,gBAAhB0I,OAEdhH,qBAxLa,SAAAC,GAAK,MAAK,CACvBiE,OAAQ,CACNvJ,QAAS,OACTsM,WAAYhH,EAAMiH,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQnH,EAAMiH,YAAYE,OAAOC,MACjCC,SAAUrH,EAAMiH,YAAYI,SAASC,gBAEvCjH,OAAQ,GACRkH,MAAO,GAETC,QAAS,GAETzP,WAAY,CACV4I,WAAY,EACZC,YAAa,GAEfwC,KAAM,CACJ1I,QAAS,QAEXU,SAAU,CACR4F,cAAe,OACfC,QAAS,GACTC,YAAa,QAEfqD,WAAY,CACVkD,KAAM,EACNnH,MAAO,OA8JU,CAAEa,WAAW,GAAhCpB,CAAwC+C,2sBC7L3B1E,yBACb,CACEsJ,eAA0BrJ,gBAAZsJ,MACdC,qBAA0BvJ,gBAANwJ,MACpBC,KAA0BzJ,gBAAtB0J,MAEJC,cAA0BhJ,iBAAbiJ,MACbC,cAA0BlJ,iBAAbmJ,MACbC,kBAA0BpJ,iBAATqJ,MACjBC,wBAA0BtJ,iBAAHuJ,OATL,SAAAC,GAAA,SAAAC,IAAA,OAAAnS,OAAAoS,EAAA,EAAApS,CAAAN,KAAAyS,GAAAnS,OAAAqS,EAAA,EAAArS,CAAAN,KAAAM,OAAAsS,EAAA,EAAAtS,CAAAmS,GAAAI,MAAA7S,KAAA8S,YAAA,OAAAxS,OAAAyS,EAAA,EAAAzS,CAAAmS,EAAAD,GAAAlS,OAAA0S,EAAA,EAAA1S,CAAAmS,EAAA,EAAArO,IAAA,SAAAjD,MAAA,WAaT,IAAApB,EAAAC,KACP,OACEQ,EAAAC,EAAAC,cAACuS,GAAAxS,EAAD,CAAQ+K,KAAMxL,KAAKc,MAAMgR,KAAMhQ,UAAW,sBACxCtB,EAAAC,EAAAC,cAACwS,GAAA,YAAD,CAAalS,GAAG,sBACb,sBAAuB,KAE1BR,EAAAC,EAAAC,cAACwS,GAAA,cAAD,iDAGA1S,EAAAC,EAAAC,cAACwS,GAAA,cAAD,KACE1S,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsL,GAAA,UAAD,CACE1J,MAAM,SACNnB,MAAOnB,KAAKc,MAAM4Q,eAClByB,SAAU,SAAAC,GAAC,OAAIrT,EAAKe,MAAMsR,kBAAkB,CAAEjR,MAAOiS,EAAEC,OAAOlS,SAC9DG,MAAO,CAAEgJ,MAAO,SAYtB9J,EAAAC,EAAAC,cAACwS,GAAA,cAAD,KACE1S,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACEuB,QAAS,WACPjC,EAAKe,MAAMoR,cAAc,KAE3B3Q,MAAM,aAJR,UAQAf,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACEuB,QAAS,WAAOjC,EAAKe,MAAMkR,cAAc,KACzCzQ,MAAM,YACN+R,WAAS,GAHX,gBAjDUb,EAAA,CAYMvK,IAAMC,yoBCXlC,IAUMoL,sLAEO5P,GAAQ,IAAA5D,EAAAC,KACVoE,EAA4CT,EAA5CS,IAAKoP,EAAuC7P,EAAvC6P,OAAQC,EAA+B9P,EAA/B8P,OAAQC,EAAuB/P,EAAvB+P,WAAYxT,EAAWyD,EAAXzD,QAClCyT,EAAO3T,KAAKc,MAAMyS,QAAQnP,GAAnB,OAAkCwP,OAAO,SAACnT,EAAGoT,GAAO,OAAOpT,GAAKoT,EAAEC,SAAWD,EAAEC,SAASH,KAAO,IAAK,GAC3GI,EAAapQ,EAAM,WACPqQ,KAAKC,MAAiD,KAAzCN,EAAOhQ,EAAM,WAAiB,OAAoB,IAAM,EACvF,OACEnD,EAAAC,EAAAC,cAAA,OAAK0D,IAAK,UAAYA,GACpB5D,EAAAC,EAAAC,cAACwT,GAAA,SAAD,CACE/O,QAAM,EACN7D,MAAO,CAACC,MAAOiS,GACfxR,QAAU,WAAOjC,EAAKe,MAAMqT,eAAe,CAACC,OAAQhQ,MAEpD5D,EAAAC,EAAAC,cAACwT,GAAA,aAAD,CACEG,QACE7T,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAY4N,QAAQ,QAAQ/M,MAAO,CAACC,MAAOiS,IACxCE,EAAa,KAAO1T,KAAKc,MAAMyS,QAAQnP,GAAnB,OAAkCkQ,OAAS,KAGpEC,UACE/T,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAY4N,QAAQ,UAAU/M,MAAO,CAACC,MAAOkS,IACpCO,KAAKC,MAAyB,KAAlBN,EAAO,OAAkB,KAASI,EAAU,EAAK,WAAaA,EAAU,KAAO,aAIvG/T,KAAKc,MAAMyS,QAAQnP,GAAnB,OAAkCkQ,OAAS,EACzCtU,KAAKc,MAAMyS,QAAQnP,GAAnB,SAEC5D,EAAAC,EAAAC,cAAC8T,GAAA/T,EAAD,MADAD,EAAAC,EAAAC,cAAC+T,GAAAhU,EAAD,MAEE,MAERD,EAAAC,EAAAC,cAACgU,GAAAjU,EAAD,CAAUkU,IAAM3U,KAAKc,MAAMyS,QAAQnP,GAAnB,SAAsCwQ,QAAQ,OAAOC,eAAa,GAChFrU,EAAAC,EAAAC,cAACoU,GAAArU,EAAD,CAAMgE,UAAU,MAAMsQ,gBAAc,GACjC/U,KAAKc,MAAMyS,QAAQnP,GAAnB,OAAkC0B,IAAI,SAAAkP,GACrC,IAAMlB,EAAW9Q,IAAEiS,UAAUD,EAAYlB,WAAa,GAEtD,OADAA,EAASH,KAAOG,EAASH,MAAQ,EAE/BnT,EAAAC,EAAAC,cAACwT,GAAA,SAAD,CACE/O,QAAM,EAAC7D,MAAO,CAACC,MAAOiS,GACtB1R,UAAW5B,EAAQgV,OACnB9Q,IAAK,SAAW4Q,EAAYhU,GAC5BgB,QAAS,cAETxB,EAAAC,EAAAC,cAACwT,GAAA,aAAD,CACEiB,mBAAiB,EACjBd,QACE7T,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAY4N,QAAQ,QAAQ/M,MAAO,CAACC,MAAOiS,IACxCwB,EAAYI,KAAO,KAAQpB,KAAKC,MAAkC,KAA3BH,EAASH,KAAO,OAAkB,IAAO,WAGrFY,UACE/T,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAY4N,QAAQ,UAAU/M,MAAO,CAACC,MAAOkS,IAA7C,UACUuB,EAAYK,OAEtB7U,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAY4N,QAAQ,UAAU/M,MAAO,CAACC,MAAOkS,IAA7C,cACcuB,EAAYM,8CAavC,IAAA5S,EAAA1C,KACCE,EAAYF,KAAKc,MAAjBZ,QACFyD,EAAS,CACb4R,UAAW,CACT/B,OAAQ,UACRE,WAAY,YACZD,OAAQ,WAEV+B,QAAS,CACPhC,OAAQ,UACRE,WAAY,UACZD,OAAQ,WAEVgC,QAAS,CACPjC,OAAQ,UACRE,WAAY,UACZD,OAAQ,WAEViC,UAAW,CACTlC,OAAQ,UACRE,WAAY,YACZD,OAAQ,WAEVkC,WAAYrV,OAAOsV,KAAK5V,KAAKc,MAAMyS,SAAW,IAAIzN,IACpC,SAAA1B,GACE,OAAO1B,EAAK5B,MAAMyS,QAAQnP,GAAnB,OAAkCwP,OAAO,SAACnT,EAAGoT,GAClD,OAAOpT,GAAKoT,EAAEC,SAAWD,EAAEC,SAASH,KAAO,IAAK,KACjDC,OAAO,SAACnT,EAAGoT,GACR,OAAOpT,EAAIoT,GAAI,IAGrC,OACIrT,EAAAC,EAAAC,cAACoU,GAAArU,EAAD,CACEgE,UAAU,MACV3C,UAAW5B,EAAQ2V,KACnBC,UACEtV,EAAAC,EAAAC,cAACqV,GAAAtV,EAAD,CAAegE,UAAU,MAAMnD,MAAO,CAACC,MAAO,UAAWmD,QAAS,OAAQ0F,WAAY,WACpF5J,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAY4N,QAAQ,WAEhB/N,OAAOsV,KAAK5V,KAAKc,MAAMyS,SAAW,IAAIzN,IAAI,SAAA1B,GACxC,OAAO1B,EAAK5B,MAAMyS,QAAQnP,GAAnB,OAAkCkQ,SAASV,OAAO,SAACnT,EAAGoT,GAC3D,OAAOpT,EAAIoT,GAAI,GACnB,YAAeG,KAAKC,MAAyC,KAAlCtQ,EAAM,WAAiB,OAAkB,IAAO,aAKhFrD,OAAOsV,KAAK5V,KAAKc,MAAMyS,SAAW,IAAIzN,IAAI,SAAA1B,GACzC,OAAO1B,EAAKsT,WAAL1V,OAAAe,EAAA,EAAAf,CAAA,CACL8D,IAAKA,EACLlE,QAASA,EACTyV,WAAYhS,EAAM,YACfA,EAAOS,eA1HJ8D,IAAMC,WAuIbC,qBAAQ,CACnB6N,qBAAsB5N,gBAAF6N,KAA6B7N,gBAA7B8N,OACpB5C,QAASlL,gBAAF+N,MAEPjC,eAAgBnL,iBAAFqN,MACdC,YAAatN,iBAAFuN,OAEbxM,qBAxJa,SAAAC,GAAK,MAAK,CACvB6L,KAAM,CACJW,SAAU,IACVC,gBAAiBzM,EAAM0M,QAAQC,WAAWC,OAE5C1B,OAAQ,CACN2B,YAAkC,EAArB7M,EAAMQ,QAAQC,QAkJV,CAAEU,WAAW,GAAhCpB,CAAwCwJ,upBC5J1C,SAASuD,GAATzP,GAAyC,IAAjB0P,EAAiB1P,EAAjB0P,SAAUC,EAAO3P,EAAP2P,IAChC,OACExW,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAYgE,UAAU,MAAMuS,IAAKA,EAAK1V,MAAO,CAAEwJ,QAAS,IACrDiM,GAUP,IAsCME,oLAEK,IAAAlX,EAAAC,KAAAmG,EACoBnG,KAAKc,MAAxBZ,EADDiG,EACCjG,QAAS8J,EADV7D,EACU6D,MACXkN,EAAY1W,EAAAC,EAAAC,cAACyW,GAAD,MAIlB,OACE3W,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQ2V,MACtBrV,EAAAC,EAAAC,cAAC0W,GAAA3W,EAAD,CACE4W,KAA0B,QAApBrN,EAAMsN,UAAsB,YAAc,IAChDzT,MAAO7D,KAAKc,MAAMyW,SAClBC,cAAe,SAAC3T,GAAW9D,EAAKe,MAAM2W,kBAAkB,CAAC5T,MAAOA,KAChEvC,MAAO,CAACwJ,QAAS,QAGftK,EAAAC,EAAAC,cAACoW,GAAD,CAAcE,IAAKhN,EAAMsN,WACpBJ,YAlBMhP,IAAMC,WAqDdC,qBACb,CACEmP,SAAoBlP,gBAAZqP,MACRC,iBAAoBtP,gBAAJuP,KAA2BvP,gBAA3BwP,OAEhBC,kBAAoB9O,iBAAH+O,MACjBC,aAAoBhP,iBAARiP,MACZR,kBAAoBzO,iBAAHkP,MACjBC,kBAAoBnP,iBAAHoP,OAEnBrO,qBArGa,SAAAC,GAAK,MAAK,CACvB6L,KAAM,CACJY,gBAAiBzM,EAAM0M,QAAQC,WAAWC,MAC1CtM,MAAO,IACPuM,YAAa,OAEf5M,UAAW,CACTvF,QAAS,OACTwF,cAAe,MACfC,SAAU,EACVC,WAAY,SACZiO,eAAgB,aAChBhO,OAAQ,GACRC,MAAO,KAET9C,SAAU,CACR9C,QAAS,OACTwF,cAAe,MACfC,SAAU,EACVC,WAAY,SACZyM,YAAa,GACbxM,OAAQ,GACRC,MAAO,KAETlF,SAAU,CACR4F,cAAe,OACfC,QAAS,GACTC,YAAa,QAEfoN,eAAgB,CACd5T,QAAS,OACT2T,eAAgB,aAChBnO,cAAe,SACf2M,YAAa,OACbtM,UAAWP,EAAMQ,QAAQC,QAmER,CAAEU,WAAW,GAAhCpB,CAAwCkN,+XC/G1C,IA8BMsB,oLAEI,IAAAxY,EAAAC,KACEE,EAAYF,KAAKc,MAAjBZ,QACF4N,EAAatN,EAAAC,EAAAC,cAACqN,GAAD,CAAoB/M,GAAG,cACpCwX,EAAahY,EAAAC,EAAAC,cAAC+X,GAAD,MAEnB,OACEjY,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACE4N,QAAQ,aACRnO,QAAS,CACP0W,MAAO1W,EAAQyY,aAEjBC,OAAQ,OACRpN,KAAMxL,KAAKc,MAAMqM,kBAAsBnN,KAAKc,MAAMoM,kBAElD1M,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQ2Y,aACtBrY,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQ4Y,cACtBtY,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQoY,gBACvB9X,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAY4N,QAAQ,QAAQG,QAAM,GAC/BV,IAGNtN,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAYuB,QAAS,WAAOjC,EAAKe,MAAMkM,qBAAqB,MAC1DxM,EAAAC,EAAAC,cAACqY,GAAAtY,EAAD,CAAiBa,MAAO,CAACC,MAAS,UAAW+D,SAAY,QAG1DkT,WA3BctQ,IAAMC,WAuChBC,qBACd,CACG+E,eAAsB9E,gBAAR2Q,MACd9L,iBAAsB7E,gBAAN4Q,MAEhBjM,qBAAsBhE,iBAAFkQ,MACpBC,eAAsBnQ,iBAARoQ,OAEjBrP,qBA3Ec,SAAAC,GAAK,MAAK,CACvBoD,KAAM,CACJ1I,QAAS,QAEXiU,YAAa,CACXrO,MAPgB,IAQhBmM,gBAAiB,WAEnBqC,aAAaxY,OAAAe,EAAA,EAAAf,CAAA,CACXoE,QAAS,OACT0F,WAAY,SACZF,cAAe,MACfmO,eAAgB,aAChBxB,YAAa,QACV7M,EAAMqP,OAAOC,SAElBT,YAAa,CACX/N,QAAS,OAEXwN,eAAgB,CACf5T,QAAS,OACR2T,eAAgB,aACjBnO,cAAe,SACdK,UAAWP,EAAMQ,QAAQC,KACzBH,MAAO,OAmDS,CAAEa,WAAW,GAAhCpB,CAAwCwO,giFCzEjCgB,GAAYC,KAAZD,QAoCFE,8LACe9N,GAEjB3L,KAAKc,MAAM4Y,+BACP1Z,KAAKc,MAAM6Y,eAER3Z,KAAKc,MAAM8Y,QAAW5Z,KAAKc,MAAM+Y,UAG/BlO,EAAImO,cAAczG,OAAO0G,cAG3BpO,EAAImO,cAAczG,OAAO0G,aAAajY,UAAUsB,SAAS,WAF1DpD,KAAKc,MAAMkZ,eAAe,CAAEC,GAAI,CAACtO,EAAIuO,OAAOC,IAAKxO,EAAIuO,OAAOE,oDAWlEpa,KAAKqa,KAAKvU,IAAIwU,eAAeC,0CAGtB,IAAAxa,EAAAC,KACCE,EAAYF,KAAKc,MAAjBZ,QAEFsa,EAAa,CACjBjF,UAAW,CACT/B,OAAQ,UACRE,WAAY,YACZD,OAAQ,WAEV+B,QAAS,CACPhC,OAAQ,UACRE,WAAY,UACZD,OAAQ,WAEVgC,QAAS,CACPjC,OAAQ,UACRE,WAAY,UACZD,OAAQ,WAEViC,UAAW,CACTlC,OAAQ,UACRE,WAAY,YACZD,OAAQ,YAIRgH,EAAa,GACbza,KAAKc,MAAM6Y,cAEX3Z,KAAKc,MAAM4Z,cACX1a,KAAKc,MAAM4Z,aAAa5G,UACxB9T,KAAKc,MAAM4Z,aAAa5G,SAAS6G,QAAQC,YAAY,GAAGtG,OAAS,IAEjEmG,EAAa,GACbza,KAAKc,MAAM4Z,aAAa5G,SAAS6G,QAAQC,YAAY,GAAGC,QACtD,SAACZ,EAAIa,GACHL,EAAWM,KACTva,EAAAC,EAAAC,cAACsa,GAAA,EAAD,CACElZ,UAAW,wBACXsC,IAAKrE,EAAKe,MAAMma,WAAa,IAAMH,EACnCnZ,SAAU,CAACsY,EAAG,GAAIA,EAAG,IACrB1Y,MACExB,EAAKe,MAAM0E,oBACXzF,EAAKe,MAAMoa,cAAcnb,EAAKe,MAAM0E,qBACpCzF,EAAKe,MAAMoa,cAAcnb,EAAKe,MAAM0E,oBACjC2V,OAAOpb,EAAKe,MAAMma,YACjBlb,EAAKe,MAAMoa,cAAcnb,EAAKe,MAAM0E,oBACjC2V,OAAOpb,EAAKe,MAAMma,YAAY7G,OACjC,YAENgH,WAAW,EACXC,OAAQ,SAAAjI,GACNrT,EAAKe,MAAMwa,cAAc,CACvBlB,IAAKhH,EAAEC,OAAOkI,QAAQnB,IACtBD,IAAK/G,EAAEC,OAAOkI,QAAQpB,IACtBqB,IAAKV,KAGTW,YAAa,SAAArI,GACXrT,EAAKe,MAAM4a,kBAAkB,CAAEF,IAAKV,KAEtCa,UAAW,SAAAvI,GACTrT,EAAKe,MAAM8a,gBAAgB,CACzBxB,IAAKhH,EAAEC,OAAOkI,QAAQnB,IACtBD,IAAK/G,EAAEC,OAAOkI,QAAQpB,IACtBqB,IAAKV,KAGTe,WAAY,SAAAzI,GACVrT,EAAKe,MAAMgb,iBAAiB,CAAEjY,MAAOiX,WASnD,IAAIiB,EAAoB/b,KAAKc,MAAM4Z,aAAa5G,SAC9CtT,EAAAC,EAAAC,cAACsb,GAAA,EAAD,CACEla,UAAW5B,EAAQ+b,aACnBC,KAAMlc,KAAKc,MAAM4Z,aAAa5G,SAAS6G,QACvC3Y,QAAS,WACDjC,EAAKe,MAAMma,YACXlb,EAAKe,MAAM4Z,aAAa1Z,KAAOjB,EAAKe,MAAMma,YAC1Clb,EAAKe,MAAM6Y,cAEf5Z,EAAKe,MAAMqb,0BAA0B,CACnCnb,GAAIjB,EAAKe,MAAM4Z,aAAa1Z,GAC5Bob,MAAOrc,EAAKe,MAAM4Z,eAGtB3a,EAAKsc,eAEPjY,IAAK,SAAWpE,KAAKc,MAAM4Z,aAAa1Z,GAAK,WAAasb,OAC1D/a,MAAOiZ,EAAWxa,KAAKc,MAAMoM,iBAAiBiO,OAAOnb,KAAKc,MAAM4Z,aAAa1Z,IAC3EhB,KAAKc,MAAMoM,iBAAiBiO,OAAOnb,KAAKc,MAAM4Z,aAAa1Z,IAAIoT,OAAS,aAAaZ,OACvFlS,MAAO,CAAEib,YAAa,MAEtB,KAEJ,OACE/b,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQsc,cACtBhc,EAAAC,EAAAC,cAAC+b,GAAA,EAAD,CACEC,gBAAiB,SAAAtJ,GAAC,OAChBrT,EAAKe,MAAM6b,cAAc,CAAEvC,IAAKhH,EAAE8G,OAAOE,IAAKD,IAAK/G,EAAE8G,OAAOC,OAE9DnY,QAAS,SAAAoR,GACPrT,EAAK6c,mBAAmBxJ,IAE1ByJ,YAAa,SAAAzJ,GACXrT,EAAKe,MAAMgc,kBAEbC,UAAW,SAAA3J,GACTrT,EAAKe,MAAMkc,SAAS,CAClB9C,OAAQna,EAAKsa,KAAKvU,IAAIwU,eAAe2C,YACrCC,KAAMnd,EAAKsa,KAAKvU,IAAIwU,eAAe6C,aAGvCtD,UAAU,EACVzZ,IAAI,MACJgd,OAAQpd,KAAKc,MAAMsc,OACnBC,oBAAqBrd,KAAKc,MAAMwc,SAChCC,aAAa,EACbL,KAAMld,KAAKc,MAAM0c,SAAW,IAE5Bhd,EAAAC,EAAAC,cAAC+c,GAAA,EAAD,CACErZ,IAAK,aACLsZ,IAAI,gGACJC,YAAY,+IAGblD,EACAsB,EACDvb,EAAAC,EAAAC,cAAC8Y,GAAA,EAAD,CAAe7X,SAAS,YAEpBnB,EAAAC,EAAAC,cAAC6Y,GAAD,CAASqE,SAAO,EAACxI,KAAK,UACpB5U,EAAAC,EAAAC,cAACmd,GAAA,EAAD,KACGvd,OAAOsV,KAAK5V,KAAKc,MAAMqa,QAAU,IAC/BrY,OAAO,SAAA9B,GACN,OACEjB,EAAKe,MAAM0E,oBACXzF,EAAKe,MAAMqa,OAAOna,GAAI8S,WACrB9S,IAAOjB,EAAKe,MAAMma,aAChBlb,EAAKe,MAAM+K,iBAIjB/F,IAAI,SAAA9E,GAAE,OAAMA,IAAOjB,EAAKe,MAAM4Z,aAAa1Z,GAAK,KAC/CR,EAAAC,EAAAC,cAACsb,GAAA,EAAD,CACEla,UAAW5B,EAAQ+b,aACnBC,KAAMnc,EAAKe,MAAMqa,OAAOna,GAAI8S,SAAS6G,QACrC3Y,QAAS,WACDjC,EAAKe,MAAMma,YACXja,IAAOjB,EAAKe,MAAMma,YAClBlb,EAAKe,MAAM6Y,cAGT5Z,EAAKe,MAAM6Y,cACb5Z,EAAKe,MAAMqb,0BAA0B,CAACnb,KAAIob,MAAOrc,EAAKe,MAAMqa,OAAOna,KAEzEjB,EAAKsc,eAEPjY,IAAK,SAAWpD,EAAK,WAAasb,OAClC/a,MACEiZ,EACEza,EAAKe,MAAMoM,kBACXnN,EAAKe,MAAMoM,iBAAiBiO,QAC5Bpb,EAAKe,MAAMoM,iBAAiBiO,OAAOna,IACnCjB,EAAKe,MAAMoM,iBAAiBiO,OAAOna,GAAIoT,OACnCrU,EAAKe,MAAMoM,iBAAiBiO,OAAOna,GAAIoT,OACvC,aACJZ,OAEJlS,MAAO,CAAEib,YAAa,oBAtMvBrU,IAAMC,WAwNdC,qBACb,CACEoV,QAA4BnV,gBAArByV,MACPlE,OAA4BvR,gBAAtB0V,MACNC,UAA4B3V,gBAAnB4V,MACTX,SAA4BjV,gBAApB6V,MACRC,gBAA4B9V,gBAAb+V,MACfhB,OAA4B/U,gBAAtBgW,MACNlR,eAA4B9E,gBAAdiW,MACd5D,aAA4BrS,gBAAhBkW,MACZpD,OAA4B9S,gBAAtBmW,MACN7E,aAA4BtR,gBAAhBoW,MACZxD,WAA4B5S,gBAAlBqW,MACVlZ,mBAA4B6C,gBAAVsW,MAClBC,cAA4BvW,gBAAfwW,MACb3D,cAA4B7S,gBAAfyW,MACbhP,WAA4BzH,gBAAlB0W,MACV7R,iBAA4B7E,gBAAZ2W,KAAuC3W,gBAAvC4W,OAEhBnC,eAA4B9T,iBAAdkW,MACdlF,eAA4BhR,iBAAdmW,MACdzD,kBAA4B1S,iBAAXoW,MACjBxD,gBAA4B5S,iBAAbqW,MACf/D,cAA4BtS,iBAAfsW,MACb3C,cAA4B3T,iBAAfuW,MACbvC,SAA4BhU,iBAApBwW,MACR1D,iBAA4B9S,iBAAZyW,MAChBtD,0BAA4BnT,iBAAH0W,MACzBC,WAA4B3W,iBAAlB4W,OAGZ7V,qBAvRa,SAAAC,GAAK,MAAK,CACvB6V,oBAAqB,CACnBpO,KAAM,EACNF,MAAO,EACPpH,SAAU,EACVG,MAAO,QAETkS,aAAc,CACZ9X,QAAS,OACTyF,SAAU,EACVoH,MAAO,GAETzL,IAAK,CACHpB,QAAS,OACT4F,MAAO,OACPD,OAAQ,QAEV4R,aAAc,CACZ6D,YAAa,EACbC,cAAe,EACfzV,MAAO,SAETlF,SAAU,CACR4F,cAAe,OACfC,QAAS,GACTC,YAAa,QAEfkC,KAAM,CACJ1I,QAAS,UA2PQ,CAAEyG,WAAW,GAAhCpB,CAAwC0P,4iFCzR1C,IA2FMuG,8LAEe,IAAAjgB,EAAAC,KACTE,EAAYF,KAAKc,MAAjBZ,QAER,OACEM,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEO,GAAG,OACHsB,MAAM,OACNmB,KAAK,OACL3B,UAAW5B,EAAQ+f,UACnB9e,MAAOnB,KAAKc,MAAMof,iBAElB3d,gBAAiB,CACfC,QAAQ,EACRlB,MAAO,CAAEC,MAAO,UAElBtB,WAAY,CACVqB,MAAO,CAAEC,MAAO,UAElB4R,SAAU,SAAA9O,GACRtE,EAAKe,MAAMqf,mCAAmC,CAC5CC,UAAW/b,EAAMgP,OAAOlS,qDAOhB,IAAAuB,EAAA1C,KACRE,EAAYF,KAAKc,MAAjBZ,QAER,OACEM,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACE2D,IAAK,EACL7C,MAAM,UACNM,aAAW,cACXG,QAAS,kBAAMU,EAAK5B,MAAM6E,iBAAiB,KAC3C7D,UAAW5B,EAAQmgB,iBAEnB7f,EAAAC,EAAAC,cAAC4f,GAAA7f,EAAD,wDAKmB,IAAAmD,EAAA5D,KACfE,EAAYF,KAAKc,MAAjBZ,QAER,OACEM,EAAAC,EAAAC,cAAA,QAAMoB,UAAW5B,EAAQ+J,UAAWsW,YAAU,GAC5C/f,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQsgB,MACtBhgB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEO,GAAG,iBACHsB,MAAM,sBACNR,UAAW5B,EAAQ+f,UACnB9e,MAAOnB,KAAKc,MAAM2f,iBAClBtN,SAAU,SAAA9O,GACRT,EAAK9C,MAAM4f,sBAAsB,CAC/Bxe,UAAWmC,EAAMgP,OAAOlS,MACxBgB,UAAW,eAGfwe,OAAO,SACP1gB,WAAY,CACVqB,MAAO,CAAEC,MAAO,WAChBrB,QAAS,CACPsB,MAAOtB,EAAQsB,QAGnBe,gBAAiB,CAAEjB,MAAO,CAAEC,MAAO,SAAWiB,QAAQ,MAG1DhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACE4N,QAAQ,SACRvM,UAAW5B,EAAQiF,OACnB5D,MAAM,UACND,MAAO,CAAEC,MAAO,WAChB6D,SAAUpF,KAAKc,MAAM8f,qBACrB5e,QAAS,WACP4B,EAAK9C,MAAM+f,oBAPf,OAYArgB,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACE4N,QAAQ,SACRvM,UAAW5B,EAAQiF,OACnB5D,MAAM,YACND,MAAO,CAAEC,MAAO,WAChBS,QAAS,WACP4B,EAAK9C,MAAMggB,uBANf,yDAgBa,IAAA9b,EAAAhF,KACXE,EAAYF,KAAKc,MAAjBZ,QAER,OACEM,EAAAC,EAAAC,cAAA,QAAMoB,UAAW5B,EAAQ+J,UAAWsW,YAAU,GAC5C/f,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQsgB,MACtBhgB,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEO,GAAG,aACHsB,MAAM,kBACNR,UAAW5B,EAAQ+f,UACnB9e,MAAOnB,KAAKc,MAAMigB,aAClB5N,SAAU,SAAA9O,GACRW,EAAKlE,MAAMkgB,kBAAkB,CAC3B9e,UAAWmC,EAAMgP,OAAOlS,MACxBgB,UAAW,WAGfwe,OAAO,SACP1gB,WAAY,CACVqB,MAAO,CAAEC,MAAO,WAChBrB,QAAS,CACPsB,MAAOtB,EAAQsB,QAGnBe,gBAAiB,CAAEjB,MAAO,CAAEC,MAAO,SAAWiB,QAAQ,MAG1DhC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACE4N,QAAQ,SACRvM,UAAW5B,EAAQiF,OACnB5D,MAAM,UACND,MAAO,CAAEC,MAAO,WAChB6D,SAAUpF,KAAKc,MAAM8f,qBACrB5e,QAAS,WACPgD,EAAKlE,MAAMmgB,gBAPf,OAYAzgB,EAAAC,EAAAC,cAACgN,EAAAjN,EAAD,CACE4N,QAAQ,SACRvM,UAAW5B,EAAQiF,OACnB5D,MAAM,YACND,MAAO,CAAEC,MAAO,WAChBS,QAAS,WACPgD,EAAKlE,MAAMggB,uBANf,6DAgBiB,IAAAvb,EAAAvF,KACfE,EAAYF,KAAKc,MAAjBZ,QACFghB,EAAalhB,KAAKmhB,iBAAiB,IACnCC,EAAYphB,KAAKqhB,gBAAgB,IAEvC,OACE7gB,EAAAC,EAAAC,cAAA,QAAMoB,UAAW5B,EAAQ+J,UAAWsW,YAAU,GA4B5C/f,EAAAC,EAAAC,cAAC4gB,GAAA7gB,EAAD,MAEAD,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQqhB,QACtB/gB,EAAAC,EAAAC,cAAC8gB,GAAA,YAAD,CACE/c,UAAU,WACVgd,UAAQ,EACR3f,UAAW5B,EAAQwhB,aAEnBlhB,EAAAC,EAAAC,cAACihB,GAAA,WAAD,CACE9f,aAAW,SACXuT,KAAK,SACLtT,UAAW5B,EAAQ0hB,MACnBzgB,MAAOnB,KAAKc,MAAM8d,cAClBzL,SAAU,SAAA9O,GACRkB,EAAKzE,MAAM+gB,gCAAgC,CACzCC,iBAAiB,EACjB3gB,MAAiBkD,EAAMgP,OAAOlS,MAC9B4gB,YAAiB1d,EAAMgP,OAAOlS,UAIlCX,EAAAC,EAAAC,cAAC8gB,GAAA,iBAAD,CACErgB,MAAM,YACNW,UAAW5B,EAAQ8hB,aACnBC,QACEzhB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0hB,YACE3hB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAAEC,MAAO,UAAW+D,SAAU,KAA3C,gBAIF8c,KACE5hB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAAEC,MAAO,UAAW+D,SAAU,KAA3C,0BAMNhD,MACE9B,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAYa,MAAO,CAAEC,MAAO,UAA5B,eAGJf,EAAAC,EAAAC,cAAC8gB,GAAA,iBAAD,CACErgB,MAAM,UACNW,UAAW5B,EAAQ8hB,aACnBC,QACEzhB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0hB,YACE3hB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAAEC,MAAO,MAAO+D,SAAU,KAAvC,gBAIF8c,KACE5hB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAAEC,MAAO,MAAO+D,SAAU,KAAvC,0BAMNhD,MACE9B,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAYa,MAAO,CAAEC,MAAO,UAA5B,aAGJf,EAAAC,EAAAC,cAAC8gB,GAAA,iBAAD,CACErgB,MAAM,UACNW,UAAW5B,EAAQ8hB,aACnBC,QACEzhB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0hB,YACE3hB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAAEC,MAAO,UAAW+D,SAAU,KAA3C,gBAIF8c,KACE5hB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAAEC,MAAO,UAAW+D,SAAU,KAA3C,0BAMNhD,MACE9B,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAYa,MAAO,CAAEC,MAAO,UAA5B,aAGJf,EAAAC,EAAAC,cAAC8gB,GAAA,iBAAD,CACErgB,MAAM,YACNW,UAAW5B,EAAQ8hB,aACnBC,QACEzhB,EAAAC,EAAAC,cAACwhB,GAAAzhB,EAAD,CACE0hB,YACE3hB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAAEC,MAAO,UAAW+D,SAAU,KAA3C,gBAIF8c,KACE5hB,EAAAC,EAAAC,cAAC2E,EAAA5E,EAAD,CAAMa,MAAO,CAAEC,MAAO,UAAW+D,SAAU,KAA3C,0BAMNhD,MACE9B,EAAAC,EAAAC,cAAC0N,EAAA3N,EAAD,CAAYa,MAAO,CAAEC,MAAO,UAA5B,iBAKP6f,GAEFF,8CAKY,IAAAhb,EAAAlG,KACTE,EAAYF,KAAKc,MAAjBZ,QAER,GAA8B,eAA1BF,KAAKc,MAAMuhB,WAA6B,CAE1C,OACE7hB,EAAAC,EAAAC,cAAA,OACEoB,UAAW5B,EAAQ4Y,aACnBwJ,SAAU,EACVC,KAAK,SACLvgB,QAAS,WACPkE,EAAKpF,MAAMggB,mBAAmB,KAEhC0B,UAAW,WACTtc,EAAKpF,MAAMggB,mBAAmB,MAGhCtgB,EAAAC,EAAAC,cAAA,WAba,qBAcbF,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQ6B,YACtBvB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACEoB,aAAW,eACXC,UAAW5B,EAAQ6B,WACnBC,QAAU,WAAOkE,EAAKpF,MAAM2hB,wBAAwB,MAEpDjiB,EAAAC,EAAAC,cAAC2B,GAAA5B,EAAD,SAMR,GAA8B,kBAA1BT,KAAKc,MAAMuhB,WAAgC,CAC7C,IAAIK,EACF,kCACA1iB,KAAKc,MAAM6hB,sBAAwB,cAAgB3iB,KAAKc,MAAM8hB,kBAChE,OACEpiB,EAAAC,EAAAC,cAAA,OACEoB,UAAW5B,EAAQ4Y,aACnBwJ,SAAU,EACVC,KAAK,SACLvgB,QAAS,WACNkE,EAAKpF,MAAM+hB,mBAAmB,IAC9B3c,EAAKpF,MAAMgiB,4BAA4B,KAE1CN,UAAW,cAEXhiB,EAAAC,EAAAC,cAAA,WAAMgiB,GACNliB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACEoB,aAAW,eACXC,UAAW5B,EAAQ6B,WACnBC,QAAU,WACRkE,EAAKpF,MAAM2hB,wBAAwB,IACnCvc,EAAKpF,MAAMgiB,4BAA4B,MAGzCtiB,EAAAC,EAAAC,cAAC2B,GAAA5B,EAAD,2CASL,IAAAsiB,EAAA/iB,KAGDgjB,EAAchjB,KAAKijB,iBAAiB,IACpCC,EAAqBljB,KAAKmjB,uBAAuB,IAEjDC,EAAuBpjB,KAAKqjB,uBAAuB,IAEzD,OACE7iB,EAAAC,EAAAC,cAACgY,GAAAjY,EAAD,CACEmY,OAAO,SACPpN,KAAMxL,KAAKc,MAAMwiB,iBACjBrX,QAAW,WAAO8W,EAAKjiB,MAAMgiB,4BAA4B,MAExDE,EAC0B,kBAA1BhjB,KAAKc,MAAMuhB,WACRe,EAC0B,eAA1BpjB,KAAKc,MAAMuhB,WACXa,EACA,aApYehb,IAAMC,WA+YlBC,qBACb,CACEkb,iBAAoCjb,gBAApBkb,MAChBlB,WAAoCha,gBAA1Bmb,MACVC,iBAAoCpb,gBAApBqb,MAChB9E,cAAoCvW,gBAAvBsb,MACbzD,iBAAoC7X,gBAApBub,MAChBC,aAAoCxb,gBAAxByb,MACZlB,kBAAoCva,gBAAnB0b,KAA0C1b,gBAA1C2b,OACjBrB,sBAAoCta,gBAAf4b,KAA0C5b,gBAA1C6b,OACrBzD,iBAAoCpY,gBAApB8b,MAChBvD,qBAAoCvY,gBAAhB+b,MAEpBvC,gCAAoC7Y,iBAALqb,MAC/BlE,mCAAoCnX,iBAAFsb,MAClCxB,4BAAoC9Z,iBAATub,MAC3B1D,gBAAoC7X,iBAArBwb,MACfC,wBAAoCzb,iBAAb0b,MACvB5D,mBAAoC9X,iBAAlB2b,MAClB9B,mBAAoC7Z,iBAAlB4b,MAClBC,uBAAoC7b,iBAAd8b,MACtBrC,wBAAoCzZ,iBAAb+b,MACvBC,uBAAoChc,iBAAdic,MACtBC,wBAAoClc,iBAAbmc,MACvBzE,sBAAoC1X,iBAAfoc,MACrBzf,iBAAoCqD,iBAApBqc,OAElBtb,qBAngBa,SAAAC,GAAK,MAAK,CACvB0X,YAAa,CACXf,OAA6B,EAArB3W,EAAMQ,QAAQC,KACtB6a,SAAU,SACVjN,eAAgB,cAElBuJ,MAAO,CACLld,QAAS,OACT+M,KAAM,EACNvH,cAAe,MACfob,SAAU,SACVjN,eAAgB,UAElB2J,aAAc,CACZtd,QAAS,OACTwF,cAAe,SACfmO,eAAgB,SAChBkN,UAAW,QACX5E,OAAQ,EACR7V,QAASd,EAAMQ,QAAQC,MAEzBR,UAAW,CACTvF,QAAS,OACTwF,cAAe,SACfob,SAAU,SACVjN,eAAgB,SAChBjO,WAAY,SACZU,QAASd,EAAMQ,QAAQC,KACvBgM,gBAAiB,UACjB+O,SAAU,EACVjU,MAAO,GAETgQ,OAAQ,CACN7c,QAAS,OACT0F,WAAY,UAEdiW,gBAAiB,CACf9e,MAAO,SAET0e,UAAW,CACTvb,QAAS,OACTwF,cAAe,MACfmO,eAAgB,aAEhBzN,YAAaZ,EAAMQ,QAAQC,KAC3B+a,SAAU,QACVlb,MAAO,MACP/I,MAAO,UACPkkB,aAAc,IAEhB9M,YAAa,CACXjU,QAAS,OACT2F,OAtDuB,KAwDzByO,aAAaxY,OAAAe,EAAA,EAAAf,CAAA,CACXoE,QAAS,OACTwF,cAAe,MACfC,SAAU,EACVC,WAAY,SACZqM,gBAAiB,UACjBlV,MAAO,QACP8W,eAAgB,gBAChBvN,QAAS,QACTT,OAAQ,OAELL,EAAMqP,OAAOC,SAElBoM,iBAAkB,CAChBhhB,QAAS,OACTwF,cAAe,MACfmO,eAAgB,WAChBlO,SAAU,EACVmb,SAAU,UAEZ9E,KAAM,CACJjf,MAAO,UACPmD,QAAS,OACTwF,cAAe,MACfmO,eAAgB,gBAChBjO,WAAY,SACZE,MAAO,MACPgb,SAAU,QAEZvjB,WAAY,CACV4I,WAAY,EACZC,YAAa,KA8aI,CAAEO,WAAW,GAAhCpB,CAAwCiW,2mDCjhB1C,OAwDM2F,oLACK,IAAA5lB,EAAAC,KACCE,EAAYF,KAAKc,MAAjBZ,QAER,OACEM,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQ0lB,iBACtBplB,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQ4Y,cACtBtY,EAAAC,EAAAC,cAAA,SAAOmlB,QAAQ,gBACZ,uDAGLrlB,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQ4lB,uBACtBtlB,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQ6lB,eACtBvlB,EAAAC,EAAAC,cAACsL,GAAA,UAAD,CACE1J,MAAM,aACNqF,YAAW,uBACXxG,MAAOnB,KAAKc,MAAMklB,UAClB7S,SAAU,SAAAxH,GAAG,OACX5L,EAAKe,MAAMmlB,iBAAiB,CAAE9kB,MAAOwK,EAAI0H,OAAOlS,WAGpDX,EAAAC,EAAAC,cAACsL,GAAA,UAAD,CACE1J,MAAM,YACNqF,YAAW,gBACXlE,KAAK,OACLtC,MAAOnB,KAAKc,MAAMolB,SAClB/S,SAAU,SAAAxH,GAAG,OACX5L,EAAKe,MAAMqlB,gBAAgB,CAAEhlB,MAAOwK,EAAI0H,OAAOlS,YAIrDX,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQkmB,kBACtB5lB,EAAAC,EAAAC,cAACsL,GAAA,OAAD,CACElK,UAAW5B,EAAQmgB,gBACnBhS,QAAQ,SACR9M,MAAM,UACNS,QAAS,WACPjC,EAAKe,MAAM6e,WAAW,CAAE0G,SAAS,KAEnCjhB,SAAUpF,KAAKc,MAAMwlB,kBAPvB,QAWA9lB,EAAAC,EAAAC,cAACsL,GAAA,OAAD,CACElK,UAAW5B,EAAQmgB,gBACnBhS,QAAQ,SACR9M,MAAM,YACNS,QAAS,WACPjC,EAAKe,MAAMylB,mBALf,qBA3CkBre,IAAMC,WA4DrBC,qBACb,CACE4d,UAAW3d,gBAAFme,MACTN,SAAU7d,gBAAFoe,MACRtL,OAAQ9S,gBAAFqe,MACNC,qBAAsBte,gBAAFue,MACpBC,oBAAqBxe,gBAAFye,MACnBC,QAAS1e,gBAAF2e,MACPC,OAAQ5e,gBAAF6e,MAEN3iB,gBAAiByE,iBAAFme,MACfC,eAAgBpe,iBAAFqe,MACdf,iBAAkBje,gBAAFif,MAChB3hB,iBAAkBqD,iBAAFue,MAChB1d,aAAcb,iBAAFwe,MACZC,YAAaze,iBAAF0e,MACXzB,iBAAkBjd,iBAAF2e,MAChBxB,gBAAiBnd,iBAAF4e,MACfjI,WAAY3W,iBAAF6e,MACVtB,eAAgBvd,iBAAF8e,OAEhB/d,qBAzIa,SAAAC,GAAK,MAAK,CACvB+d,MAAO,GAGPjP,aAAc,CACZpU,QAAS,OACTwF,cAAe,MACfC,SAAU,EACVC,WAAY,SACZqM,gBAAiB,UACjBlV,MAAO,QACP8W,eAAgB,SAChB/N,MAAO,OACPQ,QAAS,QAEXsC,KAAM,CACJ1I,QAAS,QAEX0hB,iBAAkB,CAChB1hB,QAAS,OACT2T,eAAgB,eAChBjO,WAAY,SACZF,cAAe,UAEjB6b,cAAe,CACbrhB,QAAS,OACTwF,cAAe,SACfmO,eAAgB,eAChBjO,WAAY,SACZC,OAAQ,SAEVyb,sBAAuB,CACrBphB,QAAS,OACTwF,cAAe,MACfmO,eAAgB,eAChB/N,MAAO,QAETsb,gBAAiB,CACflhB,QAAS,OACTwF,cAAe,SACfqH,MAAO,EACPnH,WAAY,UAEd6V,UAAW,CACTvb,QAAS,OACTwF,cAAe,MACfmO,eAAgB,aAEhBzN,YAAkC,IAArBZ,EAAMQ,QAAQC,KAC3B+a,SAAU,QACVlb,MAAO,MACP/I,MAAO,UACPkkB,aAAc,MAqFG,CAAEta,WAAW,GAAhCpB,CAAwC4b,qwBClI1C,IAoBMqC,8LAEFhoB,KAAKc,MAAMmnB,cAAc,CAAE3d,MAAOvL,OAAOmpB,WAAY7d,OAAQtL,OAAOopB,0DAGpEppB,OAAOqpB,iBAAiB,SAAUpoB,KAAKqoB,iBAAiBC,KAAKtoB,OAC7DA,KAAKqoB,kEAILtpB,OAAOwpB,oBAAoB,SAAUvoB,KAAKqoB,iBAAiBC,KAAKtoB,kDAIhEgG,QAAQC,IAAI,0BAAqBlH,OAAOmpB,WAAYnpB,OAAOopB,aAC3DnoB,KAAKc,MAAMmnB,cAAc,CAAE3d,MAAOvL,OAAOmpB,WAAY7d,OAAQtL,OAAOopB,0DAGpEppB,OAAOqpB,iBAAiB,SAAUpoB,KAAKqoB,iBAAiBC,KAAKtoB,OAC7DA,KAAKqoB,kEAILtpB,OAAOwpB,oBAAoB,SAAUvoB,KAAKqoB,iBAAiBC,KAAKtoB,oDAIhEA,KAAKc,MAAM0nB,KAAK,IAChBxoB,KAAKc,MAAM2nB,kBAAkB,CAAEC,UAAW,qCAGnC,IACCxoB,EAAYF,KAAKc,MAAjBZ,QAER,OACEM,EAAAC,EAAAC,cAAA,OAAKoB,UAAW5B,EAAQyoB,KACtBnoB,EAAAC,EAAAC,cAACkoB,GAAD,MACApoB,EAAAC,EAAAC,cAACmoB,GAAD,MACAroB,EAAAC,EAAAC,cAACooB,GAAD,MACAtoB,EAAAC,EAAAC,cAACqoB,GAAD,MACAvoB,EAAAC,EAAAC,cAACsoB,GAAD,OACGhpB,KAAKc,MAAMmoB,iBAAmBjpB,KAAKc,MAAM6Y,aAAgBnZ,EAAAC,EAAAC,cAACwoB,GAAD,MAAsB,MAC/ElpB,KAAKc,MAAM6Y,cAAgB3Z,KAAKc,MAAMmoB,gBAAmBzoB,EAAAC,EAAAC,cAACyoB,GAAA1oB,EAAD,MAAgB,aA1ClEyH,IAAMC,WAiDTC,sBAAOghB,GAAA,CAElBzP,aAAmBtR,gBAAPghB,MACZJ,gBAAmB5gB,gBAAJihB,MACfvqB,OAAmBsJ,gBAAbkhB,MACNC,aAAmBnhB,gBAAPohB,MAEZxB,cAAmBjf,iBAAN0gB,MACblB,KAAmBxf,iBAAf2gB,MACJlB,kBAAmBzf,iBAAF4gB,OATCtpB,OAAAupB,EAAA,EAAAvpB,CAAA8oB,GAAA,SAUT/gB,gBAVUyhB,OAADxpB,OAAAupB,EAAA,EAAAvpB,CAAA8oB,GAAA,gBAWHpgB,iBAXI+gB,OAAAX,IAarBrf,qBAlFa,SAAAC,GAAK,MAAK,CACvB6L,KAAM,CACJvL,MAAO,QACPD,OAAQ,QACRE,UAAgC,EAArBP,EAAMQ,QAAQC,KACzBI,OAAQ,GAEV8d,IAAK,CACHjkB,QAAS,OACTwF,cAAe,SACfG,OAAQ,QACRQ,OAAQ,EACRmf,IAAK,GAEPC,SAAU,CACRvlB,QAAS,OACT6M,MAAO,KAkEU,CAAEpG,WAAW,GAAhCpB,CAAwCie,kGC/FtCkC,GAAY/qB,EAAQ,MAAmBgrB,QAMrCC,GAAW,CAChBC,MAFoB,mBAGnBtC,MAJmB,gBASnBmC,GADEvrB,2DAAY2rB,mBACFnrB,EAAQ,MAAwBgrB,QAEhChrB,EAAQ,MAAoBgrB,QAG1C,IAAII,GAAQjqB,OAAAe,EAAA,EAAAf,CAAA,GAAQ8pB,GAAaF,ICAlBM,IDEWD,GAAS7rB,WACN6rB,GAAS1rB,cACd0rB,GAAS1rB,cACT0rB,GAASrrB,SACLqrB,GAASnrB,aACEmrB,GAASlrB,wBCvBhC,CACZC,QDuBmBirB,GAASjrB,QCtB5BC,YDuBuBgrB,GAAShrB,YCtBhCC,oBDuB+B+qB,GAAS/qB,oBCtBxCC,gBDuB2B8qB,GAAS9qB,gBCtBvCgrB,MAAO,CACHC,KAAM,IAERC,WAAW,EACXC,SAAU,GACVC,KAAM,CACJC,SAAS,EACTF,SAAU,kQCXR,IAAI5S,GAAe,CACxB+S,eAAI1iB,gBAAA2iB,MAAuBlqB,gBAAvBmqB,QAGKxT,GAAoB,CAY/B,SAAAyT,GAA8C,IAAfpqB,EAAeoqB,EAAfpqB,MAAeoqB,EAAR7iB,MAC/B0iB,IAAN,iBAA4BjqB,EAAM+C,SATxBsnB,GAAY,CAYvB,SAAAC,GAAoCA,EAAftqB,MAAe,IAARuH,EAAQ+iB,EAAR/iB,MAC3BA,EAAM0iB,IAAN,iBAA4B,IAAO,EAAI1iB,EAAMgjB,IAAN,sBCtBjC,IAAIC,GAAW,CAiBtB,SAAAJ,GAA0CA,EAAhBpqB,MAAgB,IAATuH,EAAS6iB,EAAT7iB,MAC1BkjB,EAAOljB,EAAMgjB,IAAI,sCACnBlQ,EAAS,GACNoQ,IACNpQ,EAAS7a,OAAOsC,OAAOyF,EAAMgjB,IAAN,GAAAG,OAAa,sBAAwBD,EAAO,cAapE,OAXAjrB,OAAOsV,KAAKvN,EAAMgjB,IAAI,YAAc,IAAIvlB,IAAI,SAAAsO,GAC3C/L,EAAM0iB,IAAN,GAAAS,OACI,WAAapX,EAAS,WACzB+G,EAAOrY,OAAO,SAAAsZ,GAAK,OAAKA,EAAMhI,SAAWA,IAAStO,IAAI,SAAA2lB,GACrD,OAAOnrB,OAAAe,EAAA,EAAAf,CAAA,CAAC+U,MAASoW,EAAS,QAAcA,EAAS,QAAY,GAArB,UAAuC,GAC7EnW,GAAMmW,EAAS,QAAcA,EAAS,QAAY,GAArB,OAAoC,GAC/CzqB,GAAMyqB,EAAS,GAASA,EAAS,GAAS,IACzDpjB,EAAMgjB,IAAN,kBAAAG,OAA4BC,EAAS,WAItC,CAACtqB,MAAO,IAhCfuqB,IAGUC,GAAY,CAgCvB,SAAAP,GAAyCA,EAAftqB,MAAe,IAARuH,EAAQ+iB,EAAR/iB,MAChC/H,OAAOsV,KAAKvN,EAAMgjB,IAAI,YAAYvlB,IAAI,SAAAsO,GACrC/L,EAAM0iB,IAAN,GAAAS,OAAa,WAAapX,EAAS,WAAa,QA1B3C,IAAID,GAAiB,CAJ5B,SAAA9M,GAAgD,IAAhBvG,EAAgBuG,EAAhBvG,MAAgBuG,EAATgB,MAC7BujB,OAAN,GAAAJ,OAAgB,WAAa1qB,EAAMsT,OAAS,gBCOzC,IAAIyX,GAAuB,CAnBlC,SAAAxkB,GAA8CA,EAAhBvG,MAAgB,IAATuH,EAAShB,EAATgB,MAE7ByjB,EAAWzjB,EAAMgjB,IAAI,WACrBU,EAAYzrB,OAAOsV,KAAKkW,GAAY,IAAIhmB,IACtC,SAAA1B,GACE,OAAO0nB,EAAS1nB,GAAT,OAAwBwP,OAAO,SAACnT,EAAGoT,GACtC,OAAOpT,GAAKoT,EAAEC,SAAWD,EAAEC,SAASH,KAAO,IAAK,KACrDC,OAAO,SAACnT,EAAGoT,GAAO,OAAOpT,EAAIoT,GAAI,GACxC,IAAI,IAAImY,KAAmBF,EAAS,CAChC,IAAMnY,EAAOmY,EAASE,GAAT,OAAoCpY,OAAO,SAACnT,EAAGoT,GAAO,OAAOpT,GAAKoT,EAAEC,SAAWD,EAAEC,SAASH,KAAO,IAAK,GAC7GI,EAAWgY,EAAY/X,KAAKC,MAAoC,KAA5BN,EAAKoY,EAAY,OAAoB,IAAM,EAC/EE,EAAcH,EAASE,GAAT,OAAsCF,EAASE,GAAT,OAAoC1X,OAAS,EACvGjM,EAAM0iB,IAAN,WAAAS,OAAqBQ,EAArB,SAA6CrY,EAAKuY,QAAQ,IAC1D7jB,EAAM0iB,IAAN,WAAAS,OAAqBQ,EAArB,eAAmDjY,EAAQmY,QAAQ,IACnE7jB,EAAM0iB,IAAN,WAAAS,OAAqBQ,EAArB,gBAAoDC,+wECJ5D,IAAIE,GAAa,wBACbC,GAAQ,oCAERC,GAAO,CACTC,UAAW,CACTC,MAAO,wCACPC,KAAM,MACN1c,WAAY,CACVyc,MAAO,oCACPC,KAAM,MACNC,IAAK,CACHF,MAAO,oCACPC,KAAM,UAUDE,GAAQC,oBAAS,mBAAoB,CAChD,SAAAtlB,GAAA,IAAGgB,EAAHhB,EAAGgB,MAAHhB,EAAUvG,MAAV,MAAuB,CACrBwC,cAAe+E,EAAMgjB,IAAI,4BACzBuB,KAAMT,GACNE,QACAQ,MAAO,CAAEC,QAAS,CAAC,mCA4BvB,SAAA5B,GASE,MAAO,CAAE6B,SARM,CACb,CACEzpB,cAHgC4nB,EAAT7iB,MAGFgjB,IAAI,4BACzBuB,KAAMT,GACNE,QACAQ,MAAO,CAAEC,QAAS,CAAC,qCA/BvBE,KAAK3B,IACL4B,gBAAK5kB,gBAAA6kB,KAAapsB,gBAAbqsB,QACL,CACEC,KAAMT,oBAAS,yBAA0B,CACvCU,GACAC,GACAC,GACA1B,GACAd,eAAI1iB,gBAAAmlB,OAAyB,KAE/BC,MAAOd,oBAAS,0BAA2B,CACzC,kBACE3mB,QAAQC,IAAI,gCAEd8kB,eAAI1iB,gBAAAqlB,OAAyB,QAuB5B,IAAMC,GAAehB,oBAAS,0BAA2B,CAC9D,SAAAvB,GAAA,IAAG/iB,EAAH+iB,EAAG/iB,MAAH+iB,EAAUtqB,MAAV,MAAuB,CACrBwC,cAAe+E,EAAMgjB,IAAI,4BACzBuB,KAAMT,GACNE,UAGFY,gBAAK5kB,gBAAAulB,KAAa9sB,gBAAb+sB,QACL,CACET,KAAMT,oBAAS,yBAA0B,CACvCU,GACAC,GACAC,GACA1B,GACAd,eAAI1iB,gBAAAylB,OAAyB,KAE/BL,MAAOd,oBAAS,iCAAkC,CAChD,kBACE3mB,QAAQC,IAAI,yCAEd8kB,eAAI1iB,gBAAA0lB,OAAyB,QAkBtBvF,IATyBmE,oBACpC,oCACA,CAiNF,SAAAqB,GAA2DA,EAAhBltB,MAAgB,IAATuH,EAAS2lB,EAAT3lB,MAC5C4lB,EAAU,CACZ3qB,cAAe+E,EAAMgjB,IAAI,4BACzBnP,KAAM,GACNzY,KAAM2oB,GACNQ,KAAMT,GACNE,SAGEU,EAAW,GAIf,OAFAA,EAAShS,KAAKkT,GAEP,CACL3qB,cAAe+E,EAAMgjB,IAAI,4BACzB0B,SAAUA,EACVmB,OAAQ7lB,EAAMgjB,IAAI,iBAjOc2B,KAAKmB,IAAKzB,KAO1BC,oBAAS,kBAAmB,CA+BhD,SAAAyB,GAA8C,IAAT/lB,EAAS+lB,EAAT/lB,MAC/BgmB,EAAcC,KAAKC,MACrBC,aAAaC,QAAQ,8BAGvB,GADAzoB,QAAQC,IAAI,qDAAgDooB,GACxDA,GAAeA,EAAW,cAAmB,CAC/ChmB,EAAM0iB,IAAI,oBAAoB,GAC9B,IAAI2D,EAAeL,EAAW,cAC1B3vB,EAAa2vB,EAAW,YAC5BroB,QAAQC,IACN,qDACAyoB,EACAhwB,GAEF2J,EAAM0iB,IAAN,2BAAsC2D,GACtCrmB,EAAM0iB,IAAI,0BAA2BrsB,GACrC2J,EAAM0iB,IAAI,+BAAgCrsB,KA7C5CuuB,gBAAK5kB,gBAAAsmB,OACL,CACEvB,KAAM,CAACJ,KAAK5kB,SACZqlB,MAAO,CACLT,KAAK5kB,QACL2iB,eAAI1iB,gBAAAumB,MAAiC9tB,gBAAjC+tB,OACJ9D,eAAI1iB,gBAAAymB,MAAkChuB,gBAAlCiuB,OACJhE,eAAI1iB,gBAAA2mB,MAA6CluB,gBAA7CmuB,SAIRlE,eAAI1iB,gBAAA6mB,OAA2B,GAC/BxC,GACAO,gBAAK5kB,gBAAA8mB,KAAaruB,gBAAbsuB,QACL,CACEhC,KAAM,GACNK,MAAO,IAKT1C,eAAI1iB,gBAAAgnB,OAA2B,GAC/BtE,eAAIjqB,gBAAAwuB,MAAa,iBAgCZ,IAAMC,GAAU5C,oBAAS,qBAAsB,CACpD5B,eAAI1iB,gBAAAmnB,MAAiC1uB,gBAAjC2uB,OACJ1E,eAAI1iB,gBAAAqnB,OAA2B,GAC/B/B,GACA5C,eAAI1iB,gBAAAsnB,OAA2B,GAC/B5E,eAAIjqB,gBAAA8uB,MAAa,gBAONC,GAAoBlD,oBAAS,+BAAgC,CACxE,WAAO3mB,QAAQC,IAAI,uCACnBspB,GACA1D,KAWK,SAASwB,GAATyC,GAA+CA,EAAhBhvB,MAAgB,IAATuH,EAASynB,EAATznB,MACvC/E,EAAgB+E,EAAMgjB,IAAI,4BAC1Bvb,EAAazH,EAAMgjB,IAAI,QAAU/nB,EAAgB,yBAErD,GAAIwM,EACF,OAAOigB,KAAQjqB,IAAIxF,OAAOsV,KAAK9F,GAAc,IAAK,SAAA/J,GAChD,GAAqB,MAAjBA,EAAU,IAA4B,eAAdA,OAA5B,CACE,IAAIiqB,EAAK3nB,EAAMgjB,IAAN,QAAAG,OACCloB,EADD,0BAAAkoB,OACuCzlB,IAEhD,GAAIiqB,GAAMA,EAAGhvB,GAAI,CACf,IAAIivB,EAAqB5nB,EAAMgjB,IAC7B,sCAEFhjB,EAAM0iB,IAAI,mBAAqBhlB,EAAW,CAAE/E,GAAIgvB,EAAGhvB,KAC9CivB,IAEH5nB,EAAM0iB,IAAI,qCAAsCiF,EAAGhvB,IACnDqH,EAAM0iB,IAAI,4CAA6CiF,EAAG1tB,OAC1D+F,EAAM0iB,IACJ,8CACA,cAGJ1iB,EAAM0iB,IAAN,sBAAAS,OAAgCzlB,GAAa+J,EAAW/J,QAI3DmqB,KAAK,cAYL,SAAS5C,GAAT6C,GAAyCA,EAAhBrvB,MAAgB,IAATuH,EAAS8nB,EAAT9nB,MACjC/E,EAAgB+E,EAAMgjB,IAAI,4BAC1Bvb,EAAazH,EAAMgjB,IAAI,QAAU/nB,EAAgB,yBAErD,GAAIwM,EACF,OAAOigB,KAAQjqB,IAAIxF,OAAOsV,KAAK9F,GAAc,IAAK,SAAA/J,GAChD,GAAqB,MAAjBA,EAAU,IAA4B,eAAdA,OAA5B,CACE,IAAIiqB,EAAK3nB,EAAMgjB,IAAN,QAAAG,OACCloB,EADD,0BAAAkoB,OACuCzlB,IAE5CiqB,GAAMA,EAAGhvB,IACXqH,EAAM0iB,IAAN,sBAAAS,OAAgCzlB,GAAa+J,EAAW/J,OAI3DmqB,KAAK,cAoDL,IAAME,GAAe,CAvC5B,SAAAC,GAA2C,IAAhBvvB,EAAgBuvB,EAAhBvvB,MACrBiF,GADqCsqB,EAAThoB,MAChB,CACdioB,QAASC,KAAKC,MACdxvB,GAAIF,EAAMgE,KAAK9D,GACfma,OAAQra,EAAMgE,KAAKqW,QAAU,GAC7B7Y,MAAOxB,EAAMgE,KAAKxC,QAEpB,MAAO,CAAEtB,GAAI+E,EAAU/E,GAAI+E,YAAWuW,KAAMvW,EAAU/E,KASxD,SAAAyvB,GAAkD,IAAhB3vB,EAAgB2vB,EAAhB3vB,MAAOuH,EAASooB,EAATpoB,MACnC/E,EAAgB+E,EAAMgjB,IAAI,4BAE1B4C,EAAU,CACZ3qB,cAAeA,EACf4Y,KAAMpb,EAAMiF,UACZ6mB,KAAMT,GAAa,IAAMrrB,EAAMiF,UAAU/E,GACzCqrB,SAGEU,EAAW,GAEf,OADAA,EAAShS,KAAKkT,GACP,CACL3qB,cAAeA,EACfypB,SAAUA,EACVmB,OAAQ7lB,EAAMgjB,IAAI,iBAWpB2B,KAAKmB,IACLR,IAyFK,IAAM+C,GAAoB,CAtDjC,SAAAC,GAA8CA,EAAhB7vB,MAAgB,IAATuH,EAASsoB,EAATtoB,MAC/BuoB,EAAoBvoB,EAAMgjB,IAAN,GAAAG,OACnB,sBAAwBnjB,EAAMgjB,IAAI,wCAGnC4C,EAAU,CACZ3qB,cAAe+E,EAAMgjB,IAAI,4BACzBnP,KAAM0U,EACNntB,KAAM2oB,GACNQ,KAAMT,GAAa,IAAM9jB,EAAMgjB,IAAI,sCACnCgB,SAGEU,EAAW,GAIf,OAFAA,EAAShS,KAAKkT,GAEP,CACL3qB,cAAe+E,EAAMgjB,IAAI,4BACzB0B,SAAUA,EACVmB,OAAQ7lB,EAAMgjB,IAAI,iBAkCgC2B,KAAKmB,KAWpD,IAAM0C,GAAuB,CAnCpC,SAAAC,GAA8CA,EAAhBhwB,MAAgB,IAATuH,EAASyoB,EAATzoB,MAC/B/E,EAAgB+E,EAAMgjB,IAAI,4BAC1B4C,EAAU,CACZ3qB,cAAeA,EACfG,KAAM2oB,GACNQ,KACET,GACA,IACA9jB,EAAMgjB,IAAI,sCACV,WACAhjB,EAAMgjB,IAAI,sBAIV0B,EAAW,GAGf,OAFAA,EAAShS,KAAKkT,GAEP,CACL3qB,cAAeA,EACfypB,SAAUA,EACVmB,OAAQ7lB,EAAMgjB,IAAI,iBAiBpB2B,KAAK+D,OAXP,SAAAC,GAAqDA,EAAhBlwB,MAAgB,IAATuH,EAAS2oB,EAAT3oB,MAC1CA,EAAM4oB,MAAN,GAAAzF,OACK,sBACDnjB,EAAMgjB,IAAI,sCACV,WACAhjB,EAAMgjB,IAAI,yBAcH6F,GAAkB,CAC7BC,kBAAOrwB,gBAAAswB,OACP,CACE7b,UAAW,CAACsb,IACZQ,UAAW,CAACX,MAQHY,GAAoB,CAC/BJ,aC9aS5F,GAAW,CAqBtB,SAAAF,GAA0C,IAAhBtqB,EAAgBsqB,EAAhBtqB,MAAOuH,EAAS+iB,EAAT/iB,MAChC,GAAMA,EAAMgjB,IAAI,kBAmBf,MAAO,CAAClqB,MAAO,GAlBf,IAAMowB,EAAajxB,OAAOsV,KAAKvN,EAAMgjB,IAAI,mBAYzC,OAVAkG,EAAWzrB,IAAI,SAAA0rB,GACL,IAAIC,EAAoBppB,EAAMgjB,IAAO,sBAC1CoG,GACJppB,EAAM0iB,IAAN,GAAAS,OAAa,WAAagG,EAAS,eAClClxB,OAAOsC,OAAO6uB,GAAqB,IAAI3uB,OAAO,SAAA4uB,GAC7C,OAAOA,EAAgBC,eAAe,WAAaD,EAAgBvW,OAAOwW,eAAeH,KACvF5d,OAAO,SAACge,EAAK7rB,GAA2E,OAA5D6rB,EAAI7rB,EAAU/E,IAAM,CAACA,GAAM+E,EAAU/E,GAAI6wB,UAAY,GAAcD,GAAM,OAItG9wB,EAAM4nB,UACF,CAACvnB,MAAOL,EAAM4nB,WAEd,CAACvnB,MAAO,KAjCPgT,GAAiB,CAQ5B,SAAA9M,GAAgD,IAAhBvG,EAAgBuG,EAAhBvG,MAAgBuG,EAATgB,MAChCujB,OAAN,GAAAJ,OAAgB,WAAa1qB,EAAMgxB,SAAW,eAAiBhxB,EAAMixB,aAAe,gBAL1EC,GAA2B,CAQtC,SAAA9G,GAAwD,IAAfpqB,EAAeoqB,EAAfpqB,MAAeoqB,EAAR7iB,MACzCujB,OAAN,GAAAJ,OAAgB,WAAa1qB,EAAMgxB,SAAW,mhBCdxC,IAAIG,GAAiB,CAC1BlH,eAAI1iB,gBAAA6pB,OAAwB,IAGnBC,GAAgB,CACzBpH,eAAI1iB,gBAAA+pB,OAAwB,IAGnBC,GAAiB,CAsJ5B,SAAAvB,GAAoC,IAAfhwB,EAAegwB,EAAfhwB,MAAOuH,EAAQyoB,EAARzoB,MACtBrH,EAAKqH,EAAMgjB,IAAI,qBACnBhjB,EAAM0S,KAAN,kBAAAyQ,OAA6BxqB,EAA7B,mCAAkEF,EAAMmZ,KAtJxEqY,GACAC,GACAC,IAGSC,GAAsB,CA6DjC,SAAArE,GAA4C,IAAfttB,EAAestB,EAAfttB,MAAOuH,EAAQ+lB,EAAR/lB,MAC9BupB,EAAM,CACRxX,IAAKtZ,EAAMsZ,IACXD,IAAKrZ,EAAMqZ,KAEb9R,EAAM0iB,IAAI,4BAA6B6G,KAxD9Bc,GAAgB,CACzB3H,eAAI1iB,gBAAAsqB,OAAiC,IAG5BC,GAAkB,CAC3B7H,eAAI1iB,gBAAAwqB,OAAiC,IAG5BC,GAAiB,CA8D5B,SAAAhD,GAA2C,IAAfhvB,EAAegvB,EAAfhvB,MAAOuH,EAAQynB,EAARznB,MAC7BrH,EAAKqH,EAAMgjB,IAAN,qBACThjB,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,EAA5B,oCAAAwqB,OAAiE1qB,EAAM0a,KAAO,CAAC1a,EAAMqZ,IAAKrZ,EAAMsZ,OA9DhGkY,GACAC,IAOSQ,GAAiB,CA4B5B,SAAA3H,GAAwC,IAAftqB,EAAesqB,EAAftqB,MAAOuH,EAAQ+iB,EAAR/iB,MAC9BA,EAAM0iB,IAAI,kBAAmB,CAACjqB,EAAMoZ,OAAOE,IAAKtZ,EAAMoZ,OAAOC,MAC7D9R,EAAM0iB,IAAI,gBAAiBjqB,EAAMoc,QA1BxB8V,GAAsB,CAwFjC,SAAAhF,GAAoC,IAAR3lB,EAAQ2lB,EAAR3lB,MACtBrH,EAAKqH,EAAMgjB,IAAI,qBACnB,IAAMhjB,EAAMgjB,IAAI,kBAAoB,CAClC,IAAIjP,EAAQ/T,EAAMgjB,IAAN,kBAAAG,OAA4BxqB,IACpCob,GACF/T,EAAM0iB,IAAI,kBAAmB3O,EAAMtI,SAASmf,aAzFvCnX,GAAmB,CAM9B,SAAAzU,GAAgD,IAAfvG,EAAeuG,EAAfvG,MAAOuH,EAAQhB,EAARgB,MAClCrH,EAAKqH,EAAMgjB,IAAI,qBACf6H,EAAa7qB,EAAMgjB,IAAN,kBAAAG,OAA4BxqB,IACzCkyB,EAAWpf,SAAS6G,QAAQC,YAAY,GAAGtG,OAASxT,EAAM+C,QAC5DqvB,EAAWpf,SAAS6G,QAAQC,YAAY,GAAGuY,OAAOryB,EAAM+C,MAAO,GAC/DwE,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,GAAMkyB,KATpCZ,GACAC,IA6DF,SAASD,GAATjC,GAAkC,IAARhoB,EAAQgoB,EAARhoB,MACpBrH,EAAKqH,EAAMgjB,IAAN,qBACLjP,EAAQ/T,EAAMgjB,IAAN,kBAAAG,OAA4BxqB,IACpC2S,EAAO,EACPyI,EAAMtI,SAAS6G,SAAWyB,EAAMtI,SAAS6G,QAAQC,YAAY,GAAGtG,OAAS,IAC3EX,EAAOyf,KAAOC,SAASjX,EAAMtI,SAAS6G,SAAS,SAEjDtS,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,EAA5B,kBAAgD2S,GArBlD,SAAAwc,GAA0C,IAAP9nB,EAAO8nB,EAAP9nB,MAC3BrH,EAAKqH,EAAMgjB,IAAN,qBACLjP,EAAQ/T,EAAMgjB,IAAN,kBAAAG,OAA4BxqB,IACxCgF,QAAQC,IAAI,uCAERmW,EAAMtI,SAAS6G,SAAWyB,EAAMtI,SAAS6G,QAAQC,YAAY,GAAGtG,OAAS,EACzEjM,EAAM0iB,IAAI,6CAA6C,IAGvD1iB,EAAM0iB,IAAI,gDAAgD,GAC1D1iB,EAAM0iB,IAAI,6CAA6C,IAa7DuI,CAAyB,CAACjrB,UAqB5B,SAASkqB,GAAT5B,GAA6CA,EAAf7vB,MAAe,IAARuH,EAAQsoB,EAARtoB,MAC/BrH,EAAKqH,EAAMgjB,IAAI,qBACfkI,EAgBN,SAA4BC,GAC1B,IAAIC,EAASD,EAAe5Y,YAAY,GACxC,GAAI6Y,EAAOnf,OAAS,EAAG,CAKrB,IAJA,IAAIof,EAAQD,EAAO,GAAG,GAClBE,EAAQF,EAAO,GAAG,GAClBG,EAAOH,EAAO,GAAG,GACjBI,EAAOJ,EAAO,GAAG,GACZK,EAAI,EAAGA,EAAIL,EAAOnf,OAAQwf,IAC7BL,EAAOK,GAAG,GAAKJ,IAAOA,EAAQD,EAAOK,GAAG,IACxCL,EAAOK,GAAG,GAAKH,IAAOA,EAAQF,EAAOK,GAAG,IACxCL,EAAOK,GAAG,GAAKF,IAAMA,EAAOH,EAAOK,GAAG,IACtCL,EAAOK,GAAG,GAAKD,IAAMA,EAAOJ,EAAOK,GAAG,IAE5C,IAAIP,EAAO,CAACG,QAAOC,QAAOC,OAAMC,QAChC,OAAON,EAEP,OAAO,KAhCEQ,CAAmB1rB,EAAMgjB,IAAN,kBAAAG,OAA4BxqB,EAA5B,uBAC1BgzB,EAAK,KACLC,EAAK,KACFV,IACLS,GAAMT,EAAKG,MAAQH,EAAKI,OAAS,EACjCM,GAAMV,EAAKK,KAAOL,EAAKM,MAAQ,GAEjCxrB,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,EAA5B,kBAAgDuyB,GAChDlrB,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,EAA5B,sBAAoD,CAACgzB,EAAIC,IAiCpD,IAAIva,GAA+B,CACxCqR,eAAI1iB,gBAAA6rB,OAAwD,odC/LvD,IAAIC,GAAmB,CAC5BvI,kBAAOvjB,gBAAA+rB,QAGEC,GAAkC,CAC5CtJ,eAAI1iB,gBAAAisB,MAA0B,iBAC9BvJ,eAAI1iB,gBAAAksB,OAA0B,IAGpB1P,GAAyB,CACnCkG,eAAI1iB,gBAAAmsB,OAAsC,IAGhC/R,GAA0B,CACpCsI,eAAI1iB,gBAAAosB,OAAsC,irCCJ3C,IAAMC,GAAmB,UAErBrI,GAAO,CACPC,UAAa,CACTC,MAAS,wCACTC,KAAQ,MACRrR,OAAU,CACNoR,MAAS,qCACTC,KAAQ,MACRmI,eAAgB,CACZlI,IAAK,CACDF,MAAS,oCACTC,KAAQ,MACRmI,eAAgB,CACZlI,IAAK,CACDF,MAAS,oCACTC,KAAQ,aAazBjoB,GAAe,CACzB0c,GACCuR,IAFwBhH,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAGtBu0B,IAHsB,CAIzBC,GACAhS,GACAiI,eAAI1iB,gBAAA0sB,OAAuB,GAC1BhK,eAAI1iB,gBAAA2sB,OAA0B,KAOrB7Y,GAAyB,CACnC2Y,GACAhS,IAFmC0I,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAGhCu0B,IAHgCv0B,OAAAs0B,GAAA,EAAAt0B,CAIhC0yB,IAJgC1yB,OAAAs0B,GAAA,EAAAt0B,CAKhC+zB,KASG,SAASY,GAAT5tB,GAAyCA,EAAfvG,MAAe,IAARuH,EAAQhB,EAARgB,MAClC/E,EAAgB+E,EAAMgjB,IAAI,wBAC1B6J,EAAY7sB,EAAMgjB,IAAI,kBAI1B,OAFArlB,QAAQC,IAAI,kCAEL8pB,KAAQjqB,IAAIxF,OAAOsV,KAAKsf,GAAa,IAAK,SAAC9Y,GAChD,OAAO/T,EAAM4oB,MAAN,kBAAAzF,OAA8BpP,MACpC8T,KAAK,WACN,IAAI/U,EAAS9S,EAAMgjB,IAAN,QAAAG,OAAkBloB,EAAlB,sBACb,OAAI6X,EACK4U,KAAQjqB,IAAIxF,OAAOsV,KAAKuF,EAAO,iBAAmB,IAAK,SAACga,GAC3D,OAAIha,EAAO,gBAAgBga,GAChBpF,KAAQjqB,IAAIxF,OAAOsV,KAAKuF,EAAO,gBAAgBga,GAAY,iBAAmB,IAAK,SAAC/Y,GACvF,IAAIgZ,EAAeja,EAAO,gBAAgBga,GAAY,gBAAgB/Y,GAClEiZ,EAAS,CACTr0B,GAAIob,EACJhH,KAAMggB,EAAahgB,KACnBkgB,KAAM,CACFt0B,GAAIm0B,EACJ/f,KAAM+F,EAAO,gBAAgBga,GAAY/f,OAIjD,GAAIggB,EAAathB,SAAU,CACvB,IAAIyhB,EAAkBtC,KAASmC,EAAathB,SAAS6G,SACrD0a,EAAOvhB,SAAW,CACd6G,QAASya,EAAathB,SAAS6G,QAC/BhH,KAAM6hB,KAAanC,SAAS+B,EAAathB,SAAS6G,SAAW+Z,GAC7DzB,SAAUsC,EAAgBlC,SAASzY,YAAY6a,UAC/ClC,KAAMA,KAAK6B,EAAathB,SAAS6G,SACjC+a,SAAS,GAIjB,OAAOrtB,EAAM0iB,IAAN,kBAAAS,OAA4BpP,GAASiZ,UAGhD,SAGH,IACNnF,KAAK,cAYH,SAASyF,GAATzK,GAAwCA,EAAfpqB,MAAe,IAARuH,EAAQ6iB,EAAR7iB,MAC/B/E,EAAgB+E,EAAMgjB,IAAI,wBAC1BuK,EAAWvtB,EAAMgjB,IAAI,gBAIzB,OAFArlB,QAAQC,IAAI,iCAEL8pB,KAAQjqB,IAAIxF,OAAOsV,KAAKggB,GAAY,IAAK,SAACN,GAC7C,OAAOjtB,EAAM4oB,MAAN,gBAAAzF,OAA4B8J,MACpCpF,KAAK,WACJ,IAAI/U,EAAS9S,EAAMgjB,IAAN,QAAAG,OAAkBloB,EAAlB,sBACb,OAAI6X,EACO4U,KAAQjqB,IAAIxF,OAAOsV,KAAKuF,EAAO,iBAAmB,IAAK,SAACma,GAC3D,GAAIna,EAAO,gBAAgBma,IAAUna,EAAO,gBAAgBma,GAAMlgB,KAAM,CACpE,IACIigB,EAAS,CACTr0B,GAAIs0B,EACJlgB,KAHc+F,EAAO,gBAAgBma,GAGnBlgB,MAEtB,OAAO/M,EAAM0iB,IAAN,gBAAAS,OAA0BrQ,EAAO,gBAAgBma,GAAMlgB,MAAQigB,WAK3E,IACRnF,KAAK,cASL,IAAM2F,GAAU,CACnB,SAAAzK,KAAG/iB,MAAH,IAAUvH,EAAVsqB,EAAUtqB,MAAV,MAAsB,CAClBob,KAAM,CACF4Z,IAAK,aAAeh1B,EAAMgE,KAAKwwB,KAAKt0B,GACpCoU,KAAMtU,EAAMgE,KAAKwwB,KAAKlgB,QAG9B,SAAAgZ,GAAA,IAAEttB,EAAFstB,EAAEttB,MAAF,MAAqB,CACjBwC,cADJ8qB,EAAS/lB,MACgBgjB,IAAI,4BACzBnP,KAAepb,EAAMob,KACrB0Q,KAAI,kCAAApB,OAA6C1qB,EAAMgE,KAAKwwB,KAAKt0B,IACjEqrB,UAYR,SAAAyD,GAA0C,IAAdhvB,EAAcgvB,EAAdhvB,MAAOuH,EAAOynB,EAAPznB,MAC3B6T,EAAO,CACP4Z,IAAK,aAAeh1B,EAAMgE,KAAKwwB,KAAKt0B,GACpCoU,KAAMtU,EAAMgE,KAAKwwB,KAAKlgB,MAEtB2X,EAAW,GAOf,OANAA,EAAShS,KAAK,CACVzX,cAAe+E,EAAMgjB,IAAI,4BACzBnP,OACA0Q,KAAI,kCAAApB,OAAqC1qB,EAAMgE,KAAKwwB,KAAKt0B,IACzDqrB,UAEG,CAAEU,aArBTC,KAAKmB,KAsEF,IAAI4H,GAAwB,CAC/BhL,eAAI1iB,gBAAA2tB,OAAqD,GACzDjL,eAAI1iB,gBAAA4tB,OAAkD,IAG7CC,GAAW,CA5CxB,SAAA/F,GAAqC,IAAfrvB,EAAeqvB,EAAfrvB,MACdsb,GAD6B+T,EAAR9nB,MACb,CACRytB,IAAK,aAAeh1B,EAAMgE,KAAK9D,GAC/BoU,KAAMtU,EAAMgE,KAAKsQ,KACjBtB,SAAU,CAAE6G,QAAS7Z,EAAMgE,KAAKgP,SAAS6G,WAE7C,MAAO,CAAC3Z,GAAIF,EAAMgE,KAAK9D,GAAIob,UAS/B,SAAAiU,GAA2C,IAAdvvB,EAAcuvB,EAAdvvB,MAAOuH,EAAOgoB,EAAPhoB,MAC5B8tB,EAAW9tB,EAAMgjB,IAAN,gBAAAG,OAA0B1qB,EAAMgE,KAAKwwB,KAAKlgB,OACrD6R,EAASnmB,EAAMgE,KAAKwwB,KAAKt0B,GAEzBm1B,IACAlP,EAAS5e,EAAMgjB,IAAN,gBAAAG,OAA0B1qB,EAAMgE,KAAKwwB,KAAKlgB,KAA1C,SAGb,IAAI2X,EAAW,GASf,OAPAA,EAAShS,KAAK,CACVzX,cAAe+E,EAAMgjB,IAAI,4BACzBnP,KAAMpb,EAAMsb,MACZwQ,KAAI,kCAAApB,OAAoCvE,EAApC,kBAAAuE,OAA2D1qB,EAAME,IACrEqrB,UAGG,CAAEU,aAeTC,KAAKmB,IACL4H,IAOOK,GAAmB,CAC7BtB,GACAhS,IAF6B0I,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAI1B0yB,KAGOqD,GAAqB,CAC9BtL,eAAG,iBAAAS,OAAkB1qB,gBAAjBw1B,MAAA,SAAmCx1B,gBAAnCy1B,QAOKC,GAAqB,CAqChC,SAAAxI,GAA2CA,EAAfltB,MAAe,IAARuH,EAAQ2lB,EAAR3lB,MAC3BrH,EAAKqH,EAAMgjB,IAAI,qBAChBhjB,EAAMgjB,IAAI,oBACfhjB,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,GAAM,MAClCqH,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,GAAM,MAClCqH,EAAM0iB,IAAN,kBAA4B,GAC5B1iB,EAAM0iB,IAAI,+BAAgC,CAAC3W,OAAQ,KAAMqiB,OAAQ,KAAMrW,UAAW,UAlCzEsW,GAAkB,CACzB3L,eAAIjqB,gBAAA61B,MAAatuB,gBAAbuuB,KAAoCvuB,gBAApCwuB,QACJ9L,eAAI1iB,gBAAAyuB,OAAuB,GAC3B7J,gBAAK5kB,gBAAA0uB,KAAqBj2B,gBAArBk2B,QAA+C,CAChD5J,KAAO,GACPK,MAAO,CAACoI,KAEZK,IAQG,SAASpB,GAATrE,GAA0C,IAAf3vB,EAAe2vB,EAAf3vB,MAAOuH,EAAQooB,EAARpoB,MACrCA,EAAM0iB,IAAI,oBAAqBjqB,EAAMsb,MAAMpb,IACrCqH,EAAMgjB,IAAI,oBACZhjB,EAAM0iB,IAAN,0CAAoD,GACpD1iB,EAAM0iB,IAAI,kBAAkB,IAuBpC,SAASkM,GAAkBC,GACvB,MAAO,CACHl2B,GAAIsb,OACJlH,KAAM,GACNkgB,KAAM,CACJlgB,KAAM8hB,EACNl2B,GAAIsb,QAENxI,SAAU,CACN6G,QAAS,CACLlX,KAAM,UACNmX,YAAa,CAAC,KAElB8a,SAAS,IAWd,SAASyB,GAATxG,GAAmCA,EAAd7vB,MAAc,IAAPuH,EAAOsoB,EAAPtoB,MAE3B+uB,EAAaH,GADA5uB,EAAMgjB,IAAI,+BAK3B,OAHAhjB,EAAM0iB,IAAN,oBAA+BqM,EAAWp2B,IAC1CqH,EAAM0iB,IAAN,kBAAAS,OAA4B4L,EAAWp2B,IAAMo2B,GAEtC,CAACtyB,KAAMsyB,GASX,SAASnW,GAAT6P,GAAoCA,EAAdhwB,MAAc,IAAPuH,EAAOyoB,EAAPzoB,MAE5B+T,EAAQ6a,GADK5uB,EAAMgjB,IAAI,gCAI3B,OAFAhjB,EAAM0iB,IAAN,kBAAAS,OAA4BpP,EAAMpb,IAAMob,GAEjC,CAACA,SAmCZ,SAAS0G,GAATuU,GAAqD,IAAfv2B,EAAeu2B,EAAfv2B,MAAOuH,EAAQgvB,EAARhvB,MAC5C,IAAMA,EAAMgjB,IAAI,kBAAoB,CAC7B,IAAIiM,EAbZ,SAAAtG,GAAuDA,EAAdlwB,MAAc,IAAPuH,EAAO2oB,EAAP3oB,MACxC+L,EAAS/L,EAAMgjB,IAAN,GAAAG,OAAa,sBAAwBnjB,EAAMgjB,IAAI,sCAClC,WAAahjB,EAAMgjB,IAAI,qBAAuB,YACxE,OAAOjX,GAAiB,YAUcmjB,CAA+B,CAACz2B,QAAOuH,UACtEivB,GACCjvB,EAAM0iB,IAAI,sCAAuCuM,GAErDjvB,EAAM0iB,IAAI,yCAlClB,WACI,IAAIyM,EAAQ,IAAIjH,KACZkH,EAAKD,EAAME,UACXC,EAAKH,EAAMI,WAAa,EAK5B,OAHGH,EAAK,KAAMA,EAAK,IAAMA,GACtBE,EAAK,KAAMA,EAAK,IAAMA,GAFdH,EAAMK,cAIH,IAAMF,EAAK,IAAMF,EA0ByBrX,IACpD/X,EAAM0iB,IAAI,sCAAuC1iB,EAAMgjB,IAAI,gBAU5D,SAASmH,GAATsF,GAA+CA,EAAdh3B,MAAc,IAAPuH,EAAOyvB,EAAPzvB,MACvCrH,EAAKqH,EAAMgjB,IAAI,qBACf0M,EAAY1vB,EAAMgjB,IAAN,kBAAAG,OAA4BxqB,EAA5B,UACZm1B,EAAW9tB,EAAMgjB,IAAN,kBAAAG,OAA4BxqB,EAA5B,eACXg3B,EAAgB3vB,EAAMgjB,IAAN,6CACjB0M,GAAa5B,GAAY4B,EAAUzjB,OAAS,GAAK6hB,EAAS7hB,OAAS,GAAK0jB,EACvE3vB,EAAM0iB,IAAI,gDAAgD,GAG1D1iB,EAAM0iB,IAAI,gDAAgD,GAS3D,SAAS5E,GAAT8R,GAAyC,IAAfn3B,EAAem3B,EAAfn3B,MAAOuH,EAAQ4vB,EAAR5vB,MAChCrH,EAAKqH,EAAMgjB,IAAI,qBACnBhjB,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,EAA5B,cAA4CF,EAAMK,OAClDkH,EAAM0iB,IAAI,yCAAyC,GACnDyH,GAAuB,CAAC1xB,QAAOuH,UAQ5B,SAAS4d,GAATiS,GAA0C,IAAfp3B,EAAeo3B,EAAfp3B,MAAOuH,EAAQ6vB,EAAR7vB,MACjCrH,EAAKqH,EAAMgjB,IAAI,qBACnBhjB,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,EAA5B,SAAuCF,EAAMK,OAC7CkH,EAAM0iB,IAAI,0CAA0C,GACpDyH,GAAuB,CAAC1xB,QAAOuH,UAO5B,IAAMwnB,GAAqBlD,oBAAS,2BAA4B,CACnE,WAAQ3mB,QAAQC,IAAI,sCACpBgvB,GACAU,KAOSpP,GAAiBoG,oBAAS,wBAAyB,CAC5D,WAAQ3mB,QAAQC,IAAI,iCACpBkyB,GACAlL,gBAAK5kB,gBAAA+vB,OAA2B,CAC5BhL,KAAM,CACG6H,GACAU,IAETlI,MAAQ,MAST,SAAS0K,GAATE,GAA8CA,EAAfv3B,MAAe,IAARuH,EAAQgwB,EAARhwB,MACrCrH,EAAKqH,EAAMgjB,IAAN,qBACLvX,EAAWzL,EAAMgjB,IAAI,+BACtBvX,IACC9N,QAAQC,IAAI,qBAAmB6N,GAC/BzL,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,EAA5B,aAA2C8S,IAE/CzL,EAAM0iB,IAAI,kBAAkB,GAC5B1iB,EAAM0iB,IAAN,6CAAuD,GACvD1iB,EAAM4oB,MAAM,0BACZ5oB,EAAM4oB,MAAM,qBACZ5oB,EAAM4oB,MAAM,oICtehB,IAwBMqH,GApBoB,4kDAqBpBC,GAjBoB,wDAmBb/P,GAAOmE,oBAAS,WAAY,CAgEzC,SAAAmD,GAA4B,IAARznB,EAAQynB,EAARznB,MACZmwB,EAAK,IAAIC,KAAa15B,OAAO25B,UAAUC,WAC3CtwB,EAAM0iB,IAAN,gBAA4C,OAAhByN,EAAGI,WA/D/B3L,gBAAK5kB,gBAAAwwB,OAAmC,CACpCzL,KAAOT,oBAAS,kBAAmB,CAC3B,SAAAtlB,GAAA,IAAEgB,EAAFhB,EAAEgB,MAAF,MAAc,CACV6lB,OAAQ7lB,EAAMgjB,IAAI,2BAClByN,QAAS,CACLC,SAAUR,GACVr5B,SAAUo5B,GACVjO,MArCT,kBAuCK2O,MAtCL,MAuCK11B,cAAe+E,EAAMgjB,IAAI,4BACzByB,QAAS,CAAC,8BAEd3R,QACA8Z,GACAU,GACA,SAAAzK,GAAA,IAAE7iB,EAAF6iB,EAAE7iB,MAAF,MAAc,CACV6lB,OAAU7lB,EAAMgjB,IAAI,2BACpByN,QAAS,CACLC,SAAUR,GACVr5B,SAAUo5B,GACVjO,MAnDT,kBAqDK2O,MApDL,MAqDK11B,cAAe+E,EAAMgjB,IAAI,8BAEjCvb,KACJ2d,MAAO,MA0BR,IAAMwL,GAA0B,CACnC,SAAA7K,GAAA,IAAE/lB,EAAF+lB,EAAE/lB,MAAF+lB,EAASttB,MAAT,MAAqB,CACjBwC,cAAe+E,EAAMgjB,IAAI,8BAE7B2B,cACAxE,IC7FJ,IAAM0Q,GAAaC,KAAc,CAC/B9lB,OAAQtU,OAAOyvB,aAAeA,aAAe,KAC7C4K,MAAM,EACNC,KAAM,CACJ5mB,YAAa,eAEf6mB,OAAQ,kBAGKC,qBAAO,CACpBlxB,MAAOmiB,GACPsC,UACA0M,QAAS,CAAEN,+qECTb,IAoBMZ,GAnBoB,4kDAsBfmB,GAAU,CACjB1O,eAAI1iB,gBAAAqxB,MAA+B,IACnC3O,eAAI1iB,gBAAAsxB,MAAgC,IACpC5O,eAAI1iB,gBAAAuxB,MAAuC,IAC3C7O,eAAI1iB,gBAAAwxB,MAAqC,IACzC9O,eAAI1iB,gBAAAyxB,MAA4C,KAGzCC,GAAmB,CAC1BhP,eAAI1iB,gBAAA2xB,MAAqCl5B,gBAArCm5B,QAIGC,GAAyB,CAChCnP,eAAI1iB,gBAAA8xB,MAA4Cr5B,gBAA5Cs5B,QAGGjuB,GAAkB,CAiEtB,SAAAiiB,GAA0C,IAAd/lB,EAAc+lB,EAAd/lB,MAC3ByH,GADyCse,EAAPttB,MACpBuH,EAAMgjB,IAAI,uBAE5B,GAAGvb,EAAY,CACX,IAAIuqB,EAAiB/5B,OAAOsV,KAAK9F,GAC7BwqB,EAAiBjyB,EAAMgjB,IAAI,mBAG/BgP,EAAexf,QAAQ,SAAC9U,UACbu0B,EAAev0B,KAG1BsC,EAAM0iB,IAAI,kBAAmBuP,GAC7BjyB,EAAM4oB,MAAM,wBA5EhBsJ,GAgFJ,SAAAzK,GAA0C,IAAdznB,EAAcynB,EAAdznB,MACpB/E,GADkCwsB,EAAPhvB,MACXuH,EAAMgjB,IAAI,6BAE9BhjB,EAAM4oB,MAAM,oBAEZ5oB,EAAM4oB,MAAM,QAAU3tB,KAjFfklB,GAAO,CACd,SAAAnhB,GAAA,IAAEgB,EAAFhB,EAAEgB,MAAF,MAAc,CACV6lB,OAAgB7lB,EAAMgjB,IAAI,2BAC1ByN,QAAS,CACLC,SA9Cc,uDA+Cd75B,SAAUo5B,GACVjO,MApDG,kBAsDP2O,MAjDO,MAkDP11B,cAAe+E,EAAMgjB,IAAI,4BACzByB,QAAS,CAAC,8BAEd3R,QACA8Z,GACAU,GACA,SAAAzK,GAAA,IAAE7iB,EAAF6iB,EAAE7iB,MAAF,MAAc,CACV6lB,OAAgB7lB,EAAMgjB,IAAI,2BAC1ByN,QAAS,CACLC,SA5Dc,uDA6Dd75B,SAAUo5B,GACVjO,MAlEG,kBAoEP2O,MA/DO,MAgEP11B,cAAe+E,EAAMgjB,IAAI,8BAE7Bvb,GACAyqB,GACAxP,eAAI1iB,gBAAAmyB,OAAyB,IAU1B,IAAIC,GAAgB,CACvB1P,eAAI1iB,gBAAAqyB,OAAyB,GAC7B3P,eAAI1iB,gBAAAsyB,OAAyB,GAC7B5P,eAAI1iB,gBAAAuyB,MAAgCvyB,gBAAhCwyB,OAEJrS,GAZJ,SAAA4C,GAAgD,IAAd/iB,EAAc+iB,EAAd/iB,MAC1ByyB,GADwC1P,EAAPtqB,MACfuH,EAAMgjB,IAAI,qBAC5B0P,EAAyBz6B,OAAOsV,KAAKklB,GAAiB,GAC1DzyB,EAAM0iB,IAAN,4BAAuCgQ,GACvC/0B,QAAQC,IAAI,iCAAkC80B,IAU9ChQ,eAAIjqB,gBAAAk6B,MAAe3yB,gBAAf4yB,QAGGC,GAAmB,CAC1BnQ,eAAI1iB,gBAAA8yB,OAAyB,GAC7BpQ,eAAI1iB,gBAAA+yB,OAAyB,GAC7BrQ,eAAI1iB,gBAAAgzB,MAAgChzB,gBAAhCizB,OACJvQ,eAAI1iB,gBAAAkzB,MAAwClzB,gBAAxCmzB,QAGGC,GAAkB,CACzB1Q,eAAI1iB,gBAAAqzB,OAAyB,GAC7B3Q,eAAI1iB,gBAAAszB,OAAyB,ICtGlBpC,yBAAO,CACpBlxB,MAAO,CACLmD,MAAM,GAGRshB,QAAS,CACPvf,mBAAoBkuB,GACpBrsB,eAAgBqqB,GAChBnqB,kBAAmB2pB,4FCfhB,IAAI9E,GAAmB,CAC5BvI,kBAAOvjB,gBAAAuzB,QCDMrC,qBAAO,CACrBlxB,MAAO,CACNmD,MAAM,GAGLshB,YCDYyM,qBAAO,CACrBlxB,MAAO,CACNlH,MAAO,GAGN2rB,QAAS,CACR9U,aAAcA,GACdP,kBAAmBA,GACnB0T,UAAWA,MCCJtJ,GAA+B,CA6E1C,SAAAqJ,GAAmD,IAAfpqB,EAAeoqB,EAAfpqB,MAAeoqB,EAAR7iB,MACpC0iB,IAAI,sCAAuCjqB,EAAMK,QA5EvD06B,IAFyCrQ,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAGtCw7B,IAHsCx7B,OAAAs0B,GAAA,EAAAt0B,CAItCu0B,IAJsCv0B,OAAAs0B,GAAA,EAAAt0B,CAKtC0kB,IALsC,CAMtClV,GACHgT,KAGUiZ,GAAkC,CAuE7C,SAAA3Q,GAA+D,IAAftqB,EAAesqB,EAAftqB,MAAOuH,EAAQ+iB,EAAR/iB,MAC/CvH,EAAM21B,QACZpuB,EAAM0iB,IAAI,sCAAuCjqB,EAAM21B,UArE9CtW,GAAqC,CAyEhD,SAAAiO,GAAkE,IAAfttB,EAAestB,EAAfttB,MAAOuH,EAAQ+lB,EAAR/lB,MACrDvH,EAAMsf,WACT/X,EAAM0iB,IAAI,yCAA0CjqB,EAAMsf,aAvEjD4b,GAA0B,CACpCH,IADoCrQ,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAEjCw7B,IAFiCx7B,OAAAs0B,GAAA,EAAAt0B,CAGjCu0B,IAHiCv0B,OAAAs0B,GAAA,EAAAt0B,CAIjC0kB,IAJiC,CAKpClC,KAGUmZ,GAAuB,CACjCC,IADiC1Q,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAE9Bw7B,KAGOK,GAAsB,CAoGjC,SAAA9L,GAA+CA,EAAfvvB,MAAeuvB,EAARhoB,MAChC0iB,IAAI,qCAAsC,QArGhBS,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAE7B87B,KAGOvb,GAAe,CAmG1B,SAAA4P,GAAwC,IAARpoB,EAAQooB,EAARpoB,MAC3Bg0B,GAAmB,EACnBnF,EAAa7uB,EAAMgjB,IAAI,6CACvBiR,EAAcj0B,EAAMgjB,IAAI,sBAEH,IAAtB6L,EAAW5iB,OACPhU,OAAOsV,KAAK0mB,GAAe,IAAIzhB,QAAQ,SAAUzW,GACLi4B,EAAxCnF,IAAeoF,EAAYl4B,GAAK9B,QAIpC+5B,GAAmB,EAGvB,GAAGA,EAAkB,CACjB,IAAIE,EAAUjgB,OACRoV,EAAkB,CACpB1wB,GAAIu7B,EACbj6B,MAAO40B,EACE/b,OAAQ,IAIZ,OAFA9S,EAAM0iB,IAAN,GAAAS,OAAa,sBAAwB+Q,GAAW7K,GAChDrpB,EAAM0iB,IAAN,GAAAS,OAAa,sBAAwB+Q,EAAU,OAASA,GACjD,CACHz3B,KAAM4sB,EACNxV,KAAMwV,KA1Hd5hB,GACHosB,IAHyB1Q,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAItBw7B,IAJsBx7B,OAAAs0B,GAAA,EAAAt0B,CAKtB0kB,KAGOP,GAA0B,CAyHrC,SAAAuJ,GAAsDA,EAAdltB,MACpC,OADkDktB,EAAP3lB,MAC9BgjB,IAAI,8CAtHVvK,GAAkB,CAyH7B,SAAA6P,GAA2C,IAARtoB,EAAQsoB,EAARtoB,MAC5Bm0B,EAASn0B,EAAMgjB,IAAI,sCACzB,MAAO,CAACvmB,KAAMuD,EAAMgjB,IAAN,GAAAG,OAAa,sBAAwBgR,MAzHnDN,IAF4B1Q,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAGzBw7B,IAHyBx7B,OAAAs0B,GAAA,EAAAt0B,CAIzB0kB,KAyCJ,SAAS6W,GAAT/L,GAA0DA,EAAfhvB,MAAe,IAARuH,EAAQynB,EAARznB,MAC7C4nB,EAAqB5nB,EAAMgjB,IAAI,sCAC7BrqB,EAAKqH,EAAMgjB,IAAI,qBACfoR,EAAUp0B,EAAMgjB,IAAI,uCAE1BhjB,EAAM0iB,IAAN,sBAAAS,OAAgCyE,EAAhC,YAAAzE,OAA6DxqB,EAA7D,WAA0Ey7B,GAExD,cAAZA,EACFp0B,EAAM4oB,MAAN,GAAAzF,OAAe,sBAAwByE,EAAqB,WAAajvB,IAInEA,IACCqH,EAAM0iB,IAAN,GAAAS,OAAa,sBAAwByE,EAAqB,WAAajvB,EAAK,OAASA,GAEhFqH,EAAMgjB,IAAN,GAAAG,OAAa,sBAAwByE,EAAqB,WAAajvB,EAAK,cAC7EqH,EAAM0iB,IAAN,GAAAS,OAAa,sBAAwByE,EAAqB,WAAajvB,EAAK,YAAc,IAG1FqH,EAAMgjB,IAAN,GAAAG,OAAa,sBAAwByE,EAAqB,WAAajvB,EAAK,cAC5EqH,EAAM9E,QAAN,GAAAioB,OAAiB,sBAAwByE,EAAqB,WAAajvB,EAAK,YAAc,CAC1FoT,OAAQqoB,GAAW,UACnBhG,OAAQpuB,EAAMgjB,IAAI,uCAClBjL,UAAW/X,EAAMgjB,IAAI,6CAOzC,SAAS6Q,GAAT/L,GAA+C,IAAhBrvB,EAAgBqvB,EAAhBrvB,MAAOuH,EAAS8nB,EAAT9nB,MAC7BvH,EAAMgE,OACbuD,EAAM0iB,IAAI,qCAAsCjqB,EAAMgE,KAAK9D,IAC3DqH,EAAM0iB,IAAI,4CAA6CjqB,EAAMgE,KAAKxC,OAClE+F,EAAM0iB,IAAI,mDAAmD,IA+C/D,SAASjI,GAATgO,GAAqD,IAAfhwB,EAAegwB,EAAfhwB,MAAOuH,EAAQyoB,EAARzoB,MAC5C,IAAMA,EAAMgjB,IAAI,kBAAoB,CACjC,IAAIiM,EA1GR,SAAAjwB,GAAuDA,EAAdvG,MAAc,IAAPuH,EAAOhB,EAAPgB,MAC1CrH,EAAKqH,EAAMgjB,IAAI,qBACfqR,EAAOr0B,EAAMgjB,IAAI,sCAErB,OADahjB,EAAMgjB,IAAN,sBAAAG,OAAgCkR,EAAhC,YAAAlR,OAA+CxqB,EAA/C,eACI,YAsGmBu2B,CAA+B,CAACz2B,QAAOuH,UACrEivB,GACFjvB,EAAM0iB,IAAI,sCAAuCuM,GAErDjvB,EAAM0iB,IAAI,yCAzHZ,WACI,IAAIyM,EAAQ,IAAIjH,KACZkH,EAAKD,EAAME,UACXC,EAAKH,EAAMI,WAAa,EAK5B,OAHGH,EAAK,KAAMA,EAAK,IAAMA,GACtBE,EAAK,KAAMA,EAAK,IAAMA,GAFdH,EAAMK,cAIH,IAAMF,EAAK,IAAMF,EAiHmBrX,IACpD/X,EAAM0iB,IAAI,sCAAuC1iB,EAAMgjB,IAAI,gBCjM9CkO,yBAAO,CAEtBlxB,MAAQ,CACJrH,GAAI,SACJsB,MAAO,kBAEPwN,WAAY,GAEZqL,OAAQ,GAERwhB,iBAAkB,CAChB52B,UAAW,CACT/E,GAAI,KACJ2G,YAAa,YACbi1B,iBAAiB,EACjB16B,UAAW,GACbkD,UAAU,EACR0lB,SAAS,GAEXwK,KAAM,CACJt0B,GAAI,GACJoU,KAAM,IAERgH,MAAO,CACLpb,GAAI,KACJ2G,YAAa,QACbi1B,iBAAiB,EACjBxnB,KAAM,GACNhQ,UAAU,EACV0lB,SAAS,EACToI,WAAY,KACZ2J,kBAAkB,GAEpBzoB,OAAQ,CACNA,OAAQ,KACRqiB,OAAQ,KACRrW,UAAW,QAMjB0M,YCvCatC,GAPC,CACdpN,OAAQ,CAAC,mBAAoB,mBAC7BxD,QAAQ,EACRsD,KAAM,GACNc,WAAW,GCYEub,qBAAO,CACrBlxB,MAAOmiB,GAEPsC,QAAS,CACFnQ,cAAe8V,GACfzV,SAAQ,GAAAwO,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CACDyyB,IADCzyB,OAAAs0B,GAAA,EAAAt0B,CACkB6xB,KAE1BrV,eAAgBmV,GAChBjY,eAAgBqY,GAChB3W,kBAAmBkX,GACnBhX,gBAAiB8W,GACjBpX,cAAewX,GACfhX,iBAAkBA,GAClBpC,6BAA8BA,MCrBvB6f,qBAAO,CACrBlxB,MAAO,CACNmD,MAAM,EACNsxB,KAAM,aACNrZ,kBAAkB,GAGnBqJ,QAAS,CACRqH,iBAAkBA,GAClBE,gCAAiCA,GACjCxP,uBAAwBA,GACxBpC,wBAAyBA,sLCdpB,IAAIne,GAAsB,CAC/BmgB,GACDsG,eAAI1iB,gBAAA00B,MAA0B,cAC9BhS,eAAI1iB,gBAAA20B,OAA0B,IAIpB/6B,GAAsB,CAC7BwiB,GAyHJ,SAAA2J,GAAmD,IAAfttB,EAAestB,EAAfttB,MAAOuH,EAAQ+lB,EAAR/lB,MAC1CA,EAAM0iB,IAAI,4CAA6CjqB,EAAMoB,WAC7DmG,EAAM0iB,IAAI,mDAAmD,KAvHnD3oB,GAAe,CA0H1B,SAAA0tB,GAA+C,IAAfhvB,EAAegvB,EAAfhvB,MAAOuH,EAAQynB,EAARznB,MAC/BrH,EAAKqH,EAAMgjB,IAAN,qBACThjB,EAAM0iB,IAAN,kBAAAS,OAA4BxqB,EAA5B,SAAuCF,EAAMoB,WAC7CmG,EAAM0iB,IAAI,0CAA0C,KA7H9BS,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAEtBk2B,KAGO1e,GAAiB,CA2H5B,SAAAqY,GAAiD,IAAfrvB,EAAeqvB,EAAfrvB,MAAOuH,EAAQ8nB,EAAR9nB,MACjCrH,EAAKqH,EAAMgjB,IAAN,qBACLvX,EAAWwa,KAAKC,MAAMD,KAAK2O,UAAU50B,EAAMgjB,IAAN,kBAAAG,OAA4BxqB,EAA5B,gBACzCgF,QAAQC,IAAI,2CAAyC6N,GAClDA,GAAYA,EAAS6G,QAAQC,YAAY,GAAGtG,OAAS,EACpDjM,EAAM0iB,IAAI,6CAA6C,GAGvD1iB,EAAM0iB,IAAI,6CAA6C,GAG3DyH,GAAuB,CAAC1xB,QAAOuH,UAE/BA,EAAM0iB,IAAI,8BAA+BjX,GAC5CzL,EAAM0iB,IAAI,kBAAkB,GACzB1iB,EAAM0iB,IAAI,qBAAqB,KA1IPS,OAAAlrB,OAAAs0B,GAAA,EAAAt0B,CAErB0kB,IAFqB1kB,OAAAs0B,GAAA,EAAAt0B,CAGxB0yB,KAGOkK,GAAwB,CAuInC,SAAA7M,GAAqDA,EAAfvvB,MAAeuvB,EAARhoB,MACtC0iB,IAAI,2CAA2C,KApI3ChqB,GAAkB,CAQ7B,SAAAsG,GAA+C,IAAfvG,EAAeuG,EAAfvG,MAAOuH,EAAQhB,EAARgB,MACrB,cAAbvH,EAAME,GACTqH,EAAM0iB,IAAI,mDAAmD,GAE7D1iB,EAAM0iB,IAAI,0CAA0C,KAR3C7pB,GAAmB,CAY9B,SAAAgqB,GAAgD,IAAfpqB,EAAeoqB,EAAfpqB,MAAOuH,EAAQ6iB,EAAR7iB,MACvC,GAAiB,cAAbvH,EAAME,GAAoB,CAC1B,IAAIivB,EAAqB5nB,EAAMgjB,IAAI,sCAChC4E,GACI5nB,EAAM0iB,IAAI,4CACN1iB,EAAMgjB,IAAN,GAAAG,OAAa,sBAAwByE,EAAqB,YAExE5nB,EAAM0iB,IAAI,mDAAmD,QAE7D1iB,EAAM0iB,IAAI,0CAA0C,KAYtD,SAAStG,GAAT2G,GAAgD,IAAdtqB,EAAcsqB,EAAdtqB,MAAOuH,EAAO+iB,EAAP/iB,MAGjC6uB,EAAap2B,EAAMoB,UACnBo6B,EAAcj0B,EAAMgjB,IAAI,sBACLhjB,EAAMgjB,IAAI,uBAIhC6L,EAAa7uB,EAAMgjB,IAAI,8CAExB,IAAI8R,GAAS,EACb78B,OAAOsV,KAAK0mB,GAAe,IAAIzhB,QAAQ,SAASzW,GAEzC8yB,IAAeoF,EAAYl4B,GAAK9B,OAA+B,IAAtB40B,EAAW5iB,QACnDjM,EAAM0iB,IAAI,4CAA4C,GACtDoS,GAAS,GAGLA,GACA90B,EAAM0iB,IAAI,4CAA4C,KCtFvDwO,yBAAO,CACrBlxB,MAAO,GAEPykB,YCactC,GAlBC,CACZhV,QAAS,CACL7B,KAAM,EACRke,UAAU,EACV1W,OAAQ,IAEV1F,QAAS,CACL9B,KAAM,EACRke,UAAU,EACV1W,OAAQ,IAEVzF,UAAW,CACP/B,KAAM,EACRke,UAAU,EACV1W,OAAQ,KCRCoe,qBAAO,CAEpBlxB,MAAQmiB,GAERsC,QAAS,CACR3Y,eAAgBA,GAChBmX,SAAUA,MCVEiO,qBAAO,CAEpBlxB,MAAQ,GAERykB,sBCLayM,qBAAO,CACrBlxB,MAAO,GAEPykB,aCKGsQ,GADa,2BAGF7D,qBAAO,CAErBlxB,MAAQ,CACPg1B,iBAAyBD,GACvBE,wBAAyBF,GAC3BG,YAAyBH,GACvBI,mBAAyBJ,GAC3BtrB,MAAyB,GAG1Bgb,QAAS,CACR9a,cAAyByoB,GACzBvoB,cAAyBgpB,GACzB9oB,kBAAyB2nB,GACvBznB,wBAAyB4nB,GACzB/tB,gBAAyBA,MCrBdotB,qBAAO,CAElBlxB,MAAQ,CACJo1B,QAAS,GACTC,SAAS,EACTp6B,cAAe,OACfq6B,eAAe,GAGnB7Q,QAAS,CACL8Q,iBxB4KuB,GwB3KvB/N,kBAAmBA,GACnByB,kBAAmBA,MChBZiI,qBAAO,CAClBlxB,MAAQ,CACJo1B,QAAS,GACTI,MAAO,GACPH,SAAS,EACTp6B,cAAe,EACfw6B,UAAW,GACXhT,SAAS,GAEbgC,YCZSiR,GAAU,CACrB,SAAA12B,GAAsB,IAAnBgB,EAAmBhB,EAAnBgB,MAAOvH,EAAYuG,EAAZvG,MAEF4N,EAAc5N,EAAMwJ,MAAQxJ,EAAMuJ,OAAS,YAAc,WAC3DhC,EAAMgjB,IAAI,wBAA0B3c,GACtCrG,EAAM0iB,IAAI,qBAAsBrc,GAGlC,IAAMD,EACY,aAAhBC,EAA6B5N,EAAMwJ,MAAQ,IAAMxJ,EAAMuJ,OAAS,IAC9DhC,EAAMgjB,IAAI,oBAAsB5c,GAClCpG,EAAM0iB,IAAI,iBAAkBtc,KAIrB+Z,GAAO,CAClB,SAAA0C,GAAA,OAAAA,EAAG8S,WAA4BxV,KAAK,mBACpCuV,ICbaxE,qBAAO,CACpBlxB,MAAQ,CACNoG,SAAS,EACTC,YAAa,YAEfoe,YCOatC,GAhBC,CACdhf,MAAM,EACNc,QAAS,SACTmxB,QAAS,CACPQ,SAAU,CACR37B,MAAO,UAET47B,SAAU,CACR57B,MAAO,UAET67B,SAAU,CACR77B,MAAO,gGCRN,IAAIsJ,GAAqB,CAACggB,kBAAOvjB,gBAAA+1B,QAEjC,SAAS3xB,GAATpF,GAAuC,IAAdvG,EAAcuG,EAAdvG,MAAOuH,EAAOhB,EAAPgB,MAClCvH,EAAMgE,MACPuD,EAAM0iB,IAAN,mBAA8BjqB,EAAMgE,MCFzBy0B,4BAAO,CACpBlxB,MAAQmiB,GACRsC,QAASA,ICKItC,GAZC,CACZhV,QAAS,CACLhK,MAAM,GAEViK,QAAS,CACNjK,MAAM,GAETkK,UAAW,CACRlK,MAAM,ICHE+tB,qBAAO,CAElBlxB,MAAQmiB,GAERsC,QAASA,ICkBEyM,qBAAO,CACrBC,SAAO6E,GAAA,CACNrW,OACAjpB,UACE0T,eACAua,KAAMsR,KACR/lB,cACAzL,WACEyxB,YACFtnB,YACAunB,QACA/kB,YACAuG,gBACAngB,sBACA0T,WACAkrB,WACEtjB,OAAQujB,KACV5uB,eAhBMxP,OAAAupB,EAAA,EAAAvpB,CAAA+9B,GAAA,SAiBNljB,IAjBM7a,OAAAupB,EAAA,EAAAvpB,CAAA+9B,GAAA,kBAkBN1Y,IAlBMrlB,OAAAupB,EAAA,EAAAvpB,CAAA+9B,GAAA,YAmBOM,MAnBPr+B,OAAAupB,EAAA,EAAAvpB,CAAA+9B,GAAA,WAoBNjzB,IApBMizB,IAuBNO,UAAW,CACT5R,KAAM6R,QC7BKC,6BAAWC,GAAa,CACtCC,SAAiC,4BCd5BC,YAAWC,4BAIjBC,iBACE3+B,EAAAC,EAAAC,cAAC0+B,EAAA,UAAD,CAAWC,WAAYA,GAAY/9B,MAAO,CAAE+I,OAAQ,UAClD7J,EAAAC,EAAAC,cAAC4+B,GAAA7+B,EAAD,CAAkBuJ,MAAOi1B,IACvBz+B,EAAAC,EAAAC,cAAC6+B,GAAD,QAGJC,SAASC,eAAe","file":"static/js/main.d147603e.chunk.js","sourcesContent":["//Local Development Values\nconst devtoolsPort = 8787;\nconst oadaDomain = process.env.REACT_APP_OADA_DOMAIN || 'https://yield.oada-dev.com';\nconst websiteDomain = 'http://localhost:' + parseInt(window.location.port, 10);\nconst metadata = require('./dev_metadata.js');\nconst defaultNewConnectionURL = 'https://localhost';\nconst appName = \"FieldWorkApp\";\nconst contentType = 'application/vnd.oada.yield.1+json';\nconst bookmarksOperations = '/bookmarks/operations';\nconst bookmarksFields = '/bookmarks/fields';\n\nexport default {\n  oadaDomain,\n  devtoolsPort,\n  websiteDomain,\n  metadata,\n  defaultNewConnectionURL,\n  appName,\n  contentType,\n  bookmarksOperations,\n  bookmarksFields\n}\n","module.exports = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n","//Production Development Values\nconst devtoolsPort = 8787;\nconst oadaDomain = process.env.REACT_APP_OADA_DOMAIN || 'https://yield.oada-dev.com';\nconst websiteDomain = 'https://fieldworkapp.oada-dev.com:8080';\nconst metadata = require('./proddev_metadata');\nconst defaultNewConnectionURL = 'https://fieldworkapp.oada-dev.com';\n\nexport default {\n  oadaDomain,\n  devtoolsPort,\n  websiteDomain,\n  metadata,\n  defaultNewConnectionURL\n}\n","module.exports = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n","//Production Values\nconst devtoolsPort = 8787;\nconst oadaDomain = process.env.REACT_APP_OADA_DOMAIN || 'https://yield.oada-dev.com';\nconst websiteDomain = 'https://fieldworkapp.oada-dev.com';\nconst metadata = require('./prod_metadata.js');\nconst defaultNewConnectionURL = 'https://fieldworkapp.oada-dev.com';\nconst appName = \"FieldWorkApp\";\nconst contentType = 'application/vnd.oada.yield.1+json';\nconst bookmarksOperations = '/bookmarks/operations';\nconst bookmarksFields = '/bookmarks/fields';\n\nexport default {\n  oadaDomain,\n  devtoolsPort,\n  websiteDomain,\n  metadata,\n  defaultNewConnectionURL,\n  appName,\n  contentType,\n  bookmarksOperations,\n  bookmarksFields\n}\n","module.exports = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport { state, signal} from 'cerebral/tags';\nimport _ from 'lodash';\nimport TextField from 'material-ui/TextField';\nimport { InputAdornment } from 'material-ui/Input';\nimport Paper from 'material-ui/Paper';\nimport { MenuItem } from 'material-ui/Menu';\nimport IconButton from 'material-ui/IconButton';\nimport Icon from 'material-ui/Icon';\nimport Downshift from 'downshift';\nimport ArrowDropDown from \"material-ui-icons/ArrowDropDown\";\n\nconst styles = theme => ( {\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    height: 250,\n    width: 50,\n  },\n  inputBox: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center'\n  },\n  suggestionsContainerOpen: {\n    position: 'absolute',\n    width: 180,\n    marginTop: theme.spacing.unit * 0.1,\n    marginBottom: theme.spacing.unit * 0,\n    marginLeft: 30,\n    marginRight: 0,\n    zIndex: 3,\n  },\n  suggestion: {\n    display: 'block',\n  },\n  suggestionsList: {\n    marginTop: theme.spacing.unit * 0.1,\n    marginBottom: theme.spacing.unit * 0,\n    marginLeft: 0,\n    marginRight: 0,\n    padding: 0,\n    listStyleType: 'none'\n  },\n  disabled: {\n    pointerEvents: 'none',\n    opacity: 0.4,\n    touchAction: 'none',\n  },\n  menuButton: {\n    marginLeft: 2,\n    marginRight: 2\n  }\n});\n\nlet temp = \"FieldWorkApp\";\n//this.props.operationSuggestions[this.props.currentOperationId].label\n\nclass AutocompleteSearch extends React.Component {\n\n  renderInput(inputProps) {\n    const { InputProps, classes, isMenuBar, ref, ...other } = inputProps;\n    return (\n      <TextField\n        onFocus={() => {this.props.openSuggestions({id: this.props.id})}}\n        onBlur={() => {this.props.closeSuggestions({id: this.props.id})}}\n        value={temp}\n        {...other}\n        inputRef={ref}\n        InputProps={{\n          style: {color: '#FAFAFA'},\n          classes: {\n            input: classes.input,\n          },\n          endAdornment: (\n            <InputAdornment position=\"start\">\n              <IconButton\n                aria-label=\"clear textfield\"\n                className={classes.menuButton}\n                onClick={ () => {\n                  if (this.props.id === 'ops-input') {\n                    this.props.operationInputTyped({inputText: \"\", inputType: \"operation\"});\n                  } else {\n                    this.props.fieldInputTyped({inputText: \"\", inputType: \"field\"});\n                  }\n                } }\n              >\n                <ArrowDropDown />\n              </IconButton>\n            </InputAdornment>\n          ),\n          ...InputProps,\n        }}\n        label={this.props.id === 'ops-input' ? (isMenuBar ? \"\" : \"Operation\") : \"Field\"}\n        InputLabelProps={{style: {color: 'white'}, shrink: true}}\n      />\n    );\n  }\n\n  getSuggestions(inputValue) {\n    let suggestions = [];\n    //let ht = {};\n\n    if (this.props.id === 'ops-input') {\n      suggestions = Object.values(this.props.operationSuggestions || {}).filter(suggestion => (\n        inputValue === \"\" || _.find(this.props.operationSuggestions, s => s.label === inputValue) ||\n        // inputValue === \"\" || Object.values(this.props.operationSuggestions).map(suggestion => (suggestion.label)).includes(inputValue) ||\n          suggestion.label.toLowerCase().includes(inputValue.trim().toLowerCase())\n      ));\n      // console.log(\"--> Suggestions \", suggestions);\n      // let clonedSuggestions = _.cloneDeep(suggestions);\n      // let length = clonedSuggestions.length;\n      // for(let i=0; length-1; i++){\n      //   //console.log(\"hashTable value \", ht[clonedSuggestions[i].label]);\n      //   if(clonedSuggestions[i] && ht[clonedSuggestions[i].label]){\n      //     console.log(\"suggestion -->\", clonedSuggestions[i].label);\n      //     delete clonedSuggestions[i];\n      //   }\n      //   else {\n      //     if(clonedSuggestions[i]) {\n      //       ht[clonedSuggestions[i].label] = true;\n      //     }\n      //   }\n      // }\n\n      if(this.props.connection_id !== \"none\")\n        suggestions.unshift({'action': 'add', type: 'operation', label: 'add new operation'});\n\n      return suggestions;\n    }//if\n\n    if (this.props.id === 'fld-input') {\n      suggestions = Object.values(this.props.fieldSuggestions).filter(suggestion => (\n        inputValue === \"\" || _.find(this.props.fieldSuggestions, s => s.label === inputValue) ||\n        suggestion.label.toLowerCase().includes(inputValue.trim().toLowerCase())\n      ));\n\n      /* add button at the beginning of the drop down menu */\n      suggestions.unshift({'action': 'add', type: 'field', label: 'add new field'});\n      return suggestions;\n    }\n  }//getSuggestions\n\n  renderSuggestion(params) {\n    const { suggestion, index, itemProps, highlightedIndex, selectedItem } = params;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = selectedItem === suggestion.label;\n\n    if ('action' in suggestion && suggestion.action === 'add') {\n      return (\n        <MenuItem\n          {...itemProps}\n          key={suggestion.label}\n          onClick={(event) => {\n            (this.props.id === 'ops-input') ?\n              this.props.addOperationClicked({}) :\n              this.props.addFieldClicked({})\n            }\n          }\n          selected={isHighlighted}\n          component=\"div\"\n          style={{\n            display: 'block',\n            color: 'green',\n            fontStyle: 'italic',\n            fontWeight: isSelected ? 500 : 400,\n          }}\n        >\n          {suggestion.label}\n        </MenuItem>\n      );\n    } else {\n      return (\n        <MenuItem\n          {...itemProps}\n          key={suggestion.label}\n          onClick={(event) => {\n            (this.props.id === 'ops-input') ?\n              this.props.operationSelected({item: suggestion}) :\n              this.props.fieldSelected({item: suggestion})\n            }}\n          selected={isHighlighted}\n          component=\"div\"\n          style={{\n            display: 'block',\n            fontWeight: isSelected ? 500 : 400,\n          }}\n        >\n          {suggestion.label}\n        </MenuItem>\n      );\n    }\n  }\n\n  renderAddButton(params) {\n    const { classes, addOperationDisabled, addFieldDisabled } = params;\n    return (\n      <IconButton\n        aria-label=\"add\"\n        className={classes.button}\n        disabled={this.props.id === 'ops-input' ? addOperationDisabled : addFieldDisabled}\n        onClick={\n          this.props.id === 'ops-input' ?\n            () => {this.props.addOperationClicked({})} :\n            () => {this.props.addFieldClicked({})}\n        }\n      >\n        <Icon style={{'color': 'white', 'fontSize': 16}}>add_circle</Icon>\n      </IconButton>\n    )\n  }\n\n  renderEditButton(params) {\n    const { classes } = params;\n    return (\n      <IconButton\n        aria-label=\"fields\"\n        disabled={this.props.id === 'ops-input' ? !(this.props.currentOperationId) : !(this.props.currentFieldId)}\n        className={classes.button}\n        onClick={\n          this.props.id === 'ops-input' ?\n            (event) => { this.props.editOperationClicked({event: event}) } :\n            (event) => { this.props.editFieldClicked({event: event}) }\n        }\n      >\n        <Icon style={{'color': 'white', 'fontSize': 16}}>mode_edit</Icon>\n      </IconButton>\n    )\n  }\n\n  isAddOperationDisabled() {\n    const ret = (\n      (this.props.operationInputText.trim() === \"\") ||\n      (\n        Object.values(this.props.operationSuggestions).map(operation => {\n          return operation.label.toLowerCase();\n        }).includes(this.props.operationInputText.trim().toLowerCase())\n      )\n    );\n    if (ret) { console.log(\"AddOperationDisabled\"); }\n    if (!ret) { console.log(\"AddOperationEnabled\"); }\n  }\n\n\n  render() {\n    const { classes, sourceAppBar } = this.props;\n\n    return(\n      <Downshift\n        isOpen={this.props.id === 'ops-input' ? this.props.operationsSuggestionsOpen : this.props.fieldsSuggestionsOpen}\n        selectedItem={this.props.id === 'ops-input' ? this.props.currentOperationId : this.props.currentFieldId}\n        inputValue={this.props.id === 'ops-input' ? this.props.operationInputText : this.props.fieldInputText}\n        itemToString={(item) => (item == null ? '' : item.label)}\n        onStateChange={(changes, stateAndHelpers) => {\n\n          const type = (this.props.id === 'ops-input') ? 'operation' : 'field';\n          switch (changes.type) {\n            case Downshift.stateChangeTypes.keyDownEnter:\n            case Downshift.stateChangeTypes.clickItem:\n              if (type === 'operation') {\n                this.props.operationSelected({item: changes.selectedItem});\n              } else {\n                this.props.fieldSelected({item: changes.selectedItem});\n              }\n              break;\n            case Downshift.stateChangeTypes.changeInput:\n              if (type === 'operation') {\n                this.props.operationInputTyped({inputText: changes.inputValue, inputType: type});\n              } else {\n                this.props.fieldInputTyped({inputText: changes.inputValue, inputType: type});\n              }\n              break;\n            case Downshift.stateChangeTypes.mouseUp:\n            case Downshift.stateChangeTypes.blurInput:\n              if (type === 'operation') {\n                if (!(!this.props.currentOperationId) && this.props.operationInputText === \"\") {\n                  //this.props.operationSelected({item: this.props.operationSuggestions[this.props.currentOperationId]});\n                }\n              } else {\n                if (!(!this.props.currentFieldId)) {\n                  this.props.fieldSelected({item: this.props.fieldSuggestions[this.props.currentFieldId]});\n                }\n              }\n              break;\n            default:\n              break;\n          }\n        }}\n      >\n        {({ getInputProps, getItemProps, isOpen, inputValue, selectedItem, highlightedIndex }) => (\n          <div>\n\n            <div className={classes.inputBox}>\n              {this.renderInput({\n                isMenuBar: sourceAppBar,\n                fullWidth: false,\n                classes,\n                InputProps: getInputProps({\n                  placeholder: (this.props.id === 'ops-input' ? 'Operation' : (this.props.id === 'fld-input' ? 'Field' : this.props.id)),\n                  id: 'autocomplete-search-' + this.props.id,\n                }),\n              })}\n            </div>\n            {isOpen ? (\n              <Paper square className={classes.suggestionsContainerOpen}>\n                <div className={classes.suggestionsList}>\n                  {this.getSuggestions(inputValue).map((suggestion, index) =>\n                    this.renderSuggestion({\n                      suggestion,\n                      index,\n                      itemProps: getItemProps({\n                        item: suggestion\n                      }),\n                      highlightedIndex,\n                      selectedItem\n                    }),\n                  )}\n                </div>\n              </Paper>\n            ) : null}\n          </div>\n        )}\n      </Downshift>\n    );\n  }\n}\n\nAutocompleteSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    operationSuggestions:       state`operations.records`,\n    connection_id:              state`operations.connection_id`,\n    currentOperationId:         state`User.currentSelection.operation.id`,\n    operationInputText:         state`User.currentSelection.operation.inputText`,\n    operationsSuggestionsOpen:  state`User.currentSelection.operation.suggestionsOpen`,\n    fieldSuggestions:           state`fields.records`,\n    currentFieldId:             state`fields.selectedId`,\n    fieldsSuggestionsOpen:      state`fields.new_field.field.suggestionsOpen`,\n    fieldInputText:             state`fields.records.${state`fields.selectedId`}.name`,\n\n    operationInputTyped:        signal`AutocompleteSearch.operationInputTyped`,\n    fieldInputTyped:            signal`AutocompleteSearch.fieldInputTyped`,\n    addOperationClicked:        signal`AutocompleteSearch.addOperationClicked`,\n    editOperationClicked:       signal`AutocompleteSearch.handleOperationEdited`,\n    editFieldClicked:           signal`AutocompleteSearch.handleFieldEdited`,\n    openSuggestions:            signal`AutocompleteSearch.openSuggestions`,\n    closeSuggestions:           signal`AutocompleteSearch.closeSuggestions`,\n    operationSelected:          signal`User.handleOperationSelected`,\n    operationCleared:           signal`User.handleOperationCleared`,\n    addFieldClicked:            signal`User.addFieldClicked`,\n    fieldSelected:              signal`fields.handleFieldSelected`,\n    fieldCleared:               signal`fields.handleFieldCleared`,\n\n  },\n  withStyles(styles, { withTheme: true })(AutocompleteSearch)\n);\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { Menu, MenuItem } from \"material-ui\";\nimport MenuIcon from 'material-ui-icons/Menu';\nimport IconButton from \"material-ui/IconButton\";\nimport {withStyles} from \"material-ui/styles\";\n\nvar anchorEl;\n\nconst styles = theme => ({\n  menuButton: {\n    marginLeft: 2,\n    marginRight: 2\n  },\n});\n\nclass MenuList extends React.Component {\n\n  handleClose = () => {\n    anchorEl = null;\n  };\n\n  handleMenuList = event => {\n    anchorEl = event.currentTarget;\n  };\n\n  render() {\n\n    const { classes } = this.props;\n\n    anchorEl = this.props.open ? anchorEl : null;\n    return (\n      <div>\n        <IconButton\n          key={7}\n          color=\"inherit\"\n          aria-label=\"simple-menu-button\"\n          id=\"simple-menu-button\"\n          aria-owns={\"simple-menu\"}\n          aria-haspopup=\"true\"\n          onClick={(evt) => {this.handleMenuList(evt); this.props.handleMenuListOpen({})}}\n          className={classes.menuButton}\n          disabled={\n            this.props.connection_id === \"none\" || this.props.fieldsEditing || this.props.emptyDataSet\n          }\n        >\n          <MenuIcon />\n        </IconButton>\n        {(this.props.open) ?\n          <Menu\n            id=\"simple-menu\"\n            open={this.props.open}\n            onClose={this.props.handleMenuListOpen}\n            anchorEl={anchorEl}\n          >\n            <MenuItem onClick={()=>{ this.props.handleMenuListOpen({}); this.props.addOperatorClicked({})} }>Add Operator</MenuItem>\n            <MenuItem onClick={()=>{ this.props.handleMenuListOpen({}); this.props.clearConnection({})}    }>Reset Cache</MenuItem>\n            <MenuItem onClick={()=>{ this.props.handleMenuListOpen({}); this.props.clearConnection({})}    }>Logout</MenuItem>\n          </Menu>\n          : null}\n      </div>\n    )}\n}\n\n\nMenuList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    menuItems:          state`MenuList.records`,\n    current:            state`MenuList.current`,\n    open:               state`MenuList.open`,\n\n    setCurrentItem:     signal`MenuList.setCurrentItem`,\n    addOperatorClicked: signal`operators.addOperatorClicked`,\n    clearConnection:    signal`Connections.clearConnection`,\n    handleMenuListOpen: signal`MenuList.handleMenuListOpen`,\n  },\n  withStyles(styles, {withTheme: true})(MenuList)\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"material-ui/styles\";\nimport classNames from \"classnames\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport AppBar from \"material-ui/AppBar\";\nimport Toolbar from \"material-ui/Toolbar\";\nimport IconButton from \"material-ui/IconButton\";\nimport Button from \"material-ui/Button\";\nimport ChevronRightIcon from 'material-ui-icons/ChevronRight';\nimport Typography from \"material-ui/Typography\";\nimport MoreVertIcon from \"material-ui-icons/MoreVert\";\nimport AutocompleteSearch from \"../AutocompleteSearch\";\nimport AddBoxIcon from \"material-ui-icons/AddBox\";\nimport MenuList from \"../MenuList\";\n\nconst styles = theme => ({\n  appBar: {\n    display: \"flex\",\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    height: 64,\n    order: 1\n  },\n  buttons: {\n  },\n  menuButton: {\n    marginLeft: 2,\n    marginRight: 2\n  },\n  hide: {\n    display: \"none\"\n  },\n  disabled: {\n    pointerEvents: \"none\",\n    opacity: 0.4,\n    touchAction: \"none\"\n  },\n  typography: {\n    flex: 1,\n    width: 200\n  }\n});\n\nclass MenuBar extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    const drawer_button = (\n      <IconButton\n        key={0}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => {\n          this.props.handleSideDrawerOpen({});\n        }}\n        className={classNames(\n          classes.menuButton,\n          this.props.currentOperation &&\n            this.props.sideDrawerOpen &&\n            classes.hide,\n          !this.props.currentOperation && classes.disabled\n        )}\n      >\n        <ChevronRightIcon />\n      </IconButton>\n    );\n\n    const settings_button = (\n      <IconButton\n        key={1}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.connectionsClicked({})}\n        className={classes.menuButton}\n      >\n        <MoreVertIcon />\n      </IconButton>\n    );\n\n    const settings_button_text = (\n      <Button\n        key={2}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.connectionsClicked({})}\n        className={classes.menuButton}\n        disabled={this.props.connection_id === \"none\"}\n      >\n        Connect\n      </Button>\n    );\n\n    const add_field = (\n      <IconButton\n        key={4}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.addFieldClicked({})}\n        className={classes.menuButton}\n        disabled={\n          this.props.connection_id === \"none\" || this.props.fieldsEditing || this.props.emptyDataSet\n        }\n      >\n        <AddBoxIcon />\n      </IconButton>\n    );\n\n    const add_field_text = (\n      <Button\n        key={5}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.addFieldClicked({})}\n        className={classes.menuButton}\n        disabled={\n          this.props.connection_id === \"none\" || this.props.fieldsEditing || this.props.emptyDataSet\n        }\n      >\n        Add Field\n      </Button>\n    );\n\n    const ops_input = (\n      <AutocompleteSearch\n        id=\"ops-input\"\n        style={{ width: 200 }}\n        sourceAppBar={true}\n      />\n    );\n\n    return (\n      <AppBar className={classes.appBar} position=\"static\">\n        <Toolbar\n          className={classes.appBar}\n          disableGutters={\n            !(this.props.sideDrawerOpen && this.props.currentOperation)\n          }\n        >\n          {drawer_button}\n\n          <Typography\n            variant=\"title\"\n            color=\"inherit\"\n            style={{ align: \"left\" }}\n            className={classes.typography}\n            noWrap\n          >\n            {!this.props.sideDrawerOpen ? ops_input : null}\n          </Typography>\n\n            {(this.props.isSmall && this.props.orientation === \"portrait\") ? settings_button : settings_button_text}\n            {(this.props.isSmall && this.props.orientation === \"portrait\") ? add_field : add_field_text}\n            <MenuList />\n\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nMenuBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    addFieldClicked:            signal`fields.addFieldClicked`,\n    operationInputTyped:        signal`AutocompleteSearch.operationInputTyped`,\n    addOperationClicked:        signal`AutocompleteSearch.addOperationClicked`,\n    editOperationClicked:       signal`AutocompleteSearch.handleOperationEdited`,\n    operationCleared:           signal`User.handleOperationCleared`,\n    addOperatorClicked:         signal`operators.addOperatorClicked`,\n    handleSideDrawerOpen:       signal`SideDrawer.handleDrawerOpen`,\n    connectionsClicked:         signal`MenuBar.connectionsClicked`,\n    signoutClicked:             signal`MenuBar.signoutClicked`,\n    clearCacheClicked:          signal`MenuBar.clearCacheClicked`,\n    addNewFieldClicked:         signal`MenuBar.addNewFieldClicked`,\n    showStatsClicked:           signal`StatsBar.handleOpenStats`,\n    handleMenuListOpen:         signal`MenuList.handleMenuListOpen`,\n\n    sideDrawerOpen:             state`SideDrawer.open`,\n    operations:                 state`operations.records`,\n    connection_id:              state`operations.connection_id`,\n    appName:                    state`App.appName`,\n    contentType:                state`App.contentType`,\n    appIsMobile:                state`App.is_mobile`,\n    emptyDataSet:               state`App.emptyDataSet`,\n    orientation:                state`window.orientation`,\n    isSmall:                    state`window.isSmall`,\n    infoBarOperationsOpen:      state`InfoBar.operations.open`,\n    fieldsEditing:              state`fields.editing`,\n    operationInputText:         state`User.currentSelection.operation.inputText`,\n    currentOperation:           state`User.currentSelection.operation.id`,\n    operationsSuggestionsOpen:  state`User.currentSelection.operation.suggestionsOpen`,\n    MenuListOpen:               state`MenuList.open`\n  },\n  withStyles(styles, { withTheme: true })(MenuBar)\n);\n","import React from \"react\";\nimport { connect } from \"@cerebral/react\";\nimport {\n  TextField,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"material-ui\";\nimport Dialog from \"material-ui/Dialog\";\nimport Button from \"material-ui/Button\";\nimport { state, signal } from \"cerebral/tags\";\n\nexport default connect(\n  {\n    oadaDomainText:           state`Connections.oada_domain_text`,\n    oadaFieldsDomainText:     state`Connections.oada_fields_domain_text`,\n    show:                     state`Connections.show`,\n\n    submitClicked:            signal`Connections.submitClicked`,\n    cancelClicked:            signal`Connections.cancelClicked`,\n    oadaDomainChanged:        signal`Connections.oadaDomainChanged`,\n    oadaFieldsDomainChanged:  signal`Connections.oadaFieldsDomainChanged`\n  },\n\n  class Connections extends React.Component {\n    render() {\n      return (\n        <Dialog open={this.props.show} className={\"connections-dialog\"}>\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Data Source [2.6.0]\"}{\" \"}\n          </DialogTitle>\n          <DialogContent>\n            At what OADA domain is your data stored?\n          </DialogContent>\n          <DialogContent>\n            <div>\n              <TextField\n                label=\"Domain\"\n                value={this.props.oadaDomainText}\n                onChange={e => this.props.oadaDomainChanged({ value: e.target.value })}\n                style={{ width: 250 }}\n              />\n            </div>\n            {/*<div>*/}\n            {/*<TextField*/}\n            {/*label=\"Fields Domain\"*/}\n            {/*value={this.props.oadaFieldsDomainText}*/}\n            {/*onChange={(e) => this.props.oadaFieldsDomainChanged({value: e.target.value})}*/}\n            {/*style = {{width: 250}}*/}\n            {/*/>*/}\n            {/*</div>*/}\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                this.props.cancelClicked({});\n              }}\n              color=\"secondary\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {this.props.submitClicked({});}}\n              color=\"secondary\"\n              autoFocus\n            >\n              Submit\n            </Button>\n          </DialogActions>\n        </Dialog>\n      );\n    }\n  }\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport {state, signal} from 'cerebral/tags';\nimport ListSubheader from 'material-ui/List/ListSubheader';\nimport List, { ListItem, ListItemText } from 'material-ui/List';\nimport Collapse from 'material-ui/transitions/Collapse';\nimport ExpandLess from 'material-ui-icons/ExpandLess';\nimport ExpandMore from 'material-ui-icons/ExpandMore';\nimport Typography from 'material-ui/Typography';\n\nconst styles = theme => ({\n  root: {\n    maxWidth: 310, //was 360\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass OpsList extends React.Component {\n\n  renderItem(params) {\n    const {key, color1, color2, bannerText, classes} = params;\n    const area = this.props.OpsList[key]['fields'].reduce((a, b) => {return a + (b.boundary ? b.boundary.area : 0)}, 0);\n    const percent = !(!params['total_area']) ?\n                      Math.round(( area / params['total_area'] + 0.00001) * 10000) / 100 : 0;\n    return(\n      <div key={'fields-' + key}>\n        <ListItem\n          button\n          style={{color: color1}}\n          onClick={ () => {this.props.handleCollapse({status: key})} }\n        >\n          <ListItemText\n            primary={\n              <Typography variant=\"body2\" style={{color: color1}}>\n                {bannerText + ' (' + this.props.OpsList[key]['fields'].length + ')'}\n              </Typography>\n            }\n            secondary={\n              <Typography variant=\"caption\" style={{color: color2}}>\n                {\"\" + (Math.round((area + 0.00001) * 100) / 100) + ((percent > 0) ? ' acres (' + percent + '%)' : ' acres')}\n              </Typography>\n            }\n          />\n          {this.props.OpsList[key]['fields'].length > 0 ? (\n            !this.props.OpsList[key]['collapse'] ?\n              <ExpandLess /> :\n              <ExpandMore />\n            ) : null }\n        </ListItem>\n        <Collapse in={!(this.props.OpsList[key]['collapse'])} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {this.props.OpsList[key]['fields'].map(fieldRecord => {\n              const boundary = _.cloneDeep(fieldRecord.boundary) || {};\n              boundary.area = boundary.area || 0;\n              return (\n                <ListItem\n                  button style={{color: color1}}\n                  className={classes.nested}\n                  key={'field-' + fieldRecord.id}\n                  onClick={() => {}}\n                >\n                  <ListItemText\n                    disableTypography\n                    primary={\n                      <Typography variant=\"body2\" style={{color: color1}} >\n                        {fieldRecord.name + ' (' + (Math.round((boundary.area + 0.00001) * 100) / 100) + ' acres)'}\n                      </Typography>}\n\n                    secondary={\n                      <div>\n                        <Typography variant=\"caption\" style={{color: color2}}>\n                          Since: {fieldRecord.since}\n                        </Typography>\n                        <Typography variant=\"caption\" style={{color: color2}}>\n                          Marked by: {fieldRecord.by}\n                        </Typography>\n                      </div>}\n                  />\n                </ListItem>\n              )\n            })}\n          </List>\n        </Collapse>\n      </div>\n    )\n  }\n\n  render() {\n    const { classes } = this.props;\n    const params = {\n      unplanned: {\n        color1: '#263238',\n        bannerText: 'Unplanned',\n        color2: '#B0BEC5',\n      },\n      planned: {\n        color1: '#D50000',\n        bannerText: 'Planned',\n        color2: '#EF9A9A',\n      },\n      started: {\n        color1: '#FFC107',\n        bannerText: 'Started',\n        color2: '#FFC107',\n      },\n      completed: {\n        color1: '#1B5E20',\n        bannerText: 'Completed',\n        color2: '#66BB6A',\n      },\n      total_area: Object.keys(this.props.OpsList || {}).map(\n                    key => {\n                      return this.props.OpsList[key]['fields'].reduce((a, b) => {\n                        return a + (b.boundary ? b.boundary.area : 0)}, 0)\n                    }).reduce((a, b) => {\n                          return a + b}, 0)\n    };\n\n    return (\n        <List\n          component=\"nav\"\n          className={classes.root}\n          subheader={\n            <ListSubheader component=\"div\" style={{color: '#304FFE', display: 'flex', alignItems: 'center'}}>\n              <Typography variant=\"caption\">\n                {\n                  Object.keys(this.props.OpsList || {}).map(key => {\n                    return this.props.OpsList[key]['fields'].length}).reduce((a, b) => {\n                      return a + b}, 0) +\n                  ' fields, ' + (Math.round((params['total_area'] + 0.00001) * 100) / 100) + ' acres '\n                }\n              </Typography>\n            </ListSubheader>}\n        >\n            {Object.keys(this.props.OpsList || {}).map(key => {\n              return this.renderItem({\n                key: key,\n                classes: classes,\n                total_area: params['total_area'],\n                ...params[key],\n              })\n            })}\n        </List>\n    );\n  }\n}\n\nOpsList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect({\n    currentOperationName: state`operations.records.${state`User.currentSelection.operation.id`}.label`,\n    OpsList: state`OpsList`,\n\n    handleCollapse: signal`OpsList.handleCollapse`,\n    selectField: signal`User.handleFieldSelected`\n  },\n  withStyles(styles, { withTheme: true })(OpsList)\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport {state, signal} from 'cerebral/tags'\nimport SwipeableViews from 'react-swipeable-views';\nimport Typography from 'material-ui/Typography';\nimport OpsList from '../OpsList';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 0 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 250,\n    paddingLeft: '0px',\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    height: 50,\n    width: 220,//was 300\n  },\n  inputBox: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexGrow: 1,\n    alignItems: 'center',\n    paddingLeft: 10,\n    height: 50,\n    width: 220,\n  },\n  disabled: {\n    pointerEvents: 'none',\n    opacity: 0.4,\n    touchAction: 'none',\n  },\n  inputContainer: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    flexDirection: 'column',\n    paddingLeft: '20px',\n    marginTop: theme.spacing.unit,\n  },\n});\n\nclass DataTabs extends React.Component {\n\n  render() {\n    const { classes, theme } = this.props;\n    const ops_list = (<OpsList />);\n\n    // const fld_list = (<FldList />);\n    // let currentInputLen = this.props.currentInputText  ?  this.props.currentInputText.length : 0;\n    return (\n      <div className={classes.root}>\n        <SwipeableViews\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n          index={this.props.tabValue}\n          onChangeIndex={(index) => {this.props.handleChangeIndex({index: index})}}\n          style={{padding: '0px'}}\n        >\n\n            <TabContainer dir={theme.direction}>\n                {ops_list}\n            </TabContainer>\n\n          {/*<TabContainer dir={theme.direction}>*/}\n            {/*<div style={{backgroundColor: '#212121', 'paddingLeft': '5px', 'paddingRight': '0px', paddingTop: '0px'}}>*/}\n              {/*<div className={classes.container}>*/}\n                {/*<IconButton*/}\n                  {/*aria-label=\"clear field\"*/}\n                  {/*disabled={!(currentInputLen > 0)}*/}\n                  {/*className={classes.button}*/}\n                  {/*onClick={ () => { this.props.clearFieldClicked({inputText: '', inputType: 'field'})} }*/}\n                  {/*style={{'paddingLeft': 12}}*/}\n                {/*>*/}\n                  {/*<Icon style={{'color': 'white', 'fontSize': 30 }}>clear</Icon>*/}\n                {/*</IconButton>*/}\n                {/*<Typography variant=\"title\" className={classes.inputBox} noWrap>*/}\n                  {/*/!*fld_input*!/*/}\n                {/*</Typography>*/}\n              {/*</div>*/}\n              {/*<Divider />*/}\n            {/*</div>*/}\n            {/*{fld_list}*/}\n          {/*</TabContainer>*/}\n\n        </SwipeableViews>\n      </div>\n    );\n  }\n}\n\nDataTabs.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n  {\n    tabValue:           state`DataTabs.value`,\n    currentInputText:   state`fields.records.${state`fields.selectedId`}.name`,\n\n    handleFieldEdited:  signal`DataTabs.handleFieldEdited`,\n    handleChange:       signal`DataTabs.handleChange`,\n    handleChangeIndex:  signal`DataTabs.handleChangeIndex`,\n    clearFieldClicked:  signal`AutocompleteSearch.fieldInputTyped`,\n  },\n  withStyles(styles, { withTheme: true })(DataTabs)\n);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from 'material-ui/styles';\nimport { connect } from '@cerebral/react';\nimport {state, signal} from 'cerebral/tags'\nimport Drawer from 'material-ui/Drawer';\nimport IconButton from 'material-ui/IconButton';\nimport ChevronLeftIcon from 'material-ui-icons/ChevronLeft';\nimport Typography from 'material-ui/Typography';\nimport AutocompleteSearch from '../AutocompleteSearch'\nimport DataTabs from '../DataTabs'\n\nconst drawerWidth = 250;\n\nconst styles = theme => ({\n  hide: {\n    display: 'none',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#212121',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    paddingLeft: '15px',\n    ...theme.mixins.toolbar,\n  },\n  drawerInner: {\n    padding: '0px',\n  },\n  inputContainer: {\n  \tdisplay: 'flex',\n    justifyContent: 'flex-start',\n  \tflexDirection: 'column',\n    marginTop: theme.spacing.unit,\n    width: 200\n  }\n });\n\nclass SideDrawer extends React.Component {\n\n\trender() {\n    const { classes } = this.props;\n    const ops_input = (<AutocompleteSearch id='ops-input' />);\n    const data_tabs = (<DataTabs />);\n\n    return (\n      <Drawer\n        variant=\"persistent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor={'left'}\n        open={this.props.sideDrawerOpen && (!(!this.props.currentOperation)) }\n      >\n        <div className={classes.drawerInner}>\n          <div className={classes.drawerHeader}>\n            <div className={classes.inputContainer}>\n\t            <Typography variant=\"title\" noWrap>\n\t              {ops_input}\n\t            </Typography>\n            </div>\n          <IconButton onClick={() => {this.props.handleSideDrawerOpen({})}}>\n            <ChevronLeftIcon style={{'color': '#FAFAFA', 'fontSize': 35}}/>\n          </IconButton>\n          </div>\n          {data_tabs}\n        </div>\n      </Drawer>\n    );\n  }\n}\n\nSideDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default connect(\n\t{\n    sideDrawerOpen:       state`SideDrawer.open`,\n    currentOperation:     state`User.currentSelection.operation.id`,\n\n    handleSideDrawerOpen: signal`SideDrawer.handleDrawerOpen`,\n    dataTabsToggle:       signal`DataTabs.toggleTab`,\n\t},\n\twithStyles(styles, { withTheme: true })(SideDrawer)\n);\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport uuid from \"uuid\";\nimport \"./map.css\";\n\nimport {\n  Marker,\n  Map,\n  TileLayer,\n  GeoJSON,\n  FeatureGroup,\n  LayersControl\n} from \"react-leaflet\";\nconst { Overlay } = LayersControl;\n//import './map.css';\n//const editDoneButtonHeight = 64;\n\nconst styles = theme => ({\n  \"leaflet-container\": {\n    flex: 1,\n    order: 2,\n    flexGrow: 1,\n    width: \"100%\"\n  },\n  mapContainer: {\n    display: \"flex\",\n    flexGrow: 1,\n    order: 2\n  },\n  map: {\n    display: \"flex\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  fieldPolygon: {\n    strokeWidth: 4,\n    strokeOpacity: 1,\n    width: \"100vw\"\n  },\n  disabled: {\n    pointerEvents: \"none\",\n    opacity: 0.4,\n    touchAction: \"none\"\n  },\n  hide: {\n    display: \"none\"\n  }\n});\n\nclass MapPanel extends React.Component {\n  validateMouseEvent(evt) {\n    //console.log('--> mapPanel click-->', evt);\n    this.props.closeSuggestionsAutocomplete();\n    if (this.props.fieldEditing) {\n      // Don't fire a click event when panning the map or when dragging a point.\n      if (!this.props.moving && !this.props.dragging) {\n        // Don't add a point if a control was clicked.\n        //console.log(\"originalEvent\", evt.originalEvent);\n        if (!evt.originalEvent.target.offsetParent) {\n          this.props.mouseDownOnMap({ pt: [evt.latlng.lng, evt.latlng.lat] });\n        } else if (\n          !evt.originalEvent.target.offsetParent.className.includes(\"marker\")\n        ) {\n          this.props.mouseDownOnMap({ pt: [evt.latlng.lng, evt.latlng.lat] });\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.refs.map.leafletElement.locate();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const color_code = {\n      unplanned: {\n        color1: \"#E0E0E0\",\n        bannerText: \"Unplanned\",\n        color2: \"#616161\"\n      },\n      planned: {\n        color1: \"#D50000\",\n        bannerText: \"Planned\",\n        color2: \"#EF9A9A\"\n      },\n      started: {\n        color1: \"#FFC107\",\n        bannerText: \"Started\",\n        color2: \"#FFC107\"\n      },\n      completed: {\n        color1: \"#76FF03\",\n        bannerText: \"Completed\",\n        color2: \"#33691E\"\n      }\n    };\n\n    let markerList = [];\n    if (this.props.fieldEditing) {\n      if (\n        this.props.currentField &&\n        this.props.currentField.boundary &&\n        this.props.currentField.boundary.geojson.coordinates[0].length > 0\n      ) {\n        markerList = [];\n        this.props.currentField.boundary.geojson.coordinates[0].forEach(\n          (pt, i) => {\n            markerList.push(\n              <Marker\n                className={\"selected-field-marker\"}\n                key={this.props.selectedId + \"-\" + i}\n                position={[pt[1], pt[0]]}\n                color={\n                  this.props.currentOperationId &&\n                  this.props.allOperations[this.props.currentOperationId] &&\n                  this.props.allOperations[this.props.currentOperationId]\n                    .fields[this.props.selectedId]\n                    ? this.props.allOperations[this.props.currentOperationId]\n                        .fields[this.props.selectedId].status\n                    : \"unplanned\"\n                }\n                draggable={true}\n                onDrag={e => {\n                  this.props.markerDragged({\n                    lat: e.target._latlng.lat,\n                    lng: e.target._latlng.lng,\n                    idx: i\n                  });\n                }}\n                onDragStart={e => {\n                  this.props.markerDragStarted({ idx: i });\n                }}\n                onDragEnd={e => {\n                  this.props.markerDragEnded({\n                    lat: e.target._latlng.lat,\n                    lng: e.target._latlng.lng,\n                    idx: i\n                  });\n                }}\n                onDblClick={e => {\n                  this.props.deleteCoordinate({ index: i });\n                }}\n              />\n            );\n          }\n        );\n      }\n    }\n\n    let new_field_polygon = this.props.currentField.boundary ? (\n      <GeoJSON\n        className={classes.fieldPolygon}\n        data={this.props.currentField.boundary.geojson}\n        onClick={() => {\n          if (!(this.props.selectedId && \n                this.props.currentField.id === this.props.selectedId && \n                this.props.fieldEditing)\n          ) {\n            this.props.handleFieldPolygonClicked({\n              id: this.props.currentField.id,\n              field: this.props.currentField\n            });\n          }\n          this.forceUpdate();\n        }}\n        key={\"field-\" + this.props.currentField.id + \"-polygon\" + uuid()}\n        color={color_code[this.props.currentOperation.fields[this.props.currentField.id] ?\n          this.props.currentOperation.fields[this.props.currentField.id].status : \"unplanned\"].color1}\n        style={{ fillOpacity: 0.4 }}\n      />\n    ) : null;\n\n    return (\n      <div className={classes.mapContainer}>\n        <Map\n          onLocationfound={e =>\n            this.props.locationFound({ lat: e.latlng.lat, lng: e.latlng.lng })\n          }\n          onClick={e => {\n            this.validateMouseEvent(e);\n          }}\n          onMoveStart={e => {\n            this.props.mapMoveStarted();\n          }}\n          onMoveend={e => {\n            this.props.mapMoved({\n              latlng: this.refs.map.leafletElement.getCenter(),\n              zoom: this.refs.map.leafletElement.getZoom()\n            });\n          }}\n          dragging={true}\n          ref=\"map\"\n          center={this.props.center}\n          attributionControl={!this.props.isMobile}\n          zoomControl={true}\n          zoom={this.props.mapZoom || 15}\n        >\n          <TileLayer\n            key={\"tile-layer\"}\n            url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            attribution=\"Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\"\n          />\n\n          {markerList}\n          {new_field_polygon}\n          <LayersControl position=\"topright\">\n            {\n              <Overlay checked name=\"Fields\">\n                <FeatureGroup>\n                  {Object.keys(this.props.fields || {})\n                    .filter(id => {\n                      return (\n                        this.props.currentOperationId &&\n                        this.props.fields[id].boundary &&\n                        (id !== this.props.selectedId ||\n                          !this.props.fieldsEditing)\n                        //this.props.fields[id].boundary.visible\n                      );\n                    })\n                    .map(id => ( id === this.props.currentField.id ? null :\n                      <GeoJSON\n                        className={classes.fieldPolygon}\n                        data={this.props.fields[id].boundary.geojson}\n                        onClick={() => {\n                          if (!(this.props.selectedId &&\n                                id === this.props.selectedId &&\n                                this.props.fieldEditing)\n                          ) {\n                              // if editing, do not handleFieldPolygonClicked\n                              if(!this.props.fieldEditing)\n                                this.props.handleFieldPolygonClicked({id, field: this.props.fields[id]});\n                          }\n                          this.forceUpdate();\n                        }}\n                        key={\"field-\" + id + \"-polygon\" + uuid()}\n                        color={\n                          color_code[\n                            this.props.currentOperation &&\n                            this.props.currentOperation.fields &&\n                            this.props.currentOperation.fields[id] &&\n                            this.props.currentOperation.fields[id].status\n                              ? this.props.currentOperation.fields[id].status\n                              : \"unplanned\"\n                          ].color1\n                        }\n                        style={{ fillOpacity: 0.4 }}\n                      />\n                    ))}\n                </FeatureGroup>\n              </Overlay>\n            }\n          </LayersControl>\n        </Map>\n      </div>\n    );\n  } //render\n}\n\nMapPanel.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    mapZoom:                    state`MapPanel.zoom`,\n    moving:                     state`MapPanel.moving`,\n    isLoading:                  state`MapPanel.isLoading`,\n    isMobile:                   state`App.is_mobile`,\n    geohashPolygons:            state`MapPanel.geohashPolygons`,\n    center:                     state`MapPanel.center`,\n    sideDrawerOpen:             state`SideDrawer.open`,\n    currentField:               state`fields.new_field`,\n    fields:                     state`fields.records`,\n    fieldEditing:               state`fields.editing`,\n    selectedId:                 state`fields.selectedId`,\n    currentOperationId:         state`User.currentSelection.operation.id`,\n    currentStatus:              state`User.currentSelection.status.status`,\n    allOperations:              state`operations.records`,\n    operations:                 state`operations.records`,\n    currentOperation:           state`operations.records.${state`User.currentSelection.operation.id`}`,\n\n    mapMoveStarted:             signal`MapPanel.mapMoveStarted`,\n    mouseDownOnMap:             signal`MapPanel.mouseDownOnMap`,\n    markerDragStarted:          signal`MapPanel.markerDragStarted`,\n    markerDragEnded:            signal`MapPanel.markerDragEnded`,\n    markerDragged:              signal`MapPanel.markerDragged`,\n    locationFound:              signal`MapPanel.locationFound`,\n    mapMoved:                   signal`MapPanel.mapMoved`,\n    deleteCoordinate:           signal`MapPanel.deleteCoordinate`,\n    handleFieldPolygonClicked:  signal`fields.handleFieldPolygonClicked`,\n    saveEdited:                 signal`fields.saveEditedField`,\n\n  },\n  withStyles(styles, { withTheme: true })(MapPanel)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { withStyles } from \"material-ui/styles\";\nimport Drawer from \"material-ui/Drawer\";\nimport TextField from \"material-ui/TextField\";\nimport Radio, { RadioGroup } from \"material-ui/Radio\";\nimport Icon from \"material-ui/Icon\";\nimport { FormControl, FormControlLabel } from \"material-ui/Form\";\nimport Typography from \"material-ui/Typography\";\nimport Button from \"material-ui/Button\";\nimport \"react-select/dist/react-select.css\";\nimport EditFieldIcon from \"material-ui-icons/Edit\";\nimport IconButton from \"material-ui/IconButton\";\nimport ArrowDropDown from \"material-ui-icons/ArrowDropDown\";\nimport OperatorsList from \"@oada/operators-module/List\";\n\nconst bottomDrawerHeight = 200;\n\nconst styles = theme => ({\n  formControl: {\n    margin: theme.spacing.unit * 2,\n    flexWrap: \"noWrap\",\n    justifyContent: \"flex-start\"\n  },\n  group: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"row\",\n    flexWrap: \"noWrap\",\n    justifyContent: \"center\"\n  },\n  statusButton: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    fontColor: \"white\",\n    margin: 0, //theme.spacing.unit * 2,\n    padding: theme.spacing.unit\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexWrap: \"noWrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: theme.spacing.unit,\n    backgroundColor: \"#212121\",\n    minWidth: 0,\n    order: 3\n  },\n  middle: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  editFieldButton: {\n    color: \"white\"\n  },\n  textField: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    //marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit,\n    minWidth: \"200px\",\n    width: \"20%\",\n    color: \"#FAFAFA\",\n    rightPadding: 10\n  },\n  drawerPaper: {\n    display: \"flex\",\n    height: bottomDrawerHeight\n  },\n  drawerHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 2,\n    alignItems: \"center\",\n    backgroundColor: \"#3f51b5\",\n    color: \"white\",\n    justifyContent: \"space-between\",\n    padding: \"0 8px\",\n    height: \"10%\",\n\n    ...theme.mixins.toolbar\n  },\n  confirmIconGroup: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    flexGrow: 2,\n    flexWrap: \"noWrap\"\n  },\n  form: {\n    color: \"#FAFAFA\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"90%\",\n    flexWrap: \"wrap\"\n  },\n  menuButton: {\n    marginLeft: 2,\n    marginRight: 2\n  }\n});\n\nclass BottomDrawer extends React.Component {\n\n  renderDatePicker() {\n    const { classes } = this.props;\n\n    return (\n      <TextField\n        id=\"date\"\n        label=\"Date\"\n        type=\"date\"\n        className={classes.textField}\n        value={this.props.currentTimestamp}\n        //className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n          style: { color: \"white\" }\n        }}\n        InputProps={{\n          style: { color: \"white\" }\n        }}\n        onChange={event => {\n          this.props.setCurrentSelectionStatusTimestamp({\n            timestamp: event.target.value\n          });\n        }}\n      />\n    );\n  } //renderDatePicker\n\n  renderEditField() {\n    const { classes } = this.props;\n\n    return (\n      <IconButton\n        key={4}\n        color=\"inherit\"\n        aria-label=\"open drawer\"\n        onClick={() => this.props.editFieldClicked({})}\n        className={classes.editFieldButton}\n      >\n        <EditFieldIcon />\n      </IconButton>\n    );\n  } //renderEditField\n\n  renderAddOperationForm() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate>\n        <div className={classes.form}>\n          <TextField\n            id=\"operation name\"\n            label=\"New Operation Name:\"\n            className={classes.textField}\n            value={this.props.newOperationName}\n            onChange={event => {\n              this.props.newOperationNameTyped({\n                inputText: event.target.value,\n                inputType: \"operation\"\n              });\n            }}\n            margin=\"normal\"\n            InputProps={{\n              style: { color: \"#FAFAFA\" },\n              classes: {\n                input: classes.input\n              }\n            }}\n            InputLabelProps={{ style: { color: \"white\" }, shrink: true }}\n          />\n        </div>\n        <div>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"primary\"\n            style={{ color: \"#FAFAFA\" }}\n            disabled={this.props.disabledNewOperation}\n            onClick={() => {\n              this.props.addNewOperation();\n            }}\n          >\n            Add\n          </Button>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"secondary\"\n            style={{ color: \"#FAFAFA\" }}\n            onClick={() => {\n              this.props.cancelNewOperation();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </form>\n    );\n  } //addOperationForm\n\n  renderAddFieldForm() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate>\n        <div className={classes.form}>\n          <TextField\n            id=\"field name\"\n            label=\"New Field Name:\"\n            className={classes.textField}\n            value={this.props.newFieldName}\n            onChange={event => {\n              this.props.newFieldNameTyped({\n                inputText: event.target.value,\n                inputType: \"field\"\n              });\n            }}\n            margin=\"normal\"\n            InputProps={{\n              style: { color: \"#FAFAFA\" },\n              classes: {\n                input: classes.input\n              }\n            }}\n            InputLabelProps={{ style: { color: \"white\" }, shrink: true }}\n          />\n        </div>\n        <div>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"primary\"\n            style={{ color: \"#FAFAFA\" }}\n            disabled={this.props.disabledNewOperation}\n            onClick={() => {\n              this.props.addNewField();\n            }}\n          >\n            Add\n          </Button>\n          <Button\n            variant=\"raised\"\n            className={classes.button}\n            color=\"secondary\"\n            style={{ color: \"#FAFAFA\" }}\n            onClick={() => {\n              this.props.cancelNewOperation();\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </form>\n    );\n  } //addOperationForm\n\n  renderRadioButtonGroup() {\n    const { classes } = this.props;\n    const datePicker = this.renderDatePicker({});\n    const editField = this.renderEditField({});\n\n    return (\n      <form className={classes.container} noValidate>\n\n        {/*<TextField*/}\n          {/*select*/}\n          {/*fullWidth*/}\n          {/*className={classes.textField}*/}\n          {/*label={\"Operator\"}*/}\n          {/*InputLabelProps={{*/}\n            {/*shrink: true,*/}\n            {/*style: { color: \"white\" }*/}\n          {/*}}*/}\n          {/*value={this.props.currentMarker}*/}\n          {/*onChange={event => {*/}\n            {/*this.props.setCurrentSelectionStatusMarker({*/}\n              {/*marker: event.target.value*/}\n            {/*});*/}\n          {/*}}*/}\n          {/*InputProps={{*/}\n            {/*style: { color: \"white\" }*/}\n          {/*}}*/}\n        {/*>*/}\n          {/*{Object.values(this.props.allOperators).map(operator => (*/}\n            {/*<MenuItem key={operator.label} value={operator.label} selected>*/}\n              {/*{operator.label}*/}\n            {/*</MenuItem>*/}\n          {/*))}*/}\n        {/*</TextField>*/}\n\n        <OperatorsList/>\n\n        <div className={classes.middle}>\n          <FormControl\n            component=\"fieldset\"\n            required\n            className={classes.formControl}\n          >\n            <RadioGroup\n              aria-label=\"status\"\n              name=\"status\"\n              className={classes.group}\n              value={this.props.currentStatus}\n              onChange={event => {\n                this.props.setCurrentSelectionStatusStatus({\n                  editFieldStatus: true,\n                  value          : event.target.value,\n                  statusValue    : event.target.value\n                });\n              }}\n            >\n              <FormControlLabel\n                value=\"unplanned\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"#FAFAFA\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"#FAFAFA\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Unplanned</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"planned\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"red\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"red\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Planned</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"started\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"#FFC107\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"#FFC107\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Started</Typography>\n                }\n              />\n              <FormControlLabel\n                value=\"completed\"\n                className={classes.statusButton}\n                control={\n                  <Radio\n                    checkedIcon={\n                      <Icon style={{ color: \"#76FF03\", fontSize: 50 }}>\n                        check_circle\n                      </Icon>\n                    }\n                    icon={\n                      <Icon style={{ color: \"#76FF03\", fontSize: 50 }}>\n                        radio_button_checked\n                      </Icon>\n                    }\n                  />\n                }\n                label={\n                  <Typography style={{ color: \"white\" }}>Completed</Typography>\n                }\n              />\n            </RadioGroup>\n          </FormControl>\n          {editField}\n        </div>\n        {datePicker}\n      </form>\n    );\n  } //renderRadioButtonGroup\n\n  renderHeaderItem() {\n    const { classes } = this.props;\n\n    if (this.props.bottomMenu === \"operations\") {\n      let headerText = \"Add New Operation\";\n      return (\n        <div\n          className={classes.drawerHeader}\n          tabIndex={0}\n          role=\"banner\"\n          onClick={() => {\n            this.props.cancelNewOperation({});\n          }}\n          onKeyDown={() => {\n            this.props.cancelNewOperation({});\n          }}\n        >\n          <div>{headerText}</div>\n          <div className={classes.menuButton}>\n            <IconButton\n              aria-label=\"clear drawer\"\n              className={classes.menuButton}\n              onClick={ () => {this.props.handleOperatorMenuClose({});}}\n            >\n              <ArrowDropDown />\n            </IconButton>\n          </div>\n        </div>\n      );\n    } else {\n      if (this.props.bottomMenu === \"status-update\") {\n        let headerText =\n          \"Updating status for operation [\" +\n          this.props.currentOperationLabel + \"] on field \" + this.props.currentFieldLabel;\n        return (\n          <div\n            className={classes.drawerHeader}\n            tabIndex={0}\n            role=\"banner\"\n            onClick={() => {\n               this.props.cancelStatusChange({});\n               this.props.resetCurrentSelectionStatus({});\n            }}\n            onKeyDown={() => {}}\n          >\n            <div>{headerText}</div>\n            <div>\n              <IconButton\n                aria-label=\"clear drawer\"\n                className={classes.menuButton}\n                onClick={ () => {\n                  this.props.handleOperatorMenuClose({});\n                  this.props.resetCurrentSelectionStatus({});\n                }}\n              >\n                <ArrowDropDown />\n              </IconButton>\n            </div>\n          </div>\n        );\n      }\n    }\n  } //renderHeaderItem\n\n  render() {\n    //const { classes } = this.props;\n    //const datePicker = this.renderDatePicker({});\n    const header_item = this.renderHeaderItem({});\n    const add_operation_form = this.renderAddOperationForm({});\n    //const add_field_form = this.renderAddFieldForm({});\n    const status_radio_buttons = this.renderRadioButtonGroup({});\n\n    return (\n      <Drawer\n        anchor=\"bottom\"\n        open={this.props.bottomDrawerOpen}\n        onClose = {() => {this.props.resetCurrentSelectionStatus({});}}\n      >\n        {header_item}\n        {this.props.bottomMenu === \"status-update\"\n          ? status_radio_buttons\n          : this.props.bottomMenu === \"operations\"\n          ? add_operation_form\n          : null}\n      </Drawer>\n    );\n  }\n}\n\nBottomDrawer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default connect(\n  {\n    bottomDrawerOpen:                   state`BottomDrawer.open`,\n    bottomMenu:                         state`BottomDrawer.menu`,\n    operatorMenuOpen:                   state`BottomDrawer.operatorMenuOpen`,\n    currentStatus:                      state`User.currentSelection.status.status`,\n    currentTimestamp:                   state`User.currentSelection.status.timestamp`,\n    allOperators:                       state`User.accessibleUsers`,\n    currentFieldLabel:                  state`fields.records.${state`fields.selectedId`}.name`,\n    currentOperationLabel:              state`operations.records.${state`User.currentSelection.operation.id`}.label`,\n    newOperationName:                   state`User.currentSelection.operation.inputText`,\n    disabledNewOperation:               state`User.currentSelection.operation.disabled`,\n\n    setCurrentSelectionStatusStatus:    signal`User.setCurrentSelectionStatusStatus`,\n    setCurrentSelectionStatusTimestamp: signal`User.setCurrentSelectionStatusTimestamp`,\n    resetCurrentSelectionStatus:        signal`User.resetCurrentSelectionStatus`,\n    addNewOperation:                    signal`User.addNewOperation`,\n    setDisabledNewOperation:            signal`User.setDisabledNewOperation`,\n    cancelNewOperation:                 signal`User.cancelNewOperation`,\n    cancelStatusChange:                 signal`User.cancelStatusChange`,\n    handleOperatorMenuOpen:             signal`BottomDrawer.handleOperatorMenuOpen`,\n    handleOperatorMenuClose:            signal`BottomDrawer.handleOperatorMenuClose`,\n    handleBottomDrawerOpen:             signal`BottomDrawer.handleDrawerOpen`,\n    handleBottomDrawerClose:            signal`BottomDrawer.handleDrawerOpen`,\n    newOperationNameTyped:              signal`AutocompleteSearch.operationInputTyped`,\n    editFieldClicked:                   signal`AutocompleteSearch.handleFieldEdited`\n  },\n  withStyles(styles, { withTheme: true })(BottomDrawer)\n);\n","import React from \"react\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport { TextField, Button } from \"material-ui\";\n\nconst styles = theme => ({\n  title: {\n    //backgroundColor: \"#3F52B5\"\n  },\n  drawerHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexGrow: 2,\n    alignItems: \"center\",\n    backgroundColor: \"#3f51b5\",\n    color: \"white\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    padding: \"10px\"\n  },\n  hide: {\n    display: \"none\"\n  },\n  editFieldButtons: {\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  editFieldText: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    height: \"128px\"\n  },\n  editFieldDrawerBottom: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    width: \"100%\"\n  },\n  editFieldDrawer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    order: 3,\n    alignItems: \"center\"\n  },\n  textField: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    //marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 0.25,\n    minWidth: \"200px\",\n    width: \"20%\",\n    color: \"#FAFAFA\",\n    rightPadding: 10\n  }\n});\n\nclass EditFieldDrawer extends React.Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.editFieldDrawer}>\n        <div className={classes.drawerHeader}>\n          <label htmlFor=\"Instructions\">\n            {\"(1) Enter names (2) Draw field on the map (3) Save\"}\n          </label>\n        </div>\n        <div className={classes.editFieldDrawerBottom}>\n          <div className={classes.editFieldText}>\n            <TextField\n              label=\"Field name\"\n              placeholder={`e.g., \"Baker 135\"...`}\n              value={this.props.fieldText}\n              onChange={evt =>\n                this.props.fieldTextChanged({ value: evt.target.value })\n              }\n            />\n            <TextField\n              label=\"Farm Name\"\n              placeholder={`e.g., \"Baker\"`}\n              type=\"farm\"\n              value={this.props.farmText}\n              onChange={evt =>\n                this.props.farmTextChanged({ value: evt.target.value })\n              }\n            />\n          </div>\n          <div className={classes.editFieldButtons}>\n            <Button\n              className={classes.editFieldButton}\n              variant=\"raised\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.saveEdited({ confirm: true });\n              }}\n              disabled={this.props.disabledNewField}\n            >\n              Save\n            </Button>\n            <Button\n              className={classes.editFieldButton}\n              variant=\"raised\"\n              color=\"secondary\"\n              onClick={() => {\n                this.props.cancelNewField();\n              }}\n            >\n              Discard\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    fieldText: state`fields.new_field.name`,\n    farmText: state`fields.new_field.farm.name`,\n    fields: state`fields.records`,\n    fieldSuggestionsOpen: state`fields.new_field.field.suggestionsOpen`,\n    farmSuggestionsOpen: state`fields.new_field.farm.suggestionsOpen`,\n    fieldId: state`fields.new_field.id`,\n    farmId: state`fields.new_field.farm.id`,\n\n    addFieldClicked: signal`User.addFieldClicked`,\n    addFarmClicked: signal`User.addFarmClicked`,\n    disabledNewField: state`User.currentSelection.field.newFieldDisabled`,\n    editFieldClicked: signal`AutocompleteSearch.handleFieldEdited`,\n    fieldCleared: signal`User.handleFieldCleared`,\n    farmCleared: signal`User.handleFarmCleared`,\n    fieldTextChanged: signal`fields.fieldTextChanged`,\n    farmTextChanged: signal`fields.farmTextChanged`,\n    saveEdited: signal`fields.saveEditedField`,\n    cancelNewField: signal`fields.cancelNewField`\n  },\n  withStyles(styles, { withTheme: true })(EditFieldDrawer)\n);\n","import React from \"react\";\nimport { withStyles } from \"material-ui/styles\";\nimport { connect } from \"@cerebral/react\";\nimport { state, signal } from \"cerebral/tags\";\nimport MenuBar from \"../MenuBar\";\nimport Connections from \"../Connections\";\nimport SideDrawer from \"../SideDrawer\";\nimport MapPanel from \"../MapPanel\";\nimport BottomDrawer from \"../BottomDrawer\";\nimport EditFieldDrawer from \"../EditFieldDrawer\";\n// import StatsBar from \"../StatsBar\";\nimport Operators from \"@oada/operators-module/Drawer\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100vw\",\n    height: \"100vh\",\n    marginTop: theme.spacing.unit * 0,\n    zIndex: 1\n  },\n  app: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    height: \"100vh\",\n    zIndex: 1,\n    top: 0\n  },\n  statsBar: {\n    display: 'flex',\n    order: 3\n  }\n});\n\nclass App extends React.Component {\n  updateDimensions() {\n    this.props.windowResized({ width: window.innerWidth, height: window.innerHeight});\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    this.updateDimensions();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  updateDimensions() {\n    console.log(\"-->App window -->\", window.innerWidth, window.innerHeight);\n    this.props.windowResized({ width: window.innerWidth, height: window.innerHeight});\n  }\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    this.updateDimensions();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  componentWillMount() {\n    this.props.init({});\n    this.props.loadFieldListData({ switchTab: 0 });\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.app}>\n        <MenuBar />\n        <Connections />\n        <SideDrawer />\n        <MapPanel />\n        <BottomDrawer />\n        {(!this.props.operatorEditing && this.props.fieldEditing) ? <EditFieldDrawer /> : null}\n        {(!this.props.fieldEditing && this.props.operatorEditing) ? <Operators /> : null}\n        {/*<StatsBar className={classes.statsBar}/>*/}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  {\n    fieldEditing:      state`fields.editing`,\n    operatorEditing:   state`operators.editing`,\n    window:            state`window`,\n    menuListOpen:      state`MenuList.open`,\n\n    windowResized:     signal`window.resized`,\n    init:              signal`App.init`,\n    loadFieldListData: signal`FldList.loadData`,\n    window:  state`window`,\n    windowResized: signal`window.resized`\n  },\n  withStyles(styles, { withTheme: true })(App)\n);\n","let overrides = require('./config.dev.js').default;\n\n//----------- Define default configs here ----------\n\nexport const title = 'FieldWorkApp';\nexport const scope = 'oada.awesome:all';\nconst defaults = {\n\tscope,\n  title,\n};\n\n//--------------------------------------------------\nif (process.env.REACT_APP_PROD_DEV) {\n  overrides = require('./config.prod-dev.js').default;\n} else if (process.env.NODE_ENV === 'production') {\n  overrides = require('./config.prod.js').default;\n}\n\nlet toExport =  {...defaults, ...overrides};\n\nexport const oadaDomain = toExport.oadaDomain;\nexport const websiteDomain = toExport.websiteDomain;\nexport const redirect = toExport.websiteDomain + '/oauth2/redirect.html';\nexport const metadata = toExport.metadata;\nexport const devtoolsPort = toExport.devtoolsPort;\nexport const defaultNewConnectionURL = toExport.defaultNewConnectionURL;\nexport const appName = toExport.appName;\nexport const contentType = toExport.contentType;\nexport const bookmarksOperations = toExport.bookmarksOperations;\nexport const bookmarksFields = toExport.bookmarksFields;\n\nexport default toExport;\n","import {appName, contentType, bookmarksOperations, bookmarksFields} from '../../config';\n\nlet stateTree = {\n    appName: appName,\n    contentType: contentType,\n    bookmarksOperations: bookmarksOperations,\n    bookmarksFields: bookmarksFields,\n\tmodel: {\n    \ttags: {},\n    },\n  \tis_mobile: false,\n  \tsettings: {},\n  \tview: {\n    \tediting: false,\n    \tsettings: {},\n    },\n};\n\nexport default stateTree;\n","import {state, props} from 'cerebral/tags'\nimport {set} from 'cerebral/operators'\n\nexport var handleChange = [\n  set(state`DataTabs.value`, props`value`),\n];\n\nexport var handleChangeIndex = [\n  handleTabChangeIndex,\n];\n\nexport var toggleTab = [\n  toggleTabX,\n];\n\nexport function handleTabChange({ props, state }) {\n\tstate.set(`DataTabs.value`, props.value || 1);\n}\n\nfunction handleTabChangeIndex({props, state}) {\n\tstate.set(`DataTabs.value`, props.index);\n}\n\nfunction toggleTabX({props, state}) {\n\tstate.set(`DataTabs.value`, 1 * (!(1 * state.get(`DataTabs.value`))));\n}\n\n","import { handleChange as dataTabsHandleChange } from '../DataTabs/chains';\n\nexport var loadData = [\n\tloadDataAction,\n\tdataTabsHandleChange,\n];\n\nexport var clearData = [\n\tclearDataAction,\n];\n\nfunction handleCollapseAction({ props, state }) {\n    state.toggle(`${'OpsList.' + props.status + '.collapse'}`);\n}\n\nexport var handleCollapse = [\n\thandleCollapseAction,\n];\n\nfunction loadDataAction({ props, state }) {\n\tconst opid = state.get('User.currentSelection.operation.id');\n\tlet fields = [];\n\tif (!(!opid)) {\n\t\tfields = Object.values(state.get(`${'operations.records.' + opid + '.fields'}`));\n\t}\n\tObject.keys(state.get('OpsList') || {}).map(status => {\n\t\tstate.set(\n\t\t\t`${'OpsList.' + status + '.fields'}`,\n\t\t\tfields.filter(field => (field.status === status)).map(fieldStub => {\n\t\t\t\treturn {'since': fieldStub['history'] ? fieldStub['history'][0]['timestamp'] : \"\",\n\t\t\t\t\t\t'by': fieldStub['history'] ? fieldStub['history'][0]['marker'] : \"\",\n                        'id': fieldStub['id'] ? fieldStub['id'] : \"\",\n\t\t\t\t\t\t...state.get(`fields.records.${fieldStub['id']}`)};\n\t\t\t})\n\t\t);\n\t});\n\treturn {value: 0};\n}\n\nfunction clearDataAction({props, state}) {\n\tObject.keys(state.get('OpsList')).map(status => {\n\t\tstate.set(`${'OpsList.' + status + '.fields'}`, []);\n\t});\n}\n","function handleUpdateAction({ props, state }) {\n    //let operationStatus = props.operationStatus || \"completed\";\n    let _opsList = state.get('OpsList');\n    let totalArea = Object.keys(_opsList || {}).map(\n          key => {\n            return _opsList[key]['fields'].reduce((a, b) => {\n                return a + (b.boundary ? b.boundary.area : 0)}, 0)\n        }).reduce((a, b) => {return a + b}, 0);\n    for(let operationStatus in _opsList){\n        const area = _opsList[operationStatus]['fields'].reduce((a, b) => {return a + (b.boundary ? b.boundary.area : 0)}, 0);\n        const percent = (totalArea ? Math.round(( area/totalArea + 0.00001) * 10000) / 100 : 0);\n        const totalFields = _opsList[operationStatus]['fields'] ? _opsList[operationStatus]['fields'].length : 0;\n        state.set(`OpsList.${operationStatus}.area`, area.toFixed(2));\n        state.set(`OpsList.${operationStatus}.percentage`, percent.toFixed(2));\n        state.set(`OpsList.${operationStatus}.totalFields`, totalFields);\n    }//for\n\n}\n\nexport var statsBarHandleUpdate = [\n    handleUpdateAction,\n];\n","import { sequence } from \"cerebral\";\nimport { set, when, equals } from \"cerebral/operators\";\nimport { state, props } from \"cerebral/tags\";\nimport Promise from \"bluebird\";\nimport oada from \"@oada/cerebral-module/sequences\";\nimport { loadData as loadOpsLstData } from \"../OpsList/chains\";\nimport { statsBarHandleUpdate } from \"../StatsBar/chains\";\n\n//import {putFarm} from \"../fields/sequences\";\n/* Configuration values */\nlet _localPath = \"/bookmarks/operations\";\nlet _TYPE = \"application/vnd.oada.yield.1+json\";\n/* Tree that resembles the data model for operations module */\nlet tree = {\n  bookmarks: {\n    _type: \"application/vnd.oada.bookmarks.1+json\",\n    _rev: \"0-0\",\n    operations: {\n      _type: \"application/vnd.oada.yield.1+json\",\n      _rev: \"0-0\",\n      \"*\": {\n        _type: \"application/vnd.oada.yield.1+json\",\n        _rev: \"0-0\"\n      }\n    }\n  }\n};\n\n/**\n * fetches the operation\n * @type {Primitive}\n */\nexport const fetch = sequence(\"operations.fetch\", [\n  ({ state, props }) => ({\n    connection_id: state.get(\"operations.connection_id\"),\n    path: _localPath,\n    tree,\n    watch: { signals: [\"operations.handleWatchUpdate\"] }\n  }),\n  buildFetchRequest,\n  oada.get,\n  when(state`oada.${props`connection_id`}.bookmarks.operations`),\n  {\n    true: sequence(\"fetchOperationsSuccess\", [\n      mapOadaToOperations,\n      mapOperations,\n      loadOpsLstData,\n      statsBarHandleUpdate,\n      set(state`App.emptyDataSet`, false),\n    ]),\n    false: sequence(\"fetchOperationsEmptySet\", [\n      () => (\n        console.log(\"--> Operations empty set\")\n      ),\n      set(state`App.emptyDataSet`, true),\n    ]),\n\n  }\n]);\n\n/**\n * builds requests in the expected format in the cerebral-module\n * @param state\n * @returns {{requests: *[]}}\n */\nfunction buildFetchRequest({ state }) {\n  let requests = [\n    {\n      connection_id: state.get(\"operations.connection_id\"),\n      path: _localPath,\n      tree,\n      watch: { signals: [\"operations.handleWatchUpdate\"] }\n    }\n  ];\n  return { requests };\n}\n\nexport const fetchNoWatch = sequence(\"operations.fetchNoWatch\", [\n  ({ state, props }) => ({\n    connection_id: state.get(\"operations.connection_id\"),\n    path: _localPath,\n    tree\n  }),\n  //oada.get,\n  when(state`oada.${props`connection_id`}.bookmarks.operations`),\n  {\n    true: sequence(\"fetchOperationsSuccess\", [\n      mapOadaToOperations,\n      mapOperations,\n      loadOpsLstData,\n      statsBarHandleUpdate,\n      set(state`App.emptyDataSet`, false),\n    ]),\n    false: sequence(\"fetchOperationsEmptySetNoWatch\", [\n      () => (\n        console.log(\"--> Operations empty set no watch\")\n      ),\n      set(state`App.emptyDataSet`, true),\n    ])\n  }\n]);\n\n/**\n * requests the operation creation to the OADA module\n * @type {*[]}\n */\nexport const addBookmarksOperations = sequence(\n  \"operations.addBookmarksOperations\",\n  [buildBookmarksOperationsRequest, oada.put, fetch]\n);\n\n/**\n * Initialize the operations module\n * @type {Primitive}\n */\nexport const init = sequence(\"operations.init\", [\n  getConnectionsFromStorage,\n  when(state`Connections.connection_id`),\n  {\n    true: [oada.connect],\n    false: [\n      oada.connect,\n      set(state`operations.connection_id`, props`connection_id`),\n      set(state`Connections.connection_id`, props`connection_id`),\n      set(state`connections.operations.connection_id`, props`connection_id`)\n    ]\n  },\n  //\n  set(state`operations.loading`, true),\n  fetch,\n  when(state`oada.${props`connection_id`}.bookmarks.operations`),\n  {\n    true: [],\n    false: [\n      //addBookmarksOperations,\n      //set(state`InfoBar.operations.open`, true)\n    ]\n  },\n  set(state`operations.loading`, false),\n  set(props`type`, \"operations\")\n]);\n\n/**\n * gets the Connections from localCache, it updates all necessary state to auto-init the app\n * @param state\n */\nfunction getConnectionsFromStorage({ state }) {\n  let connections = JSON.parse(\n    localStorage.getItem(\"_FieldWorkApp.Connections\")\n  );\n  console.log(\"--> operations.init storage connections --> \", connections);\n  if (connections && connections[\"connection_id\"]) {\n    state.set(\"Connections.show\", false);\n    let connectionId = connections[\"connection_id\"];\n    let oadaDomain = connections[\"oada_domain\"];\n    console.log(\n      \"--> operations init connectionId and OadaDomain\",\n      connectionId,\n      oadaDomain\n    );\n    state.set(`operations.connection_id`, connectionId);\n    state.set(\"Connections.oada_domain\", oadaDomain);\n    state.set(\"Connections.oada_domain_text\", oadaDomain);\n  }\n}\n\n/**\n * refresh the operations module\n * when handling updates/watches\n * @type {Primitive}\n */\nexport const refresh = sequence(\"operations.refresh\", [\n  set(state`operations.connection_id`, props`connection_id`),\n  set(state`operations.loading`, true),\n  fetchNoWatch,\n  set(state`operations.loading`, false),\n  set(props`type`, \"operations\")\n]);\n\n/**\n * Handles updates in the resource\n * @type {*[]}\n */\nexport const handleWatchUpdate = sequence(\"operations.handleWatchUpdate\", [\n  () => {console.log(\"-->operations.handleWatchUpdate\");},\n  refresh,\n  statsBarHandleUpdate\n]);\n\nexport const selectOperation = [];\n\n/**\n * Maps operations records\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToOperations({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n  let operations = state.get(\"oada.\" + connection_id + \".bookmarks.operations\");\n\n  if (operations) {\n    return Promise.map(Object.keys(operations || {}), operation => {\n      if (operation[0] !== \"_\" && operation !== \"operations\") {\n        let op = state.get(\n          `oada.${connection_id}.bookmarks.operations.${operation}`\n        );\n        if (op && op.id) {\n          let currentOperationID = state.get(\n            \"User.currentSelection.operation.id\"\n          );\n          state.set(\"User.operations.\" + operation, { id: op.id });\n          if (!currentOperationID) {\n            // setting default operation (if there is not one)\n            state.set(\"User.currentSelection.operation.id\", op.id);\n            state.set(\"User.currentSelection.operation.inputText\", op.label);\n            state.set(\n              \"User.currentSelection.operation.placeholder\",\n              \"Operation\"\n            );\n          }\n          state.set(`operations.records.${operation}`, operations[operation]);\n        }\n        return;\n      }\n    }).then(() => {\n      return;\n    });\n  }\n} //mapOadaToOperations\n\n/**\n *\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOperations({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n  let operations = state.get(\"oada.\" + connection_id + \".bookmarks.operations\");\n\n  if (operations) {\n    return Promise.map(Object.keys(operations || {}), operation => {\n      if (operation[0] !== \"_\" && operation !== \"operations\") {\n        let op = state.get(\n          `oada.${connection_id}.bookmarks.operations.${operation}`\n        );\n        if (op && op.id) {\n          state.set(`operations.records.${operation}`, operations[operation]);\n        }\n        return;\n      }\n    }).then(() => {\n      return;\n    });\n  }\n} //mapOperations\n\n/**\n * creates new operation payload\n * @param props\n * @param state\n * @returns {{id: *, operation: {created: number, id: *, text: string, tags: Array, fields: *, label: *,\n *             idh: *, geometry: {visible: boolean}, data, stats: {}}, uuid: *}}\n */\nfunction createOperation({ props, state }) {\n  let operation = {\n    created: Date.now(),\n    id: props.item.id, //UUID\n    fields: props.item.fields || {},\n    label: props.item.label\n  };\n  return { id: operation.id, operation, uuid: operation.id };\n}\n\n/**\n * Creates request to send to the oada-server\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: *}}\n */\nfunction createOperationRequest({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n\n  let request = {\n    connection_id: connection_id,\n    data: props.operation,\n    path: _localPath + \"/\" + props.operation.id,\n    tree\n  };\n\n  let requests = [];\n  requests.push(request);\n  return {\n    connection_id: connection_id,\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\n/**\n * requests the operation creation to the OADA module\n * @type {*[]}\n */\nexport const addOperation = [\n  createOperation,\n  createOperationRequest,\n  oada.put,\n  fetchNoWatch\n];\n\n/**\n * Creates request to change/update the resource in the oada-server\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: string}}\n */\nfunction buildBookmarksOperationsRequest({ props, state }) {\n  let request = {\n    connection_id: state.get(\"operations.connection_id\"),\n    data: {},\n    type: _TYPE,\n    path: _localPath,\n    tree\n  };\n\n  let requests = [];\n\n  requests.push(request);\n\n  return {\n    connection_id: state.get(\"operations.connection_id\"),\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\n/**\n * Creates request to change/update the resource in the oada-server\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: string}}\n */\nfunction buildUpdateRequest({ props, state }) {\n  let operation_payload = state.get(\n    `${\"operations.records.\" + state.get(\"User.currentSelection.operation.id\")}`\n  );\n\n  let request = {\n    connection_id: state.get(\"operations.connection_id\"),\n    data: operation_payload,\n    type: _TYPE,\n    path: _localPath + \"/\" + state.get(\"User.currentSelection.operation.id\"),\n    tree\n  };\n\n  let requests = [];\n\n  requests.push(request);\n\n  return {\n    connection_id: state.get(\"operations.connection_id\"),\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\n/**\n * delete request\n * @param props\n * @param state\n * @returns {{connection_id: *, requests: Array, domain: string}}\n */\nfunction buildDeleteRequest({ props, state }) {\n  let connection_id = state.get(\"operations.connection_id\");\n  let request = {\n    connection_id: connection_id,\n    type: _TYPE,\n    path:\n      _localPath +\n      \"/\" +\n      state.get(\"User.currentSelection.operation.id\") +\n      \"/fields/\" +\n      state.get(\"fields.selectedId\")\n    //tree\n  };\n\n  let requests = [];\n  requests.push(request);\n\n  return {\n    connection_id: connection_id,\n    requests: requests,\n    domain: state.get(\"oada_domain\")\n  };\n}\n\nexport const putFieldOperation = [buildUpdateRequest, oada.put];\n\nfunction updateOperationFieldState({ props, state }) {\n  state.unset(\n    `${\"operations.records.\" +\n      state.get(\"User.currentSelection.operation.id\") +\n      \".fields.\" +\n      state.get(\"fields.selectedId\")}`\n  );\n}\n\nexport const deleteFieldOperation = [\n  buildDeleteRequest,\n  oada.delete,\n  updateOperationFieldState\n];\n\n/**\n * actual sequence to update operation resource\n * @type {*[]}\n */\nexport const updateOperation = [\n  equals(props`statusValue`),\n  {\n    unplanned: [deleteFieldOperation],\n    otherwise: [putFieldOperation]\n  }\n];\n\n/**\n * Handles updates in the fields\n * @type {*[]}\n */\nexport const handleFieldUpdate = [\n  updateOperation\n];\n","\nexport var loadData = [\n\tloadDataAction,\n\t//...dataTabsHandleChange,\n];\n\nexport var handleCollapse = [\n\thandleCollapseAction,\n];\n\nexport var handleChronologyCollapse = [\n\thandleChronologyCollapseAction,\n];\n\nfunction handleCollapseAction({ props, state }) {\n\tstate.toggle(`${'FldList.' + props.field_id + '.operations.' + props.operation_id + '.collapse'}`);\n}\n\nfunction handleChronologyCollapseAction({props, state}) {\n\tstate.toggle(`${'FldList.' + props.field_id + '.chronologyCollapse'}`);\n}\n\nfunction loadDataAction({ props, state }) {\n\tif (!(state.get('fields.editing'))) {\n\t\tconst all_fields = Object.keys(state.get('fields.records'));\n\n\t\tall_fields.map(fld_id => {\n            let operationsRecords = state.get(`${'operations.records'}`);\n\t\t\tif( operationsRecords )\n\t\t\tstate.set(`${'FldList.' + fld_id + '.operations'}`,\n\t\t\t\tObject.values(operationsRecords || {}).filter(operationRecord => {\n\t\t\t\t\treturn operationRecord.hasOwnProperty('fields') && operationRecord.fields.hasOwnProperty(fld_id)\n\t\t\t\t}).reduce((obj, operation) => {obj[operation.id] = {'id': operation.id, 'collapse': true}; return obj}, {})\n\t\t\t);\n\t\t});\n\n\t\tif (props.switchTab) {\n\t\t\treturn {value: props.switchTab}\n\t\t} else {\n\t\t\treturn {value: 1}\n\t\t}\n\t} else {\n\t\treturn {value: 2}\n\t}\n}\n","import { set } from 'cerebral/operators';\nimport { state } from 'cerebral/tags';\nimport gjArea from '@mapbox/geojson-area';\nimport { validateNewFieldButton } from \"../fields/sequences\";\n\nexport var startMovingMap = [\n  set(state`MapPanel.moving`, true),\n];\n\nexport var doneMovingMap = [\n  set(state`MapPanel.moving`, false),\n];\n\nexport var handleMapClick = [\n  dropPoint,\n  recalculateArea,\n  getFieldBoundingBox,\n  validateNewFieldButton\n];\n\nexport var handleLocationFound = [\n  setCurrentLocation,\n];\n\nexport var undoDrawPoint = [\n  undo,\n  recalculateArea,\n  getFieldBoundingBox\n];\n\nexport var endMarkerDrag = [\n  set(state`MapPanel.dragging_marker`, false),\n];\n\nexport var startMarkerDrag = [\n  set(state`MapPanel.dragging_marker`, true),\n];\n\nexport var markerDragging = [\n  setMarkerPosition,\n  recalculateArea,\n  getFieldBoundingBox,\n];\n\nexport var handleCurrentLocationButton = [\n  setMapToCurrentLocation,\n];\n\nexport var handleMapMoved = [\n  setMapLocation,\n];\n\nexport var setFieldOnMapCenter = [\n  mapToFieldPolygon,\n];\n\nexport var deleteCoordinate = [\n  deleteCoordinateAction,\n  recalculateArea,\n  getFieldBoundingBox,\n];\n\nfunction deleteCoordinateAction({props, state}) {\n  let id = state.get('fields.selectedId');\n  let tempObject = state.get(`fields.records.${id}`);\n  if (tempObject.boundary.geojson.coordinates[0].length > props.index) {\n    tempObject.boundary.geojson.coordinates[0].splice(props.index, 1);\n    state.set(`fields.records.${id}`, tempObject);\n  }\n}\n\nfunction setMapToCurrentLocation({state}) {\n  let loc = state.get('MapPanel.current_location');\n  if (loc) state.set('MapPanel.center', [loc.lat, loc.lng]);\n}\n\nfunction setMapLocation({props, state}) {\n  state.set('MapPanel.center', [props.latlng.lat, props.latlng.lng]);\n  state.set('MapPanel.zoom', props.zoom);\n}\n\nfunction setCurrentLocation({props, state}) {\n  let obj = {\n    lat: props.lat,\n    lng: props.lng,\n  };\n  state.set('MapPanel.current_location', obj);\n}\n\n/*function handleFieldPolygonClicked({props, state}) {\n//  state.set('fields.new_field.id', props.field_id);\n  const field = state.get(`fields.records.${props.field_id}`);\n  state.set('fields.new_field.id', field.id);\n  state.set('fields.new_field.inputText', field.label);\n  state.set('fields.new_field.suggestionsOpen', false);\n  state.set('fields.new_field.tempObject', state.get(`${'fields.' + field.id}`));\n  delete props.field_id;\n  return {item: field};\n}*/\n\nfunction setMarkerPosition({props, state}) {\n  let id = state.get(`fields.selectedId`);\n  state.set(`fields.records.${id}.boundary.geojson.coordinates.0.${props.idx}`, [props.lng, props.lat]);\n\n}\n\nfunction validateFieldCoordinates({state}){\n    let id = state.get(`fields.selectedId`);\n    let field = state.get(`fields.records.${id}`);\n    console.log(\"--> validating field coordinates\");\n\n    if (field.boundary.geojson && field.boundary.geojson.coordinates[0].length > 2) {\n        state.set('User.currentSelection.field.coordinatesOk', true);\n    }\n    else {\n        state.set('User.currentSelection.field.newFieldDisabled', true);\n        state.set('User.currentSelection.field.coordinatesOk', false);\n    }\n}\n\nfunction recalculateArea({state}) {\n  let id = state.get(`fields.selectedId`);\n  let field = state.get(`fields.records.${id}`);\n  let area = 0.0;\n  if (field.boundary.geojson && field.boundary.geojson.coordinates[0].length > 2) {\n    area = gjArea.geometry(field.boundary.geojson)/4046.86;\n  }\n  state.set(`fields.records.${id}.boundary.area`, area);\n\n  validateFieldCoordinates({state});\n}\n\nfunction undo({props, state}) {\n  let id = state.get('fields.selectedId');\n  let points = state.get(`fields.records.${id}.boundary.geojson.coordinates.0`);\n  if (points.length > 0) {\n    state.pop(`fields.records.${id}.boundary.geojson.coordinates.0`);\n  }\n}\n\nfunction mapToFieldPolygon({state}) {\n  let id = state.get('fields.selectedId');\n  if (!(state.get('fields.editing'))) {\n    let field = state.get(`fields.records.${id}`);\n    if (field) {\n      state.set('MapPanel.center', field.boundary.centroid);\n    }\n  }\n}\n\nfunction getFieldBoundingBox({props, state}) {\n  let id = state.get('fields.selectedId');\n  let bbox = computeBoundingBox(state.get(`fields.records.${id}.boundary.geojson`));\n  let c1 = null;\n  let c2 = null;\n  if (!(!bbox)) {\n    c1 = (bbox.north + bbox.south) / 2;\n    c2 = (bbox.east + bbox.west) / 2;\n  }\n  state.set(`fields.records.${id}.boundary.bbox`, bbox);\n  state.set(`fields.records.${id}.boundary.centroid`, [c1, c2]);\n}\n\nfunction dropPoint ({props, state}) {\n  let id = state.get('fields.selectedId');\n  state.push(`fields.records.${id}.boundary.geojson.coordinates.0`, props.pt);\n}\n\nfunction computeBoundingBox(geojsonPolygon) {\n  let coords = geojsonPolygon.coordinates[0];\n  if (coords.length > 0) {\n    let north = coords[0][1];\n    let south = coords[0][1];\n    let east = coords[0][0];\n    let west = coords[0][0];\n    for (let j = 0; j < coords.length; j++) {\n      if (coords[j][1] > north) north = coords[j][1];\n      if (coords[j][1] < south) south = coords[j][1];\n      if (coords[j][0] > east) east = coords[j][0];\n      if (coords[j][0] < west) west = coords[j][0];\n    }\n    let bbox = {north, south, east, west};\n    return bbox;\n  } else {\n    return null;\n  }\n}\n\n//FIXME, it is odd to change the state from other component\n/**\n * this hides the suggestions in the AutocompleteSearch when the mas is clicked\n * @type {*[]}\n */\nexport var closeSuggestionsAutocomplete = [\n  set(state`User.currentSelection.operation.suggestionsOpen`, false)\n];\n","import { toggle, set } from 'cerebral/operators'\nimport { state } from 'cerebral/tags'\n\nexport var handleDrawerOpen = [\n  toggle(state`BottomDrawer.open`)\n];\n\nexport var openBottomDrawerForStatusUpdate = [\n\tset(state`BottomDrawer.menu`, 'status-update'),\n\tset(state`BottomDrawer.open`, true),\n];\n\nexport var handleOperatorMenuOpen = [\n\tset(state`BottomDrawer.operatorMenuOpen`, true),\n];\n\nexport var handleOperatorMenuClose = [\n\tset(state`BottomDrawer.operatorMenuOpen`, false),\n];\n","import { set, when } from 'cerebral/operators';\nimport { state, props } from 'cerebral/tags';\nimport Promise from 'bluebird';\nimport uuid from 'uuid';\nimport { loadData as loadFldData } from '../FldList/chains';\nimport { setFieldOnMapCenter } from '../MapPanel/chains';\nimport { openBottomDrawerForStatusUpdate } from '../BottomDrawer/chains';\nimport geojson_area from '@mapbox/geojson-area';\nimport centroid from '@turf/centroid';\nimport bbox from '@turf/bbox';\nimport oada from '@oada/cerebral-module/sequences';\nimport {sequence} from \"cerebral/index\";\n/* internal local variables */\nconst _METERS_TO_ACRES = 0.000247105;\n\nlet tree = {\n    'bookmarks': {\n        '_type': \"application/vnd.oada.bookmarks.1+json\",\n        '_rev': '0-0',\n        'fields': {\n            '_type': \"application/vnd.oada.fields.1+json\",\n            '_rev': '0-0',\n            'fields-index': {\n                '*': {\n                    '_type': \"application/vnd.oada.field.1+json\",\n                    '_rev': '0-0',\n                    'fields-index': {\n                        '*': {\n                            '_type': \"application/vnd.oada.field.1+json\",\n                            '_rev': '0-0',\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n\n/**\n * Adding new field\n * @type {*[]}\n */\nexport var addFieldClicked = [\n\taddNewField, //ok\n  validateNewFieldButton, //ok\n\t...loadFldData,\n\tsetCurrentField,//\n\tresetCurrentSelectionStatus, //ok\n\tset(state`fields.editing`, true), //ok\n  set(state`fields.isNewField`, true) //ok\n];\n\n/**\n * Editing field status on operation or editing field\n * @type {*[]}\n */\nexport var handleFieldPolygonClicked = [\n\tsetCurrentField,\n\tresetCurrentSelectionStatus,\n\t...loadFldData,\n\t...setFieldOnMapCenter,\n\t...openBottomDrawerForStatusUpdate,\n];\n\n/**\n * Maps fields records\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToFields({props, state}) {\n  let connection_id = state.get('fields.connection_id');\n  let curFields = state.get('fields.records');\n\n  console.log(\"===== map oada to fields =====\");\n\n  return Promise.map(Object.keys(curFields || {}), (field) => {\n    return state.unset(`fields.records.${field}`)\n  }).then(() => {\n    let fields = state.get(`oada.${connection_id}.bookmarks.fields`);\n    if (fields) {\n      return Promise.map(Object.keys(fields['fields-index'] || {}), (fieldGroup) => {\n          if (fields['fields-index'][fieldGroup]) {\n              return Promise.map(Object.keys(fields['fields-index'][fieldGroup]['fields-index'] || {}), (field) => {\n                  let field_object = fields['fields-index'][fieldGroup]['fields-index'][field];\n                  let record = {\n                      id: field,\n                      name: field_object.name,\n                      farm: {\n                          id: fieldGroup,\n                          name: fields['fields-index'][fieldGroup].name\n                      }\n                  };\n\n                  if (field_object.boundary) {\n                      let centroid_object = centroid(field_object.boundary.geojson);\n                      record.boundary = {\n                          geojson: field_object.boundary.geojson,\n                          area: geojson_area.geometry(field_object.boundary.geojson) * _METERS_TO_ACRES,\n                          centroid: centroid_object.geometry.coordinates.reverse(),\n                          bbox: bbox(field_object.boundary.geojson),\n                          visible: true\n                      }\n                  }\n\n                  return state.set(`fields.records.${field}`, record);\n              })\n          } else {\n              return;\n          }\n      })\n    } else return\n  }).then(() => {\n    return\n  })\n}\n\n\n/**\n * Maps farms records (utilized to validate the existence of a farm)\n * @param props\n * @param state\n * @returns {*}\n */\nexport function mapOadaToFarms({props, state}) {\n    let connection_id = state.get('fields.connection_id');\n    let curFarms = state.get('fields.farms');\n\n    console.log(\"----- map oada to farms -----\");\n\n    return Promise.map(Object.keys(curFarms || {}), (farm) => {\n        return state.unset(`fields.farms.${farm}`)\n    }).then(() => {\n        let fields = state.get(`oada.${connection_id}.bookmarks.fields`);\n        if (fields) {\n            return Promise.map(Object.keys(fields['fields-index'] || {}), (farm) => {\n                if (fields['fields-index'][farm] &&  fields['fields-index'][farm].name) {\n                    let farm_object = fields['fields-index'][farm];\n                    let record = {\n                        id: farm,\n                        name: farm_object.name,\n                    };\n                    return state.set(`fields.farms.${fields['fields-index'][farm].name}`, record);\n                } else {\n                    return;\n                }\n            });\n        } else return\n    }).then(() => {\n        return\n    })\n}//mapOadaToFarms\n\n/**\n * Storing new farm in the oada-srv\n * @type {*[]}\n */\nexport const putFarm = [\n    ({ state, props}) => ({\n        data: {\n            _id: 'resources/' + props.item.farm.id,\n            name: props.item.farm.name\n        }\n    }),\n    ({props, state}) => ({\n        connection_id: state.get('operations.connection_id'),\n        data:          props.data,\n        path:          `/bookmarks/fields/fields-index/${props.item.farm.id}`,\n        tree,\n    }),\n    createFarmRequest,\n    oada.put,\n];\n\n/**\n*\n* @param props\n* @param state\n* @returns {{connection_id: *, data: {id: null, placeholder: string, suggestionsOpen: boolean, name: string, disabled: boolean, editing: boolean, tempObject: null, newFieldDisabled: boolean}|state.currentSelection.field|{id, placeholder, suggestionsOpen, name, disabled, editing, tempObject, newFieldDisabled}|*|{_id: string, name: *, boundary: {geojson: {type: string, coordinates: Array[]}|boundary.geojson|{type, coordinates}}}|{id: *, label: *, boundary: {area: null, geojson: {type: string, coordinates: *[]}, bbox: null, centroid: *[], visible: boolean}}, path: string, tree: {bookmarks: {_type: string, _rev: string, fields: {_type: string, _rev: string, \"fields-index\": {\"*\": {_type: string, _rev: string, \"fields-index\": {\"*\": {_type: string, _rev: string}}}}}}}}}\n*/\nfunction createFarmRequest({props, state}){\n    let data = {\n        _id: 'resources/' + props.item.farm.id,\n        name: props.item.farm.name\n    };\n    let requests = [];\n    requests.push({\n        connection_id: state.get('operations.connection_id'),\n        data,\n        path:  `/bookmarks/fields/fields-index/${props.item.farm.id}`,\n        tree\n    });\n    return { requests };\n}\n\n/**\n * creates new field payload\n * @param props\n * @param state\n * @returns {{id: *, field: {created: number, id: *, text: string, tags: Array, fields: {},\n * boundary: {visible: boolean}, data, stats: {}}, uuid: *}}\n */\nfunction createField({props, state}) {\n    let field = {\n        _id: 'resources/' + props.item.id,\n        name: props.item.name,\n        boundary: { geojson: props.item.boundary.geojson }\n    };\n    return {id: props.item.id, field}\n}\n\n/**\n *\n * @param props\n * @param state\n * @returns {{connection_id: *, data: {id: null, placeholder: string, suggestionsOpen: boolean, name: string, disabled: boolean, editing: boolean, tempObject: null, newFieldDisabled: boolean}|state.currentSelection.field|{id, placeholder, suggestionsOpen, name, disabled, editing, tempObject, newFieldDisabled}|*|{_id: string, name: *, boundary: {geojson: {type: string, coordinates: Array[]}|boundary.geojson|{type, coordinates}}}|{id: *, label: *, boundary: {area: null, geojson: {type: string, coordinates: *[]}, bbox: null, centroid: *[], visible: boolean}}, path: string, tree: {bookmarks: {_type: string, _rev: string, fields: {_type: string, _rev: string, \"fields-index\": {\"*\": {_type: string, _rev: string, \"fields-index\": {\"*\": {_type: string, _rev: string}}}}}}}}}\n */\nfunction createFieldRequest({props, state}){\n    let farmName = state.get(`fields.farms.${props.item.farm.name}`);\n    let farmId = props.item.farm.id;\n\n    if (farmName){\n        farmId = state.get(`fields.farms.${props.item.farm.name}.id`);\n    }\n\n    let requests = [];\n\n    requests.push({\n        connection_id: state.get('operations.connection_id'),\n        data: props.field,\n        path: `/bookmarks/fields/fields-index/${farmId}/fields-index/${props.id}`,\n        tree\n    });\n\n    return { requests };\n}\n\n/**\n * disables new field button\n * @type {*[]}\n */\nexport var disableNewFieldButton = [\n    set(state`User.currentSelection.field.newFieldDisabled`, true),\n    set(state`User.currentSelection.field.coordinatesOk`, false)\n];\n\nexport const putField = [\n    createField,\n    createFieldRequest,\n    oada.put,\n    disableNewFieldButton\n];\n\n/**\n * sets the current field\n * @type {*[]}\n */\nexport var handleFieldSelected = [\n\tsetCurrentField,\n\tresetCurrentSelectionStatus,\n  //\t...loadFldData,\n\t...setFieldOnMapCenter\n];\n\nexport var handleFarmSelected = [\n  set(`field.records.${props`id`}.farm`, props`farm`)\n];\n\n/**\n * clears the field\n * @type {*[]}\n */\nexport var handleFieldCleared = [\n\tclearCurrentField\n];\n\n/**\n * Save edited file\n * If farm does not exist in the state, then it creates a new index for that farm\n * @type {*[]}\n */\nexport var saveEditedField = [\n    set(props`item`, state`fields.records.${state`fields.selectedId`}`),\n    set(state`fields.editing`, false),\n    when(state`fields.farms.${props`item.farm.name`}`), {\n        true : [],\n        false: [putFarm]\n    },\n    putField,\n];\n\n/**\n * Sets the current field as the new field or the field being edited\n * @param props\n * @param state\n */\nexport function setCurrentField({ props, state }){\n    state.set('fields.selectedId', props.field.id);\n    if (!(state.get('fields.editing'))) {\n        state.set(`fields.new_field.field.suggestionsOpen`, false);\n        state.set('fields.editing', false);\n    }\n}\n\n/**\n * sets the current field to empty\n * @param props\n * @param state\n */\nfunction clearCurrentField({props, state}) {\n    let id = state.get('fields.selectedId');\n\tif (!(state.get('fields.editing'))) {\n\t\tstate.set(`fields.records.${id}`, null);\n\t\tstate.set(`fields.records.${id}`, null);\n\t\tstate.set(`fields.editing`, false);\n\t\tstate.set('User.currentSelection.status', {status: null, marker: null, timestamp: null})\n\t}\n}\n\n/**\n * Creates the template for the field record with a random UUID\n * @returns {{id: *, label: *, boundary: {area: null, geojson: {type: string, coordinates: *[]}, bbox: null, centroid: *[], visible: boolean}}}\n */\nfunction createFieldRecord(_inputText){\n    return {\n        id: uuid(),\n        name: '',\n        farm: {\n          name: _inputText,\n          id: uuid(),\n        },\n        boundary: {\n            geojson: {\n                type: \"Polygon\",\n                coordinates: [[]]\n            },\n            visible: true,\n        }\n    };\n}//createFieldRecord\n\n/**\n * Adds new farm/index if does not exist in the state\n * @param props\n * @param state\n * @returns {{item: any}}\n */\nexport function addNewFarm({props, state}){\n    let _inputText = state.get('fields.new_field.farm.name');\n    let farmRecord = createFieldRecord(_inputText);\n    state.set(`fields.selectedId`, farmRecord.id);\n    state.set(`fields.records.${farmRecord.id}`, farmRecord);\n\n    return {item: farmRecord};\n}\n\n/**\n * Adds new field\n * @param props\n * @param state\n * @returns {{item: any}}\n */\nexport function addNewField({props, state}){\n    let _inputText = state.get('fields.new_field.field.name');\n    let field = createFieldRecord(_inputText);\n    state.set(`fields.records.${field.id}`, field);\n\n    return {field};\n}\n\n/**\n * Generates a timestamp in the format 'YYYY-MM-DD'\n * @returns {string}\n */\nfunction timestamp (){\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1; //January is 0!\n    let yyyy = today.getFullYear();\n    if(dd < 10) { dd = '0' + dd }\n    if(mm < 10) { mm = '0' + mm\t}\n\n    return yyyy + '-' + mm + '-' + dd;\n}\n\n/**\n * gets the current field status in the current operation\n * @param props\n * @param state\n * @returns {string}\n */\nfunction getCurrentOperationFieldStatus({props, state}){\n    let status = state.get(`${'operations.records.' + state.get('User.currentSelection.operation.id') \n                            + '.fields.' + state.get('fields.selectedId') + '.status'}`);\n    return status ? status: \"unplanned\";\n}//getCurrentOperationFieldStatus\n\n/**\n * resets the current field status in the current operation\n * @param props\n * @param state\n */\nfunction resetCurrentSelectionStatus({props, state}) {\n\tif (!(state.get('fields.editing'))) {\n        let currentOperationFieldStatus = getCurrentOperationFieldStatus({props, state});\n        if(currentOperationFieldStatus){\n            state.set('User.currentSelection.status.status', currentOperationFieldStatus);\n        }\n        state.set('User.currentSelection.status.timestamp', timestamp());\n        state.set('User.currentSelection.status.marker', state.get('User.label'));\n\t}//if\n}\n\n/**\n * it verifies that farm and field have some value in the textbox\n * (it does not allow empty field's name or farm's name)\n * @param props\n * @param state\n */\nexport function validateNewFieldButton({props, state}){\n    let id = state.get('fields.selectedId');\n    let fieldName = state.get(`fields.records.${id}.name`);\n    let farmName = state.get(`fields.records.${id}.farm.name`);\n    let coordinatesOk = state.get(`User.currentSelection.field.coordinatesOk`);\n    if(fieldName && farmName && fieldName.length > 0 && farmName.length > 0 && coordinatesOk){\n        state.set('User.currentSelection.field.newFieldDisabled', false);\n    }\n    else {\n        state.set('User.currentSelection.field.newFieldDisabled', true);\n    }\n}\n\n/**\n * Farm's input text changed\n * @param props\n * @param state\n */\nexport function farmTextChanged({props, state}) {\n    let id = state.get('fields.selectedId');\n    state.set(`fields.records.${id}.farm.name`, props.value);\n    state.set('fields.new_field.farm.suggestionsOpen', true);\n    validateNewFieldButton({props, state});\n}\n\n/**\n * Field's input text changed\n * @param props\n * @param state\n */\nexport function fieldTextChanged({props, state}) {\n    let id = state.get('fields.selectedId');\n    state.set(`fields.records.${id}.name`, props.value);\n    state.set('fields.new_field.field.suggestionsOpen', true);\n    validateNewFieldButton({props, state});\n}\n\n/**\n * Handles updates in the resource\n * @type {*[]}\n */\nexport const handleWatchUpdate =  sequence('fields.handleWatchUpdate', [\n    () => { console.log('--> fields.handlingWatchUpdate') },\n    mapOadaToFields,\n    mapOadaToFarms\n]);\n\n/**\n * cancels new field process\n * @type {(() => void) | ((props: any) => void)}\n */\nexport const cancelNewField = sequence('fields.cancelNewField', [\n    () => { console.log('--> fields.cancelNewField') },\n    cancelNewFieldAction,\n    when(state`fields.isNewField`), {\n        true: [\n                 mapOadaToFields,\n                 mapOadaToFarms\n               ],\n        false : []\n    },\n]);\n\n/**\n * Discard changes on field, delete field from state\n * @param props\n * @param state\n */\nexport function cancelNewFieldAction({props, state}) {\n    let id = state.get(`fields.selectedId`);\n    let boundary = state.get('fields.temp_buffer.boundary');\n    if(boundary) {\n        console.log(\"--> boundary ->\", boundary);\n        state.set(`fields.records.${id}.boundary`, boundary);\n    }\n    state.set('fields.editing', false);\n    state.set(`User.currentSelection.field.coordinatesOk`, false);\n    state.unset('fields.new_field.field');\n    state.unset('fields.selectedId');\n    state.unset('fields.temp_buffer');\n}\n","import MobileDetect from 'mobile-detect';\nimport * as oada from '@oada/cerebral-module/sequences';\nimport * as operations from '../operations/sequences';\nimport { sequence } from 'cerebral';\nimport { state } from \"cerebral/tags\";\nimport { when } from \"cerebral/operators\";\nimport { mapOadaToFields, mapOadaToFarms } from \"../fields/sequences\";\nimport * as fields from \"@oada/fields-module/cerebral/sequences\";\n\n// const _DEBUG = false;\n// const _TOKEN = 'servio';\n//const _SCOPE = 'oada.operations:all';\nconst _SCOPE = 'oada.yield:all';\nconst _TOKEN = 'def';\n\n// previous http\nconst _OPENATK_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY';\n// const _LOCALHOST_VIP_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n// const _REDIRECT_LOCALHOST = 'http://localhost:8000/oauth2/redirect.html';\n\nconst _REDIRECT_OPENATK = 'https://openatk.com/FieldWorkApp/oauth2/redirect.html';\n// const _OPENATK_METADATA = \"eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHBzOi8vb3BlbmF0ay5jb20vRmllbGRXb3JrQXBwL29hdXRoMi9yZWRpcmVjdC5odG1sIiwiaHR0cHM6Ly9vcGVuYXRrLmdpdGh1Yi5pby9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJhdXRob3JpemF0aW9uX2NvZGUiXSwicmVzcG9uc2VfdHlwZXMiOlsidG9rZW4iLCJjb2RlIiwiaWRfdG9rZW4iLCJpZF90b2tlbiB0b2tlbiIsImNvZGUgaWRfdG9rZW4iLCJjb2RlIHRva2VuIiwiY29kZSBpZF90b2tlbiB0b2tlbiJdLCJjbGllbnRfbmFtZSI6Ik9wZW5BVEsiLCJjbGllbnRfdXJpIjoiaHR0cDovL29wZW5hdGsuY29tIiwiY29udGFjdHMiOlsiU2VydmlvIFBhbGFjaW9zIDxzcGFsYWNpb0BwdXJkdWUuZWR1PiJdLCJqd2tzIjp7ImtleXMiOlt7Imt0eSI6IlJTQSIsIm4iOiJ6YXVaRkJ1TWRsdjFrWWp6VWI0cS1fM200c21GeG5mdzRTWW9hSHE3Y2k4U2N0WTN4ajdyZEFIeWtRcG5RVnJqNktPOG1hSHYtMEJ2VzVNaGNnaXZrdVlzLXpIRXZmWUJlVkJuY3ZIZ09rSlBiYzkxQ3dfaXdPWTdFSFdCOGhNN1ZpTFFWY19EdjBoOG5KeWJCdmhMMDRDSFF0N0NwTXRWWUc2Zm9KWGMzZHE1MmpOUWJCSElaNW03VnoxS3R5em9MY3A4TzJtaGFMcDQ1VXIzQ18xZUd0djhuNU56OWJXX0JoNVhGWWJEeHY3Qm5oWk5JdzFHQ2JqakF3bXRibm5MN0dnZjRDeTYwd1JIbVI0dm9lMjFPSWpvQVNxMmpaMDN4MTJtWHM3SFBJM1lCNHkyOXd2Wk13MmdMek9kVG9ycnFPLXRsbW4xYm9Qa1dLSkpTWG9BdnciLCJlIjoiQVFBQiJ9XX0sInNvZnR3YXJlX2lkIjoiZjhjZjUwODctN2QwOC00ODBjLWJmZDgtOTIxMGNiOWQxYTg0IiwicmVnaXN0cmF0aW9uX3Byb3ZpZGVyIjoiaHR0cHM6Ly9pZGVudGl0eS5vYWRhLWRldi5jb20iLCJpYXQiOjE1MzU0Njc0NDh9.OIgqJ8aVyRgbTc9C-eY0Mk9Eku49eKVf5Yl2kAqDnZNykU3fvK0o5Mtd_C_EvSUS49I1iL2ZPpsW4VAgHzcIzLNj9I5KC-eTzZOIyQxWWA0fYtXoJFaXF4BJfIjOBwmmPJ6ohteCqv5Az_LU5leZiAVWoLDNOo6Wu9wMwmMf_uA\";\n\n/**\n * VIP and Localhost - Dev\n * @type {string}\n * @private\n */\n// const _CURRENT_METADATA = _LOCALHOST_VIP_METADATA;\n// const _CURRENT_REDIRECT = _REDIRECT_LOCALHOST;\n\n/**\n * OpenATK domain - Production\n * @type {string}\n * @private\n */\nconst _CURRENT_METADATA = _OPENATK_METADATA;\nconst _CURRENT_REDIRECT = _REDIRECT_OPENATK;\n\nexport const init = sequence('App.init', [\n    setMobile,\n    //getConnectionsFromStorage,\n    when(state`Connections.connection_id`), {\n        true : sequence('autoInitSuccess', [\n                ({state}) => ({\n                    domain: state.get('Connections.oada_domain'),\n                    options: {\n                        redirect: _CURRENT_REDIRECT,\n                        metadata: _CURRENT_METADATA,\n                        scope:    _SCOPE\n                    },\n                    token:         _TOKEN,\n                    connection_id: state.get('operations.connection_id'),\n                    signals: ['fields.handleWatchUpdate']\n                }),\n                fields.init,\n                mapOadaToFields,\n                mapOadaToFarms,\n                ({state}) => ({\n                    domain:   state.get('Connections.oada_domain'),\n                    options: {\n                        redirect: _CURRENT_REDIRECT,\n                        metadata: _CURRENT_METADATA,\n                        scope:    _SCOPE\n                    },\n                    token:         _TOKEN,\n                    connection_id: state.get('operations.connection_id'),\n                }),\n            operations.init]),\n        false: []\n    },\n]);\n\n/**\n * gets the Connections from localCache, it updates all necessary state to auto-init the app\n * @param state\n */\nfunction getConnectionsFromStorage({ state }){\n    let connections = JSON.parse(localStorage.getItem('_FieldWorkApp.Connections'));\n    //console.log(\"--> app init storage connections --> \", connections);\n    if(connections && connections[\"connection_id\"]){\n        let connectionId = connections['connection_id'];\n        let oadaDomain = connections['oada_domain'];\n        state.set('Connections.show', false);\n        state.set(`operations.connection_id`, connectionId);\n        state.set(`fields.connection_id`, connectionId);\n        state.set(`Connections.connection_id`, connectionId);\n        state.set('Connections.oada_domain', oadaDomain);\n        state.set('Connections.oada_domain_text', oadaDomain);\n    }\n    else{\n        state.set('Connections.show', true);\n    }\n}\n\nexport const clearCacheButtonClicked = [\n    ({state, props}) => ({\n        connection_id: state.get('operations.connection_id')\n    }),\n    oada.resetCache,\n    init\n];\n\nfunction setMobile({state}) {\n    let md = new MobileDetect(window.navigator.userAgent);\n    state.set(`App.is_mobile`, (md.mobile() !== null));\n}\n\n/**\n * sets the operation\n * @param state\n * @returns {*}\n */\n// function setDefaultOperation({state}) {\n//     const operations = Object.values(state.get('operations.records'));\n//     if (operations.length > 0) {\n//         return {item: operations[0]}\n//     } else {\n//         return {item: null}\n//     }\n// }\n","import stateTree from \"./stateTree.js\";\nimport { Module } from \"cerebral\";\nimport StorageModule from \"@cerebral/storage\";\n\n/* sequences */\nimport * as signals from \"./sequences\";\n\nconst LocalCache = StorageModule({\n  target: window.localStorage ? localStorage : null,\n  json: true,\n  sync: {\n    Connections: \"Connections\"\n  },\n  prefix: \"_FieldWorkApp\"\n});\n\nexport default Module({\n  state: stateTree,\n  signals,\n  modules: { LocalCache }\n});\n","/* cerebral imports */\nimport {state, props} from 'cerebral/tags';\nimport { set } from 'cerebral/operators';\n/* fields-module */\nimport * as fields from '@oada/fields-module/cerebral/sequences';\nimport { mapOadaToFields, mapOadaToFarms } from \"../fields/sequences\";\nimport { loadData as loadFldListData } from \"../FldList/chains\";\n/* operations module */\nimport * as operations from \"../operations/sequences\";\n\nconst _SCOPE = 'oada.yield:all';\nconst _OPENATK_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly9vcGVuYXRrLmNvbS9GaWVsZFdvcmtBcHAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0L29hdXRoMi9yZWRpcmVjdC5odG1sIl0sInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIjoidXJuOmlldGY6cGFyYW1zOm9hdXRoOmNsaWVudC1hc3NlcnRpb24tdHlwZTpqd3QtYmVhcmVyIiwiZ3JhbnRfdHlwZXMiOlsiYXV0aG9yaXphdGlvbl9jb2RlIl0sInJlc3BvbnNlX3R5cGVzIjpbInRva2VuIiwiY29kZSIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iLCJjb2RlIGlkX3Rva2VuIiwiY29kZSB0b2tlbiIsImNvZGUgaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHA6Ly9vcGVuYXRrLmNvbSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwiandrcyI6eyJrZXlzIjpbeyJrdHkiOiJSU0EiLCJuIjoiemF1WkZCdU1kbHYxa1lqelViNHEtXzNtNHNtRnhuZnc0U1lvYUhxN2NpOFNjdFkzeGo3cmRBSHlrUXBuUVZyajZLTzhtYUh2LTBCdlc1TWhjZ2l2a3VZcy16SEV2ZllCZVZCbmN2SGdPa0pQYmM5MUN3X2l3T1k3RUhXQjhoTTdWaUxRVmNfRHYwaDhuSnliQnZoTDA0Q0hRdDdDcE10VllHNmZvSlhjM2RxNTJqTlFiQkhJWjVtN1Z6MUt0eXpvTGNwOE8ybWhhTHA0NVVyM0NfMWVHdHY4bjVOejliV19CaDVYRlliRHh2N0JuaFpOSXcxR0NiampBd210Ym5uTDdHZ2Y0Q3k2MHdSSG1SNHZvZTIxT0lqb0FTcTJqWjAzeDEybVhzN0hQSTNZQjR5Mjl3dlpNdzJnTHpPZFRvcnJxTy10bG1uMWJvUGtXS0pKU1hvQXZ3IiwiZSI6IkFRQUIifV19LCJzb2Z0d2FyZV9pZCI6ImE3MDNiZmRjLTNmYTEtNDk5Zi1iOTA1LTExZjBiNTRmMzgwNyIsInJlZ2lzdHJhdGlvbl9wcm92aWRlciI6Imh0dHBzOi8vaWRlbnRpdHkub2FkYS1kZXYuY29tIiwiaWF0IjoxNTMzODQ2MTEyfQ.Y9BlbqHzOvufADGAW9HG4Yx2rqbg6zPalpcjSS_97Mpg36lOuADGJ4YTQ2iQfRlZjzqBi1sUq3iFhReBfk89Oy2nSEY6RVPnONK5v6a73jce3xGPUWk8DDl3rf3lcrt-IqWFoAieUie7WK5nrPFIe-_xcgYdChnuGrugjO9dGOY';\n// const _LOCALHOST_VIP_METADATA = 'eyJqa3UiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbS9jZXJ0cyIsImtpZCI6ImtqY1NjamMzMmR3SlhYTEpEczNyMTI0c2ExIiwidHlwIjoiSldUIiwiYWxnIjoiUlMyNTYifQ.eyJyZWRpcmVjdF91cmlzIjpbImh0dHA6Ly92aXAzLmVjbi5wdXJkdWUuZWR1OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiLCJodHRwOi8vbG9jYWxob3N0OjgwMDAvb2F1dGgyL3JlZGlyZWN0Lmh0bWwiXSwidG9rZW5fZW5kcG9pbnRfYXV0aF9tZXRob2QiOiJ1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Y2xpZW50LWFzc2VydGlvbi10eXBlOmp3dC1iZWFyZXIiLCJncmFudF90eXBlcyI6WyJpbXBsaWNpdCJdLCJyZXNwb25zZV90eXBlcyI6WyJ0b2tlbiIsImlkX3Rva2VuIiwiaWRfdG9rZW4gdG9rZW4iXSwiY2xpZW50X25hbWUiOiJPcGVuQVRLIiwiY2xpZW50X3VyaSI6Imh0dHBzOi8vdmlwMy5lY24ucHVyZHVlLmVkdSIsImNvbnRhY3RzIjpbIlNhbSBOb2VsIDxzYW5vZWxAcHVyZHVlLmVkdT4iXSwic29mdHdhcmVfaWQiOiIxZjc4NDc3Zi0zNTQxLTQxM2ItOTdiNi04NjQ0YjRhZjViYjgiLCJyZWdpc3RyYXRpb25fcHJvdmlkZXIiOiJodHRwczovL2lkZW50aXR5Lm9hZGEtZGV2LmNvbSIsImlhdCI6MTUxMjAwNjc2MX0.AJSjNlWX8UKfVh-h1ebCe0MEGqKzArNJ6x0nmta0oFMcWMyR6Cn2saR-oHvU8WrtUMEr-w020mAjvhfYav4EdT3GOGtaFgnbVkIs73iIMtr8Z-Y6mDEzqRzNzVRMLghj7CyWRCNJEk0jwWjOuC8FH4UsfHmtw3ouMFomjwsNLY0';\n// const _REDIRECT_LOCALHOST = 'http://localhost:8000/oauth2/redirect.html';\nconst _REDIRECT_OPENATK = 'http://openatk.com/FieldWorkApp/oauth2/redirect.html';\nconst _TOKEN = 'def';\n\n/**\n * VIP and Localhost\n * @type {string}\n * @private\n */\n// const _CURRENT_METADATA = _LOCALHOST_VIP_METADATA;\n// const _CURRENT_REDIRECT = _REDIRECT_LOCALHOST;\n\n/**\n * OpenATK domain\n * @type {string}\n * @private\n */\nconst _CURRENT_METADATA = _OPENATK_METADATA;\nconst _CURRENT_REDIRECT = _REDIRECT_OPENATK;\n\nexport var signOut = [\n    set(state`Connections.oada_token`, ''),\n    set(state`Connections.oada_domain`, ''),\n    set(state`Connections.oada_fields_domain`, ''),\n    set(state`Connections.oada_domain_text`, ''),\n    set(state`Connections.oada_fields_domain_text`, ''),\n];\n\nexport var updateOadaDomain = [\n    set(state`Connections.oada_domain_text`, props`value`),\n];\n\n// version 1 assumes operations and fields are at the same service\nexport var updateOadaFieldsDomain = [\n    set(state`Connections.oada_fields_domain_text`, props`value`),\n];\n\nexport var clearConnection = [\n    operationsCleanUp,\n    loadFldListData,\n    connectionCleanUp\n];\n\nexport var init = [\n    ({state}) => ({\n        domain:         state.get('Connections.oada_domain'),\n        options: {\n            redirect: _CURRENT_REDIRECT,\n            metadata: _CURRENT_METADATA,\n            scope:    _SCOPE\n        },\n        token:         _TOKEN,\n        connection_id: state.get('operations.connection_id'),\n        signals: ['fields.handleWatchUpdate']\n    }),\n    fields.init,\n    mapOadaToFields,\n    mapOadaToFarms,\n    ({state}) => ({\n        domain:         state.get('Connections.oada_domain'),\n        options: {\n            redirect: _CURRENT_REDIRECT,\n            metadata: _CURRENT_METADATA,\n            scope:    _SCOPE\n        },\n        token:         _TOKEN,\n        connection_id: state.get('operations.connection_id'),\n    }),\n    operations.init,\n    loadFldListData,\n    set(state`Connections.show`, false)\n];\n\nfunction getOperationsConnection({state, props}){\n    let oadaConnections = state.get('oada.connections');\n    let operationsconnectionId = Object.keys(oadaConnections)[0];\n    state.set(`Connections.connection_id`, operationsconnectionId);\n    console.log(\"=====> oada.connections ====> \", operationsconnectionId);\n}\n\nexport var setConnection = [\n    set(state`Connections.open`, false),\n    set(state`Connections.show`, false),\n    set(state`Connections.oada_domain`, state`Connections.oada_domain_text`),\n    //set(state`Connections.oada_fields_domain`, state`Connections.oada_fields_domain_text`), v2\n    init,\n    getOperationsConnection,\n    set(props`domain`, state`Connections.oada_domain`),\n];\n\nexport var cancelConnection = [\n    set(state`Connections.open`, false),\n    set(state`Connections.show`, false),\n    set(state`Connections.oada_domain`, state`Connections.oada_domain`),\n    set(state`Connections.oada_fields_domain`,  state`Connections.oada_domain`)\n];\n\nexport var showConnections = [\n    set(state`Connections.open`, true),\n    set(state`Connections.show`, true),\n];\n\nexport function operationsCleanUp({state, props}){\n    let operations =  state.get('operations.records');\n\n    if(operations) {\n        let operationsKeys = Object.keys(operations);\n        let userOperations = state.get('User.operations');\n\n        /* cleaning up operations from the previous connections */\n        operationsKeys.forEach((operation) => {\n            delete userOperations[operation];\n        });\n\n        state.set('User.operations', userOperations);\n        state.unset('operations.records');\n    }\n}\n\nfunction connectionCleanUp({state, props}){\n    let connection_id = state.get('operations.connection_id');\n    /* cleaning up connections from oada state */\n    state.unset('oada.connections');\n    /* cleaning up previous connection_id from oada state */\n    state.unset('oada.' + connection_id)\n}\n","import { Module } from 'cerebral';\nimport {\n    showConnections,\n    signOut,\n} from '../Connections/chains';\n\nimport {\n    clearCacheButtonClicked\n} from \"../App/sequences\";\n\nexport default Module({\n  state: {\n    open: false\n  },\n\n  signals: {\n    connectionsClicked: showConnections,\n    signoutClicked: signOut,\n    clearCacheClicked: clearCacheButtonClicked\n  }\n});\n","import { toggle } from 'cerebral/operators'\nimport {state} from 'cerebral/tags'\n\nexport var handleDrawerOpen = [\n  toggle(state`SideDrawer.open`)\n];\n","import { Module } from 'cerebral';\nimport * as signals from './chains';\n\nexport default Module({\n\tstate: {\n\t\topen: false\n  \t},\n\n  \tsignals,\n});\n","import { Module } from 'cerebral';\nimport {\n\thandleChange,\n\thandleChangeIndex,\n\ttoggleTab,\n} from './chains';\n\nexport default Module({\n\tstate: {\n\t\tvalue: 0\n  \t},\n\n  \tsignals: {\n  \t\thandleChange: handleChange,\n  \t\thandleChangeIndex: handleChangeIndex,\n  \t\ttoggleTab: toggleTab,\n  \t}\n});\n","/* cerebral imports */\n\n/* operations imports */\nimport { loadData as loadOpsData } from '../OpsList/chains';\nimport { clearData as clearOpsData } from '../OpsList/chains';\n\n/* operations module imports */\nimport * as operations from '../operations/sequences';\n\n/* fields imports */\nimport { loadData as loadFldData } from '../FldList/chains';\n\n/* Drawers and Panels imports */\nimport { handleDrawerOpen as handleBottomDrawerOpen } from '../BottomDrawer/chains';\nimport uuid from 'uuid';\n\nexport var setCurrentSelectionStatusStatus = [\n\tsetCurrentSelectionStatus,\n\tsaveCurrentSelectionStatusAction,\n\t...loadOpsData,\n\t...loadFldData,\n\t...handleBottomDrawerOpen,\n    operations.updateOperation,\n\tresetCurrentSelectionStatus,\n];\n\nexport var setCurrentSelectionStatusMarker = [\n\tsetCurrentSelectionStatusMarkerAction,\n];\n\nexport var setCurrentSelectionStatusTimestamp = [\n\tsetCurrentSelectionStatusTimestampAction,\n];\n\nexport var saveCurrentSelectionStatus = [\n\tsaveCurrentSelectionStatusAction,\n\t...loadOpsData,\n\t...loadFldData,\n\t...handleBottomDrawerOpen,\n\tresetCurrentSelectionStatus,\n];\n\nexport var handleOperationSelected = [\n\tsetCurrentOperation,\n\t...loadOpsData,\n];\n\nexport var handleOperationCleared = [\n\tclearCurrentOperation,\n\t...clearOpsData,\n];\n\nexport var addNewOperation = [\n\taddNewOperationAction,\n    operations.addOperation,\n\tsetCurrentOperation,\n\t...loadOpsData,\n\t...handleBottomDrawerOpen,\n];\n\nexport var setDisabledNewOperation = [\n    setDisabledNewOperationAction,\n];\n\nexport var cancelNewOperation = [\n\tcancelNewOperationAction,\n\tsetCurrentOperation,\n\t...loadOpsData,\n\t...handleBottomDrawerOpen,\n];\n\n/**\n * Generates a timestamp in the format 'YYYY-MM-DD'\n * @returns {string}\n */\nfunction timestamp (){\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1; //January is 0!\n    let yyyy = today.getFullYear();\n    if(dd < 10) { dd = '0' + dd }\n    if(mm < 10) { mm = '0' + mm\t}\n\n    return yyyy + '-' + mm + '-' + dd;\n}\n\nfunction getCurrentOperationFieldStatus({props, state}){\n  let id = state.get('fields.selectedId');\n  let opId = state.get('User.currentSelection.operation.id');\n  let result = state.get(`operations.records.${opId}.fields.${id}.status'}`);\n  return result || \"unplanned\"\n}\n\nfunction setCurrentSelectionStatus({props, state}) {\n\tstate.set('User.currentSelection.status.status', props.value);\n}\n\nfunction setCurrentSelectionStatusMarkerAction({props, state}) {\n\tif (!(!props.marker)){\n\t\tstate.set('User.currentSelection.status.marker', props.marker);\n\t}\n}\n\nfunction setCurrentSelectionStatusTimestampAction({props, state}) {\n\tif (props.timestamp) {\n\t\tstate.set('User.currentSelection.status.timestamp', props.timestamp);\n\t}\n}\n\nfunction saveCurrentSelectionStatusAction({props, state}) {\n\tlet currentOperationID = state.get('User.currentSelection.operation.id');\n  \tlet id = state.get('fields.selectedId');\n  \tlet _status = state.get('User.currentSelection.status.status');\n\n\tstate.set(`operations.records.${currentOperationID}.fields.${id}.status`, _status);\n\n    if(_status === \"unplanned\"){\n\t    state.unset(`${'operations.records.' + currentOperationID + '.fields.' + id}`);\n    }\n    else {\n        //fixing bug when id not present in fields.id.record\n        if(id) {\n            state.set(`${'operations.records.' + currentOperationID + '.fields.' + id + '.id'}`, id);\n\n            if (!state.get(`${'operations.records.' + currentOperationID + '.fields.' + id + '.history'}`)) {\n                state.set(`${'operations.records.' + currentOperationID + '.fields.' + id + '.history'}`, []);\n            }//if\n\n            if (state.get(`${'operations.records.' + currentOperationID + '.fields.' + id + '.history'}`)) {\n                state.unshift(`${'operations.records.' + currentOperationID + '.fields.' + id + '.history'}`, {\n                    status: _status || \"planned\",\n                    marker: state.get('User.currentSelection.status.marker'),\n                    timestamp: state.get('User.currentSelection.status.timestamp')\n                });\n            }\n        }\n    }//else\n}\n\nfunction setCurrentOperation({ props, state }) {\n\tif (!(!(props.item))) {\n\t\tstate.set('User.currentSelection.operation.id', props.item.id);\n\t\tstate.set('User.currentSelection.operation.inputText', props.item.label);\n\t\tstate.set('User.currentSelection.operation.suggestionsOpen', false);\n\t}\n}\n\nfunction clearCurrentOperation({props, state}) {\n\tstate.set('User.currentSelection.operation.id', null);\n}\n\nfunction addNewOperationAction({state}) {\n\tlet _addNewOperation = true;\n\tlet _inputText = state.get('User.currentSelection.operation.inputText');\n\tlet _operations = state.get('operations.records');\n\n\tif(_inputText.length !== 0) {\n        Object.keys(_operations || {}).forEach(function (key) {\n            _inputText === _operations[key].label ? _addNewOperation = false : _addNewOperation = true\n        });\n    }\n    else {\n        _addNewOperation = false;\n\t}\n\n    if(_addNewOperation) {\n        let strUUID = uuid();\n        const operationRecord = {\n            id: strUUID,\n\t\t\tlabel: _inputText,\n            fields: {}\n        };\n        state.set(`${'operations.records.' + strUUID}`, operationRecord);\n        state.set(`${'operations.records.' + strUUID + '.id'}`, strUUID);\n        return {\n            item: operationRecord,\n            data: operationRecord\n        };\n    }//if\n}// addNewOperation\n\nfunction setDisabledNewOperationAction({props, state}){\n    return state.get('User.currentSelection.operation.disabled');\n}\n\nfunction cancelNewOperationAction({state}) {\n\tconst ops_id = state.get('User.currentSelection.operation.id');\n\treturn {item: state.get(`${'operations.records.' + ops_id}`)}\n}\n\nfunction resetCurrentSelectionStatus({props, state}) {\n\tif (!(state.get('fields.editing'))) {\n    let currentOperationFieldStatus = getCurrentOperationFieldStatus({props, state});\n    if (currentOperationFieldStatus) {\n      state.set('User.currentSelection.status.status', currentOperationFieldStatus);\n    }\n\t\tstate.set('User.currentSelection.status.timestamp', timestamp());\n\t\tstate.set('User.currentSelection.status.marker', state.get('User.label'));\n\t}\n}\n","import { Module } from 'cerebral'\n\nimport * as signals from './chains'\n\nexport default Module({\n\nstate : {\n    id: 'servio',\n    label: 'Servio Palacios',\n\n    operations: {},\n\n    fields: {},\n\n    currentSelection: {\n      operation: {\n        id: null,\n        placeholder: 'Operation',\n        suggestionsOpen: false,\n        inputText: '',\n      disabled: false,\n        editing: false,\n      },\n      farm: {\n        id: '',\n        name: '',\n      },\n      field: {\n        id: null,\n        placeholder: 'Field',\n        suggestionsOpen: false,\n        name: '',\n        disabled: false,\n        editing: false,\n        tempObject: null,\n        newFieldDisabled: true\n      },\n      status: {\n        status: null,\n        marker: null,\n        timestamp: null,\n      }\n    },\n\n  },\n\n  signals,\n});\n","let stateTree = {\n\t\tcenter: [40.98551896940516, -86.18823766708374],\n\t\tmoving: false,\n\t\tzoom: 15,\n\t\tisLoading: false,\n\t};\n\nexport default stateTree;","import stateTree from './stateTree.js';\nimport { Module } from 'cerebral';\n\nimport {\n  doneMovingMap,\n  handleLocationFound,\n  handleMapClick,\n  handleMapMoved,\n  startMovingMap,\n  startMarkerDrag,\n  endMarkerDrag,\n  markerDragging,\n  deleteCoordinate,\n  closeSuggestionsAutocomplete\n} from './chains';\n\nexport default Module({\n\tstate: stateTree,\n\n\tsignals: {\n        locationFound: handleLocationFound,\n        mapMoved: [\n            ...handleMapMoved, ...doneMovingMap,\n        ],\n        mapMoveStarted: startMovingMap,\n        mouseDownOnMap: handleMapClick,\n        markerDragStarted: startMarkerDrag,\n        markerDragEnded: endMarkerDrag,\n        markerDragged: markerDragging,\n        deleteCoordinate: deleteCoordinate,\n        closeSuggestionsAutocomplete: closeSuggestionsAutocomplete\n    }\n})\n","import { Module } from 'cerebral';\nimport {\n\thandleDrawerOpen,\n\topenBottomDrawerForStatusUpdate,\n\thandleOperatorMenuOpen,\n\thandleOperatorMenuClose,\n} from './chains';\n\n\nexport default Module({\n\tstate: {\n\t\topen: false,\n\t\tmenu: 'operations',\n\t\toperatorMenuOpen: false,\n\t},\n\n\tsignals: {\n\t\thandleDrawerOpen: handleDrawerOpen,\n\t\topenBottomDrawerForStatusUpdate: openBottomDrawerForStatusUpdate,\n\t\thandleOperatorMenuOpen: handleOperatorMenuOpen,\n\t\thandleOperatorMenuClose: handleOperatorMenuClose,\n\t}\n});\n","import {state} from 'cerebral/tags';\nimport { set } from 'cerebral/operators';\nimport { handleFieldCleared, validateNewFieldButton } from '../fields/sequences';\nimport { setFieldOnMapCenter } from '../MapPanel/chains';\nimport { handleDrawerOpen as handleBottomDrawerOpen } from '../BottomDrawer/chains';\n\nexport var addOperationClicked = [\n  setDisabledNewOperation,\n\tset(state`BottomDrawer.menu`, 'operations'),\n\tset(state`BottomDrawer.open`, true),\n\n];\n\nexport var operationInputTyped = [\n    setDisabledNewOperation,\n\toperationInputTypedAction,\n];\n\nexport var fieldInputTyped = [\n\tfieldInputTypedAction,\n\t...handleFieldCleared,\n];\n\nexport var handleFieldEdited = [\n\thandleFieldEditedAction,\n    ...handleBottomDrawerOpen,\n\t...setFieldOnMapCenter,\n];\n\nexport var handleOperationEdited = [\n\thandleOperationEditedAction,\n];\n\nexport var openSuggestions = [\n\topenSuggestionsAction,\n];\n\nexport var closeSuggestions = [\n\tcloseSuggestionsAction,\n];\n\nfunction openSuggestionsAction({props, state}) {\n\tif (props.id === 'ops-input') {\n\t\tstate.set('User.currentSelection.operation.suggestionsOpen', true);\n\t} else {\n\t\tstate.set('fields.new_field.field.suggestionsOpen', true);\n\t}\n}\n\nfunction closeSuggestionsAction({props, state}) {\n\tif (props.id === 'ops-input') {\n\t    let currentOperationID = state.get('User.currentSelection.operation.id');\n\t    if(currentOperationID) {\n            state.set('User.currentSelection.operation.inputText',\n                state.get(`${'operations.records.' + currentOperationID + '.label'}`));\n        }\n\t\tstate.set('User.currentSelection.operation.suggestionsOpen', false);\n\t} else {\n\t\tstate.set('fields.new_field.field.suggestionsOpen', false);\n\t}\n}\n\n/**\n * Sets the value of the property disabled according to\n * the value of the operation inputText\n * if already exists then disabled will be true (button cannot be clicked)\n * TODO: change this to a hashtable O(1) instead of O(n)\n * @param props\n * @param state\n */\nfunction setDisabledNewOperation({props, state}){\n    /* Disable add button if current operation exists in the state tree */\n    /* fix this with a hash table O(1), the following procedure is inefficient */\n    let _inputText = props.inputText;\n    let _operations = state.get('operations.records');\n    let openBottonDrawer = state.get('BottomDrawer.open');\n    // if the bottomDrawer is still not open then use the following value\n    // state.get('User.currentSelection.operation.inputText');\n    if(!openBottonDrawer){\n    \t_inputText = state.get('User.currentSelection.operation.inputText');\n\t}\n    let _found = false;\n    Object.keys(_operations || {}).forEach(function(key) {\n        //console.log(key, _operations[key]);\n        if(_inputText === _operations[key].label || _inputText.length === 0){\n            state.set('User.currentSelection.operation.disabled', true);\n            _found = true;\n        }\n        else{\n            if(!_found){\n                state.set('User.currentSelection.operation.disabled', false);\n            }\n        }\n    });\n}\n\n/**\n * TODO\n * Modify this code to avoid repeated field's names\n * Sets the value of the property disabled according to\n * the value of the operation inputText\n * if already exists then disabled will be true (button cannot be clicked)\n * @param props\n * @param state\n */\n// function setDisabledNewField({props, state}){\n//     /* maverick */\n//     /* Disable add button if current operation exists in the state tree */\n//     /* fix this with a hash table O(1), the following procedure is inefficient */\n//     let _inputText = props.inputText;\n//     let _operations = state.get('operations.records');\n//     let openBottonDrawer = state.get('BottomDrawer.open');\n//     // if the bottomDrawer is still not open then use the following value\n//     // state.get('User.currentSelection.operation.inputText');\n//     if(!openBottonDrawer){\n//         var id = state.get(`fields.selectedId`);\n//         _inputText = state.get(`fields.records.${id}.name`);\n//     }\n//     let _found = false;\n//     //console.log('input text ', _inputText);\n//     Object.keys(_operations).forEach(function(key) {\n//         //console.log(key, _operations[key]);\n//         if(_inputText === _operations[key].label){\n//             //console.log(\"found key \", key, _operations[key]);\n//             state.set('fields.new_field.field.disabled', true);\n//             _found = true;\n//         }\n//         else{\n//             if(!_found){\n//                 state.set('fields.new_field.field.disabled', false);\n//             }\n//         }\n//     });\n// }\n\nfunction operationInputTypedAction({props, state}) {\n\tstate.set('User.currentSelection.operation.inputText', props.inputText);\n\tstate.set('User.currentSelection.operation.suggestionsOpen', true);\n}\n\nfunction fieldInputTypedAction({props, state}) {\n    let id = state.get(`fields.selectedId`);\n    state.set(`fields.records.${id}.name`, props.inputText);\n    state.set('fields.new_field.field.suggestionsOpen', true);\n}\n\nfunction handleFieldEditedAction({props, state}) {\n    let id = state.get(`fields.selectedId`);\n    let boundary = JSON.parse(JSON.stringify(state.get(`fields.records.${id}.boundary`)));\n    console.log(\"--> copying this boundary into buffer\", boundary);\n    if(boundary && boundary.geojson.coordinates[0].length > 3){\n        state.set('User.currentSelection.field.coordinatesOk', true);\n    }\n    else{\n        state.set('User.currentSelection.field.coordinatesOk', false);\n    }\n\n    validateNewFieldButton({props, state});\n\n    state.set('fields.temp_buffer.boundary', boundary);\n\tstate.set('fields.editing', true);\n    state.set('fields.isNewField', false);\n}\n\nfunction handleOperationEditedAction({props, state}) {\n\tstate.set('User.currentSelection.operation.editing', true);\n}\n\n","import { Module } from 'cerebral';\nimport * as signals from './chains';\n\n\nexport default Module({\n\tstate: {},\n\n\tsignals,\n});\n","// FIXME: make this flexible\n// Add, delete, edit these states\nlet stateTree = {\n    planned: {\n        area: 0,\n      collapse: true,\n      fields: []\n    },\n    started: {\n        area: 0,\n      collapse: true,\n      fields: []\n    },\n    completed: {\n        area: 0,\n      collapse: true,\n      fields: []\n    }\n};\n\nexport default stateTree;","import { Module } from 'cerebral';\nimport stateTree from './stateTree';\n\nimport {\n\tloadData,\n\thandleCollapse,\n} from './chains'\n\nexport default Module({\n\n  state : stateTree,\n\n  signals: {\n  \thandleCollapse: handleCollapse,\n  \tloadData: loadData\n  }\n});\n","import { Module } from 'cerebral';\n\nimport * as signals from './chains'\n\nexport default Module({\n\n  state : {},\n\n  signals,\n});\n","import { Module } from 'cerebral';\nimport * as signals from './chains';\n\nexport default Module({\n\tstate: {},\n\n\tsignals,\n});\n","import { Module } from 'cerebral';\n\nimport {\n  setConnection,\n  cancelConnection,\n  updateOadaDomain,\n  updateOadaFieldsDomain,\n  clearConnection\n} from './chains';\n\nlet _OADA_HOST = \"https://oada.openatk.com\";\nlet _CURRENT_HOST = _OADA_HOST;\n\nexport default Module({\n\n\tstate : {\n\t\toada_domain_text:        _CURRENT_HOST,\n    oada_fields_domain_text: _CURRENT_HOST,\n\t\toada_domain:             _CURRENT_HOST,\n    oada_fields_domain:      _CURRENT_HOST,\n\t\tshow :                   false\n\t}, \n\n\tsignals: {\n\t\tsubmitClicked:           setConnection,\n\t\tcancelClicked:           cancelConnection,\n\t\toadaDomainChanged:       updateOadaDomain,\n    oadaFieldsDomainChanged: updateOadaFieldsDomain,\n    clearConnection:         clearConnection\n  }\n});\n","import { Module } from 'cerebral';\nimport {\n    selectOperation,\n    handleWatchUpdate,\n    handleFieldUpdate\n} from './sequences';\n\nexport default Module({\n\n    state : {\n        records: {},\n        loading: true,\n        connection_id: \"none\",\n        fieldsChanged: false\n    },\n\n    signals: {\n        operationClicked: selectOperation,\n        handleWatchUpdate: handleWatchUpdate,\n        handleFieldUpdate: handleFieldUpdate\n    }\n})","import { Module } from 'cerebral';\nimport * as signals from './sequences';\n\nexport default Module({\n    state : {\n        records: {},\n        farms: {},\n        loading: true,\n        connection_id: 0,\n        new_field: {},\n        editing: false,\n    },\n    signals,\n})\n","export const resized = [\n  ({ state, props }) => {\n    //console.log(\"--> window module state, props-->\", state, props);\n    const orientation = props.width > props.height ? \"landscape\" : \"portrait\";\n    if (state.get(\"window.orientation\") !== orientation) {\n      state.set(\"window.orientation\", orientation);\n    }\n\n    const isSmall =\n      orientation === \"portrait\" ? props.width < 767 : props.height < 500;\n    if (state.get(\"window.isSmall\") !== isSmall)\n      state.set(\"window.isSmall\", isSmall);\n  }\n];\n\nexport const init = [\n  ({ windowSize }) => windowSize.init(\"window.resized\"), // registers event listener for window resize events\n  resized // load dimensions the first time\n];\n","import { Module } from 'cerebral'\n\nimport * as signals from './sequences';\n\nexport default Module({\n  state : {\n    isSmall: true, // changes to true for mobile, false for computer\n    orientation: 'portrait' // portrait | landscape\n  },\n  signals,\n});\n","let stateTree = {\n  open: false,\n  current: \"Item 1\",\n  records: {\n    \"item 1\": {\n      label: \"Item 1\"\n    },\n    \"item 2\": {\n      label: \"Item 2\"\n    },\n    \"item 3\": {\n      label: \"Item 3\"\n    }\n  }\n};\n\nexport default stateTree;","import { state } from \"cerebral/tags\";\nimport { toggle } from \"cerebral/operators\";\n\nexport var handleMenuListOpen = [toggle(state`MenuList.open`)];\n\nexport function setCurrentItem({props, state}){\n  if(props.item)\n    state.set(`MenuList.current`, props.item);\n}","import { Module } from 'cerebral';\nimport stateTree from './stateTree';\n\nimport * as signals from './sequences';\n\nexport default Module({\n  state : stateTree,\n  signals: signals\n});","let stateTree = {\n    planned: {\n        open: false\n    },\n    started: {\n       open: false\n    },\n    completed: {\n       open: false\n    }\n};\n\nexport default stateTree;","import { Module } from 'cerebral';\nimport stateTree from './stateTree';\n\nimport * as signals from './chains';\n\nexport default Module({\n\n    state : stateTree,\n\n    signals: signals\n});","import { Module } from 'cerebral';\n\n/* oada imports */\nimport oadaModule from '@oada/cerebral-module';\nimport oadaProvider from '@oada/cerebral-provider';\nimport oadaFields from '@oada/fields-module/cerebral';\nimport oadaOperators from '@oada/operators-module/cerebral';\n\n/* components/modules */\nimport App from './App';\nimport MenuBar from './MenuBar';\nimport SideDrawer from './SideDrawer';\nimport DataTabs from './DataTabs';\nimport User from './User';\nimport MapPanel from './MapPanel';\nimport BottomDrawer from './BottomDrawer';\nimport AutocompleteSearch from './AutocompleteSearch';\nimport OpsList from './OpsList';\nimport FldList from './FldList';\nimport EditFieldDrawer from './EditFieldDrawer';\nimport Connections from './Connections';\nimport operations from './operations';\nimport fields from './fields';\nimport window from './window';\nimport MenuList from './MenuList';\nimport StatsBar from './StatsBar';\n\nexport default Module({\n\tmodules: {\n\t\tApp,\n\t\twindow,\n    Connections,\n    oada: oadaModule,\n\t\tSideDrawer,\n\t\tMenuBar,\n    StatsBar,\n\t\tDataTabs,\n\t\tUser,\n\t\tMapPanel,\n\t\tBottomDrawer,\n\t\tAutocompleteSearch,\n\t\tOpsList,\n\t\tFldList,\n    fields: oadaFields,\n\t\toperations,\n\t\tfields,\n\t\tEditFieldDrawer,\n    operators: oadaOperators,\n\t\tMenuList\n\t},\n\n  providers: {\n    oada: oadaProvider\n  },\n});\n","import { Controller } from 'cerebral';\nimport root_module from './modules';\nimport { devtoolsPort } from './config';\n\nconst Devtools = (process.env.NODE_ENV === 'production' ?\n\t\t\t\t\tnull :\n\t\t\t\t\trequire('cerebral/devtools').default);\nvar devPort = devtoolsPort;\nif (process.env.NODE_ENV !== 'production') {\n\tdevPort = (devtoolsPort + parseInt(window.location.port, 10) - 3000);\n\tconsole.log('Cerebral Devtools running on Port:', devPort);\n}\n\n/*\nconst controller = Controller({\n\tmodules: {\n\t\tApp,\n\t\tMap,\n\t},\n\tdevtools: Devtools && Devtools({host: 'localhost:8787'})\n})\n*/\n\nexport default Controller(root_module, {\n\tdevtools: process.env.NODE_ENV ? null : Devtools({host: 'localhost:8000'})\n})\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Container } from \"@cerebral/react\";\nimport App from \"./components/App/\";\nimport controller from \"./controller\";\nimport MuiThemeProvider from \"material-ui/styles/MuiThemeProvider\";\nimport \"./index.css\";\n//import injectTapEventPlugin from 'react-tap-event-plugin';\nimport { createMuiTheme } from \"material-ui/styles\";\n\nconst muiTheme = createMuiTheme();\n\n//injectTapEventPlugin();\n\nrender(\n  <Container controller={controller} style={{ height: \"100vh\" }}>\n    <MuiThemeProvider theme={muiTheme}>\n      <App />\n    </MuiThemeProvider>\n  </Container>,\n  document.getElementById(\"root\")\n);\n\nif (module.hot) {\n  module.hot.accept(\"./components/App/\", () => {\n    const NextApp = require(\"./components/App/\").default;\n    render(\n      <Container controller={controller} style={{ height: \"100vh\" }}>\n        <MuiThemeProvider theme={muiTheme}>\n          <NextApp />\n        </MuiThemeProvider>\n      </Container>,\n      document.getElementById(\"root\")\n    );\n  });\n}\n"],"sourceRoot":""}